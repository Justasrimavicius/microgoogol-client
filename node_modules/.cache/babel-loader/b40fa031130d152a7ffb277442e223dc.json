{"ast":null,"code":"import React,{useContext,useEffect}from'react';import UIDContext from'src/UIDContext';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var key=require('key-creator');function LessonOverview(props){var _useContext=useContext(UIDContext),UID=_useContext.UID,setUID=_useContext.setUID;useEffect(function(){var xhr=new XMLHttpRequest();xhr.open(\"POST\",'https://microgoogol.herokuapp.com/saveFinishedLessonData',true);xhr.setRequestHeader('Content-Type','application/json');xhr.send(JSON.stringify({badAnswersArr:props.lessonData.lessonOverview.badAnswersArr,goodAnswersArr:props.lessonData.lessonOverview.goodAnswersArr,sectionNumber:props.sectionNumber,UID:UID}));// xhr.onload = ()=>{\n//     const parsedResponse = JSON.parse(xhr.responseText);\n// }\n},[]);return/*#__PURE__*/_jsx(\"div\",{className:\"lesson-overview\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"lesson-overview-results\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"lesson-overview-title\",children:\"These are your results\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"percentage\",children:[\"Percentage of answers gotten right: \",props.lessonData.lessonOverview.goodAnswersArr.length/(props.lessonData.lessonOverview.goodAnswersArr.length+props.lessonData.lessonOverview.badAnswersArr.length)*100,\"%\"]}),/*#__PURE__*/_jsx(\"p\",{className:\"wrongQ\",children:\"The question/s you have got wrong:\"}),props.lessonData.lessonOverview.badAnswersArr.length==0?/*#__PURE__*/_jsx(\"p\",{className:\"maxScore\",children:\"congratulations on the max score!\"}):null,props.lessonData.lessonOverview.badAnswersArr.map(function(badAnswer,index){if(badAnswer.hasOwnProperty('questionObject')&&(badAnswer.questionObject.questionFormat=='SelectOne'||badAnswer.questionObject.questionFormat=='SelectMultiple')){// singleSelectBadAnswer type\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"single-badAnswer\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"badAnswer-title\",children:badAnswer.questionTitle}),/*#__PURE__*/_jsxs(\"div\",{className:\"answers\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"wys\",children:\"What you selected:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"single-badAnswer-userAnsweredWords\",children:badAnswer.answeredWord.map(function(singleAnswer,i){return/*#__PURE__*/_jsx(\"p\",{children:singleAnswer},key.generate());})}),/*#__PURE__*/_jsx(\"p\",{className:\"tca\",children:\"The correct answer/s:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"single-badAnswer-correctWords\",children:badAnswer.questionObject.correctAnswer.map(function(singleAnswer,i){return/*#__PURE__*/_jsx(\"p\",{children:singleAnswer},key.generate());})})]})]},key.generate());}else if(badAnswer.questionFormat=='DragAndDrop'){// singleDnDBadAnswer type\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"single-badAnswer\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"badAnswer-title\",children:badAnswer.title}),/*#__PURE__*/_jsxs(\"div\",{className:\"answers\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"wys\",children:\"Words given:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"single-badAnswer-userAnsweredWords\",children:badAnswer.possibleAnswers.map(function(singleAnswer,i){return/*#__PURE__*/_jsx(\"p\",{children:singleAnswer},key.generate());})}),/*#__PURE__*/_jsx(\"p\",{className:\"tca\",children:\"Correct order:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"single-badAnswer-correctWords\",children:badAnswer.correctAnswer.map(function(singleAnswer,i){return/*#__PURE__*/_jsx(\"p\",{children:singleAnswer},key.generate());})})]})]},parseFloat(badAnswer.title));}}),/*#__PURE__*/_jsx(\"button\",{className:\"lesson-overview-backBtn\",onClick:function onClick(){props.lessonData.setLessonOverview(false);props.returnToMain();},children:\"Back to the main path\"})]})});}export default LessonOverview;","map":{"version":3,"names":["React","useContext","useEffect","UIDContext","key","require","LessonOverview","props","UID","setUID","xhr","XMLHttpRequest","open","setRequestHeader","send","JSON","stringify","badAnswersArr","lessonData","lessonOverview","goodAnswersArr","sectionNumber","length","map","badAnswer","index","hasOwnProperty","questionObject","questionFormat","questionTitle","answeredWord","singleAnswer","i","generate","correctAnswer","title","possibleAnswers","parseFloat","setLessonOverview","returnToMain"],"sources":["/Users/justinas/Documents/repos/microgogool/client/src/Components/ContentSecComponents/LessonOverview.tsx"],"sourcesContent":["import React, { useContext, useEffect, useRef } from 'react';\nimport UIDContext from 'src/UIDContext';\nconst key = require('key-creator');\n\ninterface props{\n    lessonData: any,\n    returnToMain: any,\n    sectionNumber: number\n}\ninterface singleSelectBadAnswer{\n    questionTitle: string,\n    questionObject: {\n        correctAnswer: string[],\n        possibleAnswers: string[],\n        questionFormat: string,\n        title: string\n    },\n    answeredWord: string[]\n}\ninterface singleDnDBadAnswer{\n    correctAnswer: string[],\n    possibleAnswers: string[],\n    questionFormat: string,\n    title: string\n}\n\ninterface anyBadAnswer extends singleSelectBadAnswer, singleDnDBadAnswer {}\n\n\n\nfunction LessonOverview(props: props) {\n\n    const { UID, setUID } = useContext(UIDContext);\n\n    useEffect(()=>{\n        let xhr = new XMLHttpRequest();\n        xhr.open(\"POST\", 'https://microgoogol.herokuapp.com/saveFinishedLessonData', true);\n        xhr.setRequestHeader('Content-Type', 'application/json');\n        xhr.send(JSON.stringify({\n            badAnswersArr: props.lessonData.lessonOverview.badAnswersArr,\n            goodAnswersArr: props.lessonData.lessonOverview.goodAnswersArr,\n            sectionNumber: props.sectionNumber,\n            UID: UID,\n        }));\n\n        // xhr.onload = ()=>{\n        //     const parsedResponse = JSON.parse(xhr.responseText);\n        // }\n    },[])\n\n    return (\n        <div className='lesson-overview'>\n            <div className='lesson-overview-results'>\n            <p className='lesson-overview-title'>These are your results</p>\n\n                <p className='percentage'>Percentage of answers gotten right: {props.lessonData.lessonOverview.goodAnswersArr.length / (props.lessonData.lessonOverview.goodAnswersArr.length + props.lessonData.lessonOverview.badAnswersArr.length) * 100}%</p>\n                <p className='wrongQ'>The question/s you have got wrong:</p>\n                {props.lessonData.lessonOverview.badAnswersArr.length==0 ? <p className='maxScore'>congratulations on the max score!</p> : null}\n                {props.lessonData.lessonOverview.badAnswersArr.map((badAnswer: anyBadAnswer, index: number)=>{\n                    if(badAnswer.hasOwnProperty('questionObject') && (badAnswer.questionObject.questionFormat == 'SelectOne' || badAnswer.questionObject.questionFormat == 'SelectMultiple')){\n                        // singleSelectBadAnswer type\n                        return(\n                            <div className='single-badAnswer' key={key.generate()}>\n                                <p className='badAnswer-title'>{badAnswer.questionTitle}</p>\n                                <div className='answers'>\n                                    <p className='wys'>What you selected:</p>\n                                    <div className='single-badAnswer-userAnsweredWords'>\n                                        {badAnswer.answeredWord.map((singleAnswer: string, i: number)=>{\n                                            return(\n                                                <p key={key.generate()}>{singleAnswer}</p>\n                                            )\n                                        })}\n                                    </div>\n                                    <p className='tca'>The correct answer/s:</p>\n                                    <div className='single-badAnswer-correctWords'>\n                                        {badAnswer.questionObject.correctAnswer.map((singleAnswer: string, i: number)=>{\n                                            return(\n                                                <p key={key.generate()}>{singleAnswer}</p>\n                                            )\n                                        })}\n                                    </div>\n                                </div>\n                            </div>\n                        )\n                    } else if(badAnswer.questionFormat=='DragAndDrop'){\n                        // singleDnDBadAnswer type\n                        return(\n                            <div className='single-badAnswer' key={parseFloat(badAnswer.title)}>\n                                <p className='badAnswer-title'>{badAnswer.title}</p>\n                                <div className='answers'>\n                                    <p className='wys'>Words given:</p>\n                                    <div className='single-badAnswer-userAnsweredWords'>\n                                        {badAnswer.possibleAnswers.map((singleAnswer: string, i: number)=>{\n                                            return(\n                                                <p key={key.generate()}>{singleAnswer}</p>\n                                            )\n                                        })}\n                                    </div>\n                                    <p className='tca'>Correct order:</p>\n                                    <div className='single-badAnswer-correctWords'>\n                                        {badAnswer.correctAnswer.map((singleAnswer: string, i: number)=>{\n                                            return(\n                                                <p key={key.generate()}>{singleAnswer}</p>\n                                            )\n                                        })}\n                                    </div>\n                                </div>\n                            </div>\n                        )\n                    }\n            \n                })}\n                <button className='lesson-overview-backBtn' onClick={()=>{props.lessonData.setLessonOverview(false);props.returnToMain()}}>Back to the main path</button>\n            </div>\n        </div>\n    );\n}\n\nexport default LessonOverview;"],"mappings":"AAAA,MAAOA,MAAK,EAAIC,UAAU,CAAEC,SAAS,KAAgB,OAAO,CAC5D,MAAOC,WAAU,KAAM,gBAAgB,CAAC,wFACxC,GAAMC,IAAG,CAAGC,OAAO,CAAC,aAAa,CAAC,CA4BlC,QAASC,eAAc,CAACC,KAAY,CAAE,CAElC,gBAAwBN,UAAU,CAACE,UAAU,CAAC,CAAtCK,GAAG,aAAHA,GAAG,CAAEC,MAAM,aAANA,MAAM,CAEnBP,SAAS,CAAC,UAAI,CACV,GAAIQ,IAAG,CAAG,GAAIC,eAAc,EAAE,CAC9BD,GAAG,CAACE,IAAI,CAAC,MAAM,CAAE,0DAA0D,CAAE,IAAI,CAAC,CAClFF,GAAG,CAACG,gBAAgB,CAAC,cAAc,CAAE,kBAAkB,CAAC,CACxDH,GAAG,CAACI,IAAI,CAACC,IAAI,CAACC,SAAS,CAAC,CACpBC,aAAa,CAAEV,KAAK,CAACW,UAAU,CAACC,cAAc,CAACF,aAAa,CAC5DG,cAAc,CAAEb,KAAK,CAACW,UAAU,CAACC,cAAc,CAACC,cAAc,CAC9DC,aAAa,CAAEd,KAAK,CAACc,aAAa,CAClCb,GAAG,CAAEA,GACT,CAAC,CAAC,CAAC,CAEH;AACA;AACA;AACJ,CAAC,CAAC,EAAE,CAAC,CAEL,mBACI,YAAK,SAAS,CAAC,iBAAiB,uBAC5B,aAAK,SAAS,CAAC,yBAAyB,wBACxC,UAAG,SAAS,CAAC,uBAAuB,oCAA2B,cAE3D,WAAG,SAAS,CAAC,YAAY,kDAAsCD,KAAK,CAACW,UAAU,CAACC,cAAc,CAACC,cAAc,CAACE,MAAM,EAAIf,KAAK,CAACW,UAAU,CAACC,cAAc,CAACC,cAAc,CAACE,MAAM,CAAGf,KAAK,CAACW,UAAU,CAACC,cAAc,CAACF,aAAa,CAACK,MAAM,CAAC,CAAG,GAAG,OAAM,cACjP,UAAG,SAAS,CAAC,QAAQ,gDAAuC,CAC3Df,KAAK,CAACW,UAAU,CAACC,cAAc,CAACF,aAAa,CAACK,MAAM,EAAE,CAAC,cAAG,UAAG,SAAS,CAAC,UAAU,+CAAsC,CAAG,IAAI,CAC9Hf,KAAK,CAACW,UAAU,CAACC,cAAc,CAACF,aAAa,CAACM,GAAG,CAAC,SAACC,SAAuB,CAAEC,KAAa,CAAG,CACzF,GAAGD,SAAS,CAACE,cAAc,CAAC,gBAAgB,CAAC,GAAKF,SAAS,CAACG,cAAc,CAACC,cAAc,EAAI,WAAW,EAAIJ,SAAS,CAACG,cAAc,CAACC,cAAc,EAAI,gBAAgB,CAAC,CAAC,CACrK;AACA,mBACI,aAAK,SAAS,CAAC,kBAAkB,wBAC7B,UAAG,SAAS,CAAC,iBAAiB,UAAEJ,SAAS,CAACK,aAAa,EAAK,cAC5D,aAAK,SAAS,CAAC,SAAS,wBACpB,UAAG,SAAS,CAAC,KAAK,gCAAuB,cACzC,YAAK,SAAS,CAAC,oCAAoC,UAC9CL,SAAS,CAACM,YAAY,CAACP,GAAG,CAAC,SAACQ,YAAoB,CAAEC,CAAS,CAAG,CAC3D,mBACI,mBAAyBD,YAAY,EAA7B3B,GAAG,CAAC6B,QAAQ,EAAE,CAAoB,CAElD,CAAC,CAAC,EACA,cACN,UAAG,SAAS,CAAC,KAAK,mCAA0B,cAC5C,YAAK,SAAS,CAAC,+BAA+B,UACzCT,SAAS,CAACG,cAAc,CAACO,aAAa,CAACX,GAAG,CAAC,SAACQ,YAAoB,CAAEC,CAAS,CAAG,CAC3E,mBACI,mBAAyBD,YAAY,EAA7B3B,GAAG,CAAC6B,QAAQ,EAAE,CAAoB,CAElD,CAAC,CAAC,EACA,GACJ,GAnB6B7B,GAAG,CAAC6B,QAAQ,EAAE,CAoB/C,CAEd,CAAC,IAAM,IAAGT,SAAS,CAACI,cAAc,EAAE,aAAa,CAAC,CAC9C;AACA,mBACI,aAAK,SAAS,CAAC,kBAAkB,wBAC7B,UAAG,SAAS,CAAC,iBAAiB,UAAEJ,SAAS,CAACW,KAAK,EAAK,cACpD,aAAK,SAAS,CAAC,SAAS,wBACpB,UAAG,SAAS,CAAC,KAAK,0BAAiB,cACnC,YAAK,SAAS,CAAC,oCAAoC,UAC9CX,SAAS,CAACY,eAAe,CAACb,GAAG,CAAC,SAACQ,YAAoB,CAAEC,CAAS,CAAG,CAC9D,mBACI,mBAAyBD,YAAY,EAA7B3B,GAAG,CAAC6B,QAAQ,EAAE,CAAoB,CAElD,CAAC,CAAC,EACA,cACN,UAAG,SAAS,CAAC,KAAK,4BAAmB,cACrC,YAAK,SAAS,CAAC,+BAA+B,UACzCT,SAAS,CAACU,aAAa,CAACX,GAAG,CAAC,SAACQ,YAAoB,CAAEC,CAAS,CAAG,CAC5D,mBACI,mBAAyBD,YAAY,EAA7B3B,GAAG,CAAC6B,QAAQ,EAAE,CAAoB,CAElD,CAAC,CAAC,EACA,GACJ,GAnB6BI,UAAU,CAACb,SAAS,CAACW,KAAK,CAAC,CAoB5D,CAEd,CAEJ,CAAC,CAAC,cACF,eAAQ,SAAS,CAAC,yBAAyB,CAAC,OAAO,CAAE,kBAAI,CAAC5B,KAAK,CAACW,UAAU,CAACoB,iBAAiB,CAAC,KAAK,CAAC,CAAC/B,KAAK,CAACgC,YAAY,EAAE,EAAE,mCAA+B,GACvJ,EACJ,CAEd,CAEA,cAAejC,eAAc"},"metadata":{},"sourceType":"module"}