[{"/Users/justinas/Documents/repos/microgogool/client/src/Components/Authentication/Login.tsx":"1","/Users/justinas/Documents/repos/microgogool/client/src/Components/Authentication/Signup.tsx":"2","/Users/justinas/Documents/repos/microgogool/client/src/Components/Authentication/Authentication.tsx":"3","/Users/justinas/Documents/repos/microgogool/client/src/Components/ContentSecComponents/MainPath.tsx":"4","/Users/justinas/Documents/repos/microgogool/client/src/Components/LoadingScreen.tsx":"5","/Users/justinas/Documents/repos/microgogool/client/src/App.tsx":"6","/Users/justinas/Documents/repos/microgogool/client/src/Components/MainSections/Footer.tsx":"7","/Users/justinas/Documents/repos/microgogool/client/src/Components/MainSections/Header.tsx":"8","/Users/justinas/Documents/repos/microgogool/client/src/Components/MainSections/Content.tsx":"9","/Users/justinas/Documents/repos/microgogool/client/src/index.tsx":"10","/Users/justinas/Documents/repos/microgogool/client/src/Components/ContentSecComponents/SectionLessons.tsx":"11","/Users/justinas/Documents/repos/microgogool/client/src/Components/ContentSecComponents/ShopTab.tsx":"12","/Users/justinas/Documents/repos/microgogool/client/src/Components/ContentSecComponents/MistakesTab.tsx":"13","/Users/justinas/Documents/repos/microgogool/client/src/Components/ErrorComponent.tsx":"14","/Users/justinas/Documents/repos/microgogool/client/src/Components/ContentSecComponents/LoadQuestions.tsx":"15","/Users/justinas/Documents/repos/microgogool/client/src/Components/ContentSecComponents/LessonOverview.tsx":"16","/Users/justinas/Documents/repos/microgogool/client/src/UIDContext.ts":"17","/Users/justinas/Documents/repos/microgogool/client/src/Components/ContentSecComponents/MainRightDailyStreak.tsx":"18","/Users/justinas/Documents/repos/microgogool/client/src/Components/ContentSecComponents/MainRightScore.tsx":"19","/Users/justinas/Documents/repos/microgogool/client/src/Components/UserIconDisplay.tsx":"20","/Users/justinas/Documents/repos/microgogool/client/src/Components/HOC_Overlay.tsx":"21","/Users/justinas/Documents/repos/microgogool/client/src/xhrLink.ts":"22"},{"size":1806,"mtime":1668427691871,"results":"23","hashOfConfig":"24"},{"size":2295,"mtime":1668427691871,"results":"25","hashOfConfig":"24"},{"size":1242,"mtime":1666005625818,"results":"26","hashOfConfig":"24"},{"size":1962,"mtime":1666939305116,"results":"27","hashOfConfig":"24"},{"size":581,"mtime":1667459776892,"results":"28","hashOfConfig":"24"},{"size":1607,"mtime":1667485110858,"results":"29","hashOfConfig":"24"},{"size":470,"mtime":1666596947486,"results":"30","hashOfConfig":"24"},{"size":1235,"mtime":1668265836720,"results":"31","hashOfConfig":"24"},{"size":7423,"mtime":1668544574403,"results":"32","hashOfConfig":"24"},{"size":287,"mtime":1666006422078,"results":"33","hashOfConfig":"24"},{"size":2894,"mtime":1667056922177,"results":"34","hashOfConfig":"24"},{"size":3822,"mtime":1668546316794,"results":"35","hashOfConfig":"24"},{"size":5895,"mtime":1668501298549,"results":"36","hashOfConfig":"24"},{"size":285,"mtime":1666686067841,"results":"37","hashOfConfig":"24"},{"size":18146,"mtime":1667156714612,"results":"38","hashOfConfig":"24"},{"size":5668,"mtime":1668501292663,"results":"39","hashOfConfig":"24"},{"size":283,"mtime":1667283868930,"results":"40","hashOfConfig":"24"},{"size":1048,"mtime":1668501295345,"results":"41","hashOfConfig":"24"},{"size":2195,"mtime":1668501296966,"results":"42","hashOfConfig":"24"},{"size":876,"mtime":1668500957947,"results":"43","hashOfConfig":"24"},{"size":664,"mtime":1667492667708,"results":"44","hashOfConfig":"24"},{"size":113,"mtime":1668544594981,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},"1n3nl90",{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"59"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"59"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":42,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"59"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/justinas/Documents/repos/microgogool/client/src/Components/Authentication/Login.tsx",["122","123"],[],"import React, { useContext, useEffect } from 'react';\nimport { useState } from 'react';\n\nimport UIDContext from 'src/UIDContext';\n\nimport link from '../../xhrLink';\n\nfunction Login(props: any){\n    \n    const [authErrorMsg, setAuthErrorMsg] = useState('');\n\n    const { UID, setUID } = useContext(UIDContext);\n    function submitForm(e: React.FormEvent<HTMLFormElement>){\n        e.preventDefault();\n        let xhr = new XMLHttpRequest();\n        xhr.open(\"POST\", `${link}/login`, true);\n\n        xhr.setRequestHeader('Content-Type', 'application/json');\n        xhr.send(JSON.stringify({\n            email: e.currentTarget.email.value,\n            password: e.currentTarget.password.value\n        }));\n\n        xhr.onload = ()=>{\n            const parsedResponse = JSON.parse(xhr.responseText);\n            if(parsedResponse.UID){\n                setUID(parsedResponse.UID);\n            } else {\n                setAuthErrorMsg(xhr.responseText);\n            }\n        }\n    }\n\n    return (\n        <div className='login-component'>\n        <form onSubmit={(e)=>{submitForm(e)}}>\n            <p>Log in with your credentials</p>\n            <div className='login-comoponent-inputHolder'>\n                <label htmlFor='email'>Email:</label>\n                <input id='email' name='email'></input>\n                <label htmlFor='password'>Password:</label>\n                <input id='password' name='password' type='password'></input>\n            </div>\n            <p className='auth-component-errorMsg'>{authErrorMsg.slice(1,authErrorMsg.length-1)}</p>\n            <button className='button'>Log in</button>\n            <button className='auth-goBack-btn' type='button' onClick={()=>{props.authState.setAuthButton('default')}}>Go back</button>\n        </form>\n    </div>\n    );\n}\n\nexport default Login;",[],"/Users/justinas/Documents/repos/microgogool/client/src/Components/Authentication/Signup.tsx",["124"],[],"import React, { useState, useContext } from 'react';\n\nimport UIDContext from 'src/UIDContext';\n\nimport link from 'src/xhrLink';\n\nfunction Signup(props: any) {\n\n    const [authErrorMsg, setAuthErrorMsg] = useState('');\n\n    const { UID, setUID } = useContext(UIDContext);\n\n    async function checkSubmit(e: React.FormEvent<HTMLFormElement>){\n        e.preventDefault();\n        let xhr = new XMLHttpRequest();\n        xhr.open(\"POST\", `${link}/signup`, true);\n\n        xhr.setRequestHeader('Content-Type', 'application/json');\n        xhr.send(JSON.stringify({\n            email: e.currentTarget.email.value,\n            emailR: e.currentTarget.emailR.value,\n            password: e.currentTarget.password.value,\n            passwordR: e.currentTarget.passwordR.value\n        }));\n\n        xhr.onload = ()=>{\n            const parsedResponse = JSON.parse(xhr.responseText);\n            if(parsedResponse.UID){\n                setUID(parsedResponse.UID);\n            } else {\n                setAuthErrorMsg(parsedResponse);\n            }\n        }\n    }\n\n    return (\n        <div className='signup-component'>\n            <form onSubmit={(e)=>{checkSubmit(e)}}>\n                <p>Fill in the form</p>\n                <div className='signup-component-emailDiv'>\n                    <label htmlFor='email'>Email:</label>\n                    <input id='email' name='email'></input>\n                    <label htmlFor='emailR'>Repeat email:</label>\n                    <input id='emailR' name='emailR'></input>\n                </div>\n                <div className='signup-component-passwordDiv'>\n                    <label htmlFor='password' typeof='password'>Password:</label>\n                    <input id='password' name='password' type='password'></input>\n                    <label htmlFor='passwordR' typeof='password'>Repeat password:</label>\n                    <input id='passwordR' name='passwordR' type='password'></input>\n                </div>\n                <p className='auth-component-errorMsg'>{authErrorMsg}</p>\n                <button className='button'>Sign up</button>\n                <button className='auth-goBack-btn' type='button' onClick={()=>{props.authState.setAuthButton('default')}}>Go back</button>\n            </form>\n        </div>\n    );\n}\nexport default Signup;","/Users/justinas/Documents/repos/microgogool/client/src/Components/Authentication/Authentication.tsx",["125","126","127"],[],"import React, { useEffect, useState } from 'react';\n\nimport Login from './Login';\nimport Signup from './Signup';\n\ninterface props{\n    props: {setAuthenticated: React.Dispatch<React.SetStateAction<boolean>>}\n}\n\nfunction Authentication(props: props) {\n\n    const [authButton, setAuthButton] = useState('default');\n\n    return (\n        <div className='authentication'>\n            <div>\n                <p className='welcome-text'>Welcome to Microgoogol - a language learning platform!</p>\n                <div className='auth-inputs-holder'>\n                    {\n                    authButton==\"default\" ? \n                    \n                    <> <button onClick={()=>{setAuthButton('signup')}}>Sign up</button>\n                    <button onClick={()=>{setAuthButton('login')}}>Log in</button> </> \n                    :\n                    <> {\n                        authButton=='login' ?\n                        <Login authState={{setAuthButton}} setAuthenticated={props.props.setAuthenticated}/>\n                        :\n                        <Signup authState={{setAuthButton}}/>\n                    } </>\n                    }\n\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Authentication;",[],"/Users/justinas/Documents/repos/microgogool/client/src/Components/ContentSecComponents/MainPath.tsx",["128","129"],[],"import React, { LegacyRef, useEffect, useState } from 'react';\n\ninterface allSectionsData{\n    secNum: number,\n    secDescr: string,\n    individualLessons: {\n        [key: string]: string\n    }\n}\ninterface props{\n    sectionLessons: {\n        sectionNum: number,\n        setSectionNum: React.Dispatch<React.SetStateAction<number>>\n    },\n    refs: {mainPathRef: LegacyRef<HTMLDivElement>}\n    allSectionsDataState:{\n    allSectionsData: any,\n    setAllSectionsData: React.Dispatch<React.SetStateAction<allSectionsData[]>>\n    }\n}\n\nfunction MainPath(props: props) {\n\n    const [allSectionsData, setAllSectionsData] = useState<allSectionsData[]>(props.allSectionsDataState.allSectionsData);\n\n    useEffect(()=>{\n        props.sectionLessons.setSectionNum(-1);\n    })\n\n\n    return (\n        <div className='main-path' ref={props.refs.mainPathRef}>\n            {allSectionsData.map((singleSection,index)=>{\n                return(\n                <div className={`section-${singleSection.secNum}`} key={`${index}`}>\n                    <div className='section-name-div'>\n                        <p>section {singleSection.secNum}: {singleSection.secDescr}</p>\n                        <button onClick={()=>{props.sectionLessons.setSectionNum(singleSection.secNum)}} data-testid={`startBtn${index}`}>Start</button>\n                    </div>\n                    <div className='sections-lesson'>\n                    {\n                        Object.entries(singleSection.individualLessons).map((singleLesson,lessonIndex)=>{\n                            if(typeof(singleLesson[1]) !== 'string')return;\n                            return(\n                                <button key={`${lessonIndex}-btn`}><p>Lesson {singleLesson[0].slice(6,7)}: {singleLesson[1]}</p></button>\n                            )\n                        })\n                    }\n                    </div>\n                </div>)\n            })}\n        </div>\n    );\n}\n\nexport default MainPath;","/Users/justinas/Documents/repos/microgogool/client/src/Components/LoadingScreen.tsx",[],[],"/Users/justinas/Documents/repos/microgogool/client/src/App.tsx",["130","131"],[],"import Header from \"./Components/MainSections/Header\";\nimport Footer from \"./Components/MainSections/Footer\";\nimport Content from \"src/Components/MainSections/Content\";\nimport Authentication from \"./Components/Authentication/Authentication\";\nimport LoadingScreen from \"./Components/LoadingScreen\";\n\n// CSS imports\nimport './Styles/FooterStyles.css';\nimport './Styles/HeaderStyles.css';\nimport './Styles/ContentStyles.css';\nimport './Styles/AuthenticationStyles.css';\nimport './Styles/LoadingScreenStyles.css';\nimport './Styles/MainStyles.css';\nimport './Styles/LessonOverviewStyles.css';\nimport './Styles/MistakesTabStyles.css';\n\nimport { useEffect, useState } from \"react\";\nimport React from \"react\";\nimport UIDContext from 'src/UIDContext';\n\nfunction App() {\n  \n  const [UID, setUID] = useState('');\n  const [authenticated, setAuthenticated] = useState(false);\n\n  // mainPath, specificSection, mistakesTab or shopTab\n  const [centerPathContent, loadCenterPathContent] = useState<string>('');\n\n  useEffect(()=>{\n    if(UID!=''){\n      console.log(UID);\n      setAuthenticated(true);\n    }\n  },[UID])\n\n  return (\n        <UIDContext.Provider value={{UID,setUID}} >\n        <div className=\"App\">\n            {\n            !authenticated ? <Authentication props={{setAuthenticated}}/>\n            :<>\n            <Header centerPathContentProp={{centerPathContent, loadCenterPathContent}}/>\n\n            <Content centerPathContentProp={{centerPathContent, loadCenterPathContent}}/>\n\n            <Footer />\n            </>\n            }\n        </div>\n        </UIDContext.Provider>\n\n  );\n}\nexport default App;\n","/Users/justinas/Documents/repos/microgogool/client/src/Components/MainSections/Footer.tsx",[],[],"/Users/justinas/Documents/repos/microgogool/client/src/Components/MainSections/Header.tsx",["132","133"],[],"/Users/justinas/Documents/repos/microgogool/client/src/Components/MainSections/Content.tsx",["134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157"],[],"/Users/justinas/Documents/repos/microgogool/client/src/index.tsx",[],[],"/Users/justinas/Documents/repos/microgogool/client/src/Components/ContentSecComponents/SectionLessons.tsx",["158","159","160","161","162"],[],"import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport ErrorComponent from '../ErrorComponent';\nimport LoadQuestions from './LoadQuestions';\n\ninterface props{\n    sectionNum: number,\n    specificSectionsData: {\n        secNum: number, secDescr: string, individualLessons: {\n            correctAnswer?: string[],\n            possibleAnswers?: string[],\n            questionFormat?: string,\n            title?: string\n        }\n    }\n    goBack: {\n        loadCenterPathContent: React.Dispatch<React.SetStateAction<string>>\n    }\n    errorMessage:{\n        setErrorMessage: any\n    }\n}\n\nfunction SectionLessons(props: props) {\n\n\n    const lessonsDivRef = useRef<HTMLDivElement>(null);\n\n    const [arrayIndividualLessons, setArrayIndividualLessons] = useState<any>(Object.entries(props.specificSectionsData.individualLessons));\n\n    const [errorMessage, setErrorMessage] = useState<string>('');\n    const [errorHandling, startErrorHandling] = useState<boolean>(false);\n\n    useEffect(()=>{\n        setTimeout(() => {\n            if(lessonsDivRef.current!=null){\n                lessonsDivRef.current.classList.add('lessons-div');\n                setTimeout(() => {\n                    if(lessonsDivRef.current!=null){\n                        lessonsDivRef.current.classList.remove('lessons-div-fadeInAnim');\n                    }\n                }, 2000);\n            }   \n        }, 100);\n\n    },[]);\n\n    useEffect(()=>{\n        if(errorMessage!=''){\n            setTimeout(() => {\n                setErrorMessage('');\n                startErrorHandling(false);\n            }, 2000);\n        }\n    },[errorMessage])\n\n    function returnToMain(){\n        const mainPath = document.querySelector('.main-path') as HTMLElement;\n        lessonsDivRef.current?.classList.add('lessons-div-fadeOutAnim');\n        lessonsDivRef.current?.classList.remove('lessons-div');\n        setTimeout(() => {\n            props.goBack.loadCenterPathContent('mainPath');\n        }, 1000);\n    }\n    \n    return (\n        <React.Fragment>\n            <div className='lessons-div-fadeInAnim' ref={lessonsDivRef}>\n                {errorMessage!='' ? <ErrorComponent message={errorMessage} /> : null}\n                <div className='single-lesson'>\n                <LoadQuestions props={{arrayIndividualLessons}} sectionNumber={props.specificSectionsData.secNum} handleError={{setErrorMessage, startErrorHandling, errorHandling}} returnToMain={returnToMain}/>\n                    <div className='single-lesson-buttons'>\n                        <button className='lesson-answer-submit' onClick={()=>{startErrorHandling(true)}}>Submit the answers</button>\n                        <button className='lesson-go-back' onClick={()=>{returnToMain()}}>Go back</button>\n                    </div>\n                </div>\n            </div>\n        </React.Fragment>\n\n    );\n}\n\nexport default SectionLessons;","/Users/justinas/Documents/repos/microgogool/client/src/Components/ContentSecComponents/ShopTab.tsx",["163","164","165","166","167","168","169"],[],"/Users/justinas/Documents/repos/microgogool/client/src/Components/ContentSecComponents/MistakesTab.tsx",["170","171","172","173","174","175","176","177","178"],[],"/Users/justinas/Documents/repos/microgogool/client/src/Components/ErrorComponent.tsx",[],[],"/Users/justinas/Documents/repos/microgogool/client/src/Components/ContentSecComponents/LoadQuestions.tsx",["179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220"],[],"import { type } from 'os';\nimport React, { useEffect, useRef, useState } from 'react';\nimport LessonOverview from '../ContentSecComponents/LessonOverview';\n\ninterface questionInfoObj{\n    correctAnswer: string[],\n    possibleAnswers: string[],\n    questionFormat: string,\n    title: string\n}\ninterface selectedAnswersArrInterface{\n    questionTitle: string,\n    answeredWord: string[],\n    questionObject: any\n}\nfunction LoadQuestions(props: any): React.ReactElement | null{\n\n    const [lessonOverview, setLessonOverview] = useState<object | null>(null);\n\n    const questionCounterRef: {current: number} = {\n        current: -1\n    };\n\n    let lessonNumber = 0;\n\n    const selectedAnswersArr = useRef<selectedAnswersArrInterface[]>([]);\n\n    useEffect(()=>{\n        if(props.handleError.errorHandling!=false){\n            checkAnswers();\n        }\n    },[props.handleError.errorHandling])\n\n    function MainCall(): React.ReactElement | undefined{\n    if(!props.props.arrayIndividualLessons[questionCounterRef.current]){\n        if(questionCounterRef.current>=props.props.arrayIndividualLessons.length)return;\n        else {\n            questionCounterRef.current++;\n            return MainCall();\n        }\n    } else {\n\n        // still elements left in the array\n        if(props.props.arrayIndividualLessons[questionCounterRef.current][1].title){\n            // the element (props.props.arrayIndividualLessons[questionsCounterRef.current][1]) is question element - its second array elements contains info about questions\n            lessonNumber = props.props.arrayIndividualLessons[questionCounterRef.current][0].slice(6,7);\n            if(props.props.arrayIndividualLessons[questionCounterRef.current][1].questionFormat=='SelectOne'){\n\n                return LoadQuestion_SelectOne(props.props.arrayIndividualLessons[questionCounterRef.current][1]);\n            }\n            if(props.props.arrayIndividualLessons[questionCounterRef.current][1].questionFormat=='SelectMultiple'){\n                return LoadQuestion_SelectMultiple(props.props.arrayIndividualLessons[questionCounterRef.current][1]);\n            }\n            if(props.props.arrayIndividualLessons[questionCounterRef.current][1].questionFormat=='DragAndDrop'){\n                return loadQuestion_DragAndDrop(props.props.arrayIndividualLessons[questionCounterRef.current][1]);\n            }\n        } else {\n            questionCounterRef.current++;\n            return MainCall();\n        }\n    }\n    }\n\n    function LoadQuestion_SelectOne(questionInfoObj: questionInfoObj){\n        questionCounterRef.current++;\n        const answersSelectedSO = useRef<HTMLElement[]>([]);\n\n        const possibleAnswersNum = questionInfoObj.correctAnswer.length;\n\n        function answer_SO_Selected(id: string, title: string){\n            // clicked element\n            const selectedElement = document.getElementById(id);\n\n            if(selectedElement==null){\n                return;\n            }\n            // if user clicks the same answer, remove if from selected answers array and remove its answered class\n            if(answersSelectedSO.current.includes(selectedElement)){\n                answersSelectedSO.current.map((element,index: number)=>{\n                    if(element==selectedElement){\n                        answersSelectedSO.current.splice(index,1);\n                        selectedElement.classList.remove('singlePossibleAnswer-selected');\n                    }\n                })\n                selectedAnswersArr.current.map((singleAnsweredQuestion: any,index: number)=>{\n                    if(title==singleAnsweredQuestion.questionTitle){\n                        const wordIndex = singleAnsweredQuestion.answeredWord.indexOf(selectedElement.innerText);\n                        singleAnsweredQuestion.answeredWord.splice(wordIndex,1)\n                    }\n                })\n                return;\n            }\n            // else, push the new clicked value to the array and add the class of selected answer\n            answersSelectedSO.current.push(selectedElement);\n            selectedElement.classList.add('singlePossibleAnswer-selected');\n\n            // if more than max answers are selected(elements pushed in array), removed the first added element from array and remove its class\n            if(answersSelectedSO.current.length>possibleAnswersNum){\n                const removedElement = answersSelectedSO.current.shift();\n                if(removedElement==null)return;\n                removedElement.classList.remove('singlePossibleAnswer-selected');\n            }\n            const clickedButtonInfo = {\n                questionTitle: title,\n                answeredWord: [answersSelectedSO.current[answersSelectedSO.current.length-1].id.split('-')[1]],\n                questionObject: questionInfoObj\n            }\n            if(selectedAnswersArr.current.length==0){\n                selectedAnswersArr.current=[...selectedAnswersArr.current, clickedButtonInfo];\n            } else{\n                for(let index = 0; index < selectedAnswersArr.current.length; index++){\n                    if(selectedAnswersArr.current[index].questionTitle==clickedButtonInfo.questionTitle){\n                        if(selectedAnswersArr.current[index].questionObject.correctAnswer.length!=selectedAnswersArr.current[index].answeredWord.length){\n                            selectedAnswersArr.current[index].answeredWord.push(clickedButtonInfo.answeredWord[0]);\n                        } else {\n                            selectedAnswersArr.current[index].answeredWord.push(clickedButtonInfo.answeredWord[0]);\n                            selectedAnswersArr.current[index].answeredWord.shift();\n                        }\n                        return;\n                    } else if(index==selectedAnswersArr.current.length-1){\n                        selectedAnswersArr.current=[...selectedAnswersArr.current, clickedButtonInfo]\n                    }\n                }\n\n            }\n\n        \n\n        }\n\n        questionCounterRef.current++;\n        return(\n            <React.Fragment>\n            <div className='question-SelectOne single-question'>\n                <p className='single-question-title'>Question {lessonNumber}: {questionInfoObj.title}<br></br><em>{questionInfoObj.correctAnswer.length} possible answer/s</em></p>\n                <div className='single-question-possibleAnswers'>{questionInfoObj.possibleAnswers.map((singleAnswer,index)=>{\n                    return(\n                        <button className='single-question-possibleAnswers-singleAnswer' \n                        key={`${index}SO-${singleAnswer}`}\n                        id={`${index}SO-${singleAnswer}`}\n                        onClick={()=>{answer_SO_Selected(`${index}SO-${singleAnswer}`, questionInfoObj.title)}}\n                        >\n                        {singleAnswer}</button>\n                    )\n                })}</div>\n            </div>\n            {MainCall()}\n            </React.Fragment>\n\n        )\n\n    }\n\n    function LoadQuestion_SelectMultiple(questionInfoObj: questionInfoObj){\n        const possibleAnswersNum = questionInfoObj.correctAnswer.length;\n        const answersSelectedSM = useRef<HTMLElement[]>([]);\n\n        questionCounterRef.current++;\n\n        function answer_SM_Selected(id: string, title: string){\n            // clicked element\n            const selectedElement = document.getElementById(id);\n\n            if(selectedElement==null){\n                return;\n            }\n            // if user clicks the same answer, remove it from selected answers array and remove its answered class\n            if(answersSelectedSM.current.includes(selectedElement)){\n                answersSelectedSM.current.map((element,index: number)=>{\n                    if(element==selectedElement){\n                        answersSelectedSM.current.splice(index,1);\n\n                        selectedElement.classList.remove('singlePossibleAnswer-selected');\n                    }\n                })\n                selectedAnswersArr.current.map((singleAnsweredQuestion: any)=>{\n                    if(title==singleAnsweredQuestion.questionTitle){\n                        const wordIndex = singleAnsweredQuestion.answeredWord.indexOf(selectedElement.innerText);\n                        singleAnsweredQuestion.answeredWord.splice(wordIndex,1);\n                    }\n                })\n                return;\n            }\n            // else, push the new clicked value to the array and add the class of selected answer\n            answersSelectedSM.current.push(selectedElement);\n            selectedElement.classList.add('singlePossibleAnswer-selected');\n\n            // if more than max answers are selected(elements pushed in array), removed the first added element from array and remove its class\n            if(answersSelectedSM.current.length>possibleAnswersNum){\n                const removedElement = answersSelectedSM.current.shift();\n                if(removedElement==null)return;\n                removedElement.classList.remove('singlePossibleAnswer-selected');\n            }\n            const clickedButtonInfo = {\n                questionTitle: title,\n                answeredWord: [answersSelectedSM.current[answersSelectedSM.current.length-1].id.split('-')[1]],\n                questionObject: questionInfoObj\n            }\n\n            if(selectedAnswersArr.current.length==0){\n                selectedAnswersArr.current.push(clickedButtonInfo);\n            } else{\n                for(let index = 0; index < selectedAnswersArr.current.length; index++){\n                    if(selectedAnswersArr.current[index].questionTitle==clickedButtonInfo.questionTitle){\n                        if(selectedAnswersArr.current[index].questionObject.correctAnswer.length!=selectedAnswersArr.current[index].answeredWord.length){\n                            selectedAnswersArr.current[index].answeredWord.push(clickedButtonInfo.answeredWord[0]);\n                        } else {\n                            selectedAnswersArr.current[index].answeredWord.push(clickedButtonInfo.answeredWord[0]);\n                            selectedAnswersArr.current[index].answeredWord.shift();\n                        }\n                        return;\n                    } else if(index==selectedAnswersArr.current.length-1){\n                        selectedAnswersArr.current.push(clickedButtonInfo);\n                        return;\n                    }\n                }\n            }\n        }\n\n        return(\n            <React.Fragment>\n                <div className='question-SelectMultiple single-question'>\n                    <p className='single-question-title'>Question {lessonNumber}: {questionInfoObj.title}<br></br><em>{questionInfoObj.correctAnswer.length} possible answer/s</em></p>\n                    <div className='single-question-possibleAnswers'>{questionInfoObj.possibleAnswers.map((singleAnswer,index)=>{\n                        return(\n                            <button className='single-question-possibleAnswers-singleAnswer' \n                            key={`${index}SM-${singleAnswer}`}\n                            id={`${index}SM-${singleAnswer}`}\n                            onClick={()=>{answer_SM_Selected(`${index}SM-${singleAnswer}`, questionInfoObj.title)}}\n                            >\n                            {singleAnswer}</button>\n                        )\n                    })}</div>\n                </div>\n                {MainCall()}\n            </React.Fragment>\n\n        )\n    }\n\n    function loadQuestion_DragAndDrop(questionInfoObj: questionInfoObj){\n        questionCounterRef.current++;\n\n        function onDropFunc(e: any){\n            e.preventDefault();\n            const data = e.dataTransfer.getData(\"application/my-app\");\n            e.currentTarget.appendChild(document.getElementById(data));\n        }\n        function onDragOverFunc(e: any){\n            e.preventDefault();\n            e.dataTransfer.dropEffect = \"move\";\n        }\n        function ondragstartFunc(e: any){\n            \n            e.dataTransfer.setData(\"application/my-app\", e.target.id);\n            e.dataTransfer.effectAllowed = \"move\";\n        }\n\n        return(\n            <React.Fragment>\n                <div className='question-DragAndDrop single-question'>\n                    <p className='single-question-title'>Question {lessonNumber}: {questionInfoObj.title}</p>\n                    <div className='single-question-DragAndDrop-words' onDrop={(e)=>{onDropFunc(e)}} onDragOver={(e)=>{onDragOverFunc(e)}}>{questionInfoObj.possibleAnswers.map((singleWord,index)=>{\n                        return(\n                            <button className='single-question-DragAndDrop-singleWord'\n                            key={`${index}DaD-${singleWord}`}\n                            id={`${index}DaD-${singleWord}`}\n                            onDragStart={(e)=>{ondragstartFunc(e)}}\n                            draggable='true'\n                            >\n                            {singleWord}\n                            </button>\n                        )\n                    })}</div>\n                    <div className='single-question-DragAndDrop-location' onDrop={(e)=>{onDropFunc(e)}} onDragOver={(e)=>{onDragOverFunc(e)}}></div>\n                </div>\n                {MainCall()}\n            </React.Fragment>\n\n        )\n    }\n\n    function checkAnswers(){\n        const badAnswersArr: object[] = [];\n        const goodAnswersArr: object[] = [];\n\n        // firstly check DragAndDrop question if it exists\n        if(document.querySelector('.single-question-DragAndDrop-location')){\n            let DragAndDropAnswers: any;\n            let userDragAndDropAnswers: any = [];\n            let pointsForDnD: boolean = true;\n            document.querySelectorAll('.single-question-DragAndDrop-location .single-question-DragAndDrop-singleWord').forEach((element: any)=>{\n                userDragAndDropAnswers.push(element.innerText)\n            });\n            const questionObject: any = Object.entries(props.props.arrayIndividualLessons).filter((element: any)=>{\n                if(typeof element[1][1] != 'string')return element;\n            })\n            for(let i = 0; i < questionObject.length; i++){\n                if(questionObject[i][1][1].questionFormat=='DragAndDrop'){\n                    DragAndDropAnswers = questionObject[i][1];\n                    if(!userDragAndDropAnswers){\n\n                    } else if(userDragAndDropAnswers.length!=questionObject[i][1][1].correctAnswer.length){\n                        props.handleError.setErrorMessage('You must answer all of the questions.')\n                        return;\n                    } else {\n                        userDragAndDropAnswers.map((element: string,index: number)=>{\n                            if(userDragAndDropAnswers[index]!=questionObject[i][1][1].correctAnswer[index]){\n                                pointsForDnD=false;\n                            }\n                            if(index==userDragAndDropAnswers.length-1 && pointsForDnD!=false){\n                                pointsForDnD=true;\n                                goodAnswersArr.push(DragAndDropAnswers[1])\n                            } else if(index == userDragAndDropAnswers.length-1 && pointsForDnD==false){\n                                badAnswersArr.push(DragAndDropAnswers[1])\n                            }\n                        })\n                    }\n\n                }\n            }\n            // if(goodAnswersArr.includes()){\n            \n        }\n        // DnD - DragAndDrop\n        const non_DnD_Questions: any = Object.entries(props.props.arrayIndividualLessons).filter((element: any)=>{\n            if(typeof element[1][1] != 'string' && element[1][1].questionFormat!='DragAndDrop')return element;\n        })\n        if(selectedAnswersArr.current.length<non_DnD_Questions.length){\n            props.handleError.setErrorMessage('You must answer all of the questions.')\n            return;\n        }\n        for(let index = 0; index < selectedAnswersArr.current.length; index++){\n            if(selectedAnswersArr.current[index].questionObject.correctAnswer.length!=selectedAnswersArr.current[index].answeredWord.length){\n                props.handleError.setErrorMessage('You have skipped an answer inside a question.');\n                return;\n            } else {\n                if(index==selectedAnswersArr.current.length-1){\n\n                    // CALCULATE THE CORRECT ANSWERS HERE\n                    console.log('answers were selected. Calculating your score for this lesson...')\n                    selectedAnswersArr.current.map((element)=>{\n                        let isAnswerGood = true;\n                        element.answeredWord.map((x,index)=>{\n                            if(!element.questionObject.correctAnswer.includes(x)){\n                                isAnswerGood = false;\n                            }\n                            if(index==element.answeredWord.length-1){\n                                if(isAnswerGood==true){\n                                    goodAnswersArr.push(element)\n                                } else {\n                                    badAnswersArr.push(element);\n                                }\n                            }\n                        })\n                    })\n                    let percentageCorrect;\n                    if(goodAnswersArr.length!=0){\n                        percentageCorrect=(goodAnswersArr.length/(goodAnswersArr.length+badAnswersArr.length))*100;\n                    } else {\n                        percentageCorrect=0;\n                    }\n                    setLessonOverview({badAnswersArr, goodAnswersArr})\n\n                    return;\n                }\n            }\n        }\n\n    }\n    questionCounterRef.current++;\n    return(\n        <React.Fragment>\n        {MainCall()}\n        {lessonOverview ? <LessonOverview lessonData={{lessonOverview, setLessonOverview}} sectionNumber={props.sectionNumber} returnToMain={props.returnToMain}/> : null}\n        </React.Fragment>\n    )\n}\n\nexport default LoadQuestions;","/Users/justinas/Documents/repos/microgogool/client/src/Components/ContentSecComponents/LessonOverview.tsx",["221","222","223","224","225","226","227","228"],[],"/Users/justinas/Documents/repos/microgogool/client/src/UIDContext.ts",[],[],"/Users/justinas/Documents/repos/microgogool/client/src/Components/ContentSecComponents/MainRightDailyStreak.tsx",["229","230"],[],"/Users/justinas/Documents/repos/microgogool/client/src/Components/ContentSecComponents/MainRightScore.tsx",["231","232","233","234","235"],[],"/Users/justinas/Documents/repos/microgogool/client/src/Components/UserIconDisplay.tsx",["236"],[],"/Users/justinas/Documents/repos/microgogool/client/src/Components/HOC_Overlay.tsx",["237"],[],"import React, { useRef } from 'react';\n\n\n// if using this HOC, component should have a setState prop named isVisible for removing the prop(setting the state) from DOM\nfunction HOC_Overlay(Component: React.ElementType<any>){\n\n    const overlayRef = useRef<any>();\n\n    return (props: any)=>{\n\n        return(\n        <div className='HOC_overlay' onClick={(e)=>{\n            if(overlayRef.current==e.target){\n                if(props.isVisible){\n                    props.isVisible(false);\n                }\n            }\n            }} \n            ref={overlayRef}>\n            <Component {...props}/>\n        </div>\n        )\n    }\n\n}\n\nexport default HOC_Overlay;","/Users/justinas/Documents/repos/microgogool/client/src/xhrLink.ts",[],[],{"ruleId":"238","severity":1,"message":"239","line":1,"column":29,"nodeType":"240","messageId":"241","endLine":1,"endColumn":38},{"ruleId":"238","severity":1,"message":"242","line":12,"column":13,"nodeType":"240","messageId":"241","endLine":12,"endColumn":16},{"ruleId":"238","severity":1,"message":"242","line":11,"column":13,"nodeType":"240","messageId":"241","endLine":11,"endColumn":16},{"ruleId":"238","severity":1,"message":"239","line":1,"column":17,"nodeType":"240","messageId":"241","endLine":1,"endColumn":26},{"ruleId":"243","severity":1,"message":"244","line":20,"column":31,"nodeType":"245","messageId":"246","endLine":20,"endColumn":33},{"ruleId":"243","severity":1,"message":"244","line":26,"column":35,"nodeType":"245","messageId":"246","endLine":26,"endColumn":37},{"ruleId":"238","severity":1,"message":"247","line":24,"column":29,"nodeType":"240","messageId":"241","endLine":24,"endColumn":47},{"ruleId":"248","severity":1,"message":"249","line":43,"column":69,"nodeType":"250","messageId":"251","endLine":43,"endColumn":76},{"ruleId":"238","severity":1,"message":"252","line":5,"column":8,"nodeType":"240","messageId":"241","endLine":5,"endColumn":21},{"ruleId":"243","severity":1,"message":"253","line":30,"column":11,"nodeType":"245","messageId":"246","endLine":30,"endColumn":13},{"ruleId":"243","severity":1,"message":"244","line":22,"column":33,"nodeType":"245","messageId":"246","endLine":22,"endColumn":35},{"ruleId":"254","severity":1,"message":"255","line":22,"column":42,"nodeType":"256","messageId":"257","endLine":22,"endColumn":174},{"ruleId":"238","severity":1,"message":"258","line":29,"column":18,"nodeType":"240","messageId":"241","endLine":29,"endColumn":24},{"ruleId":"238","severity":1,"message":"259","line":41,"column":11,"nodeType":"240","messageId":"241","endLine":41,"endColumn":22},{"ruleId":"260","severity":1,"message":"261","line":55,"column":7,"nodeType":"262","endLine":55,"endColumn":9,"suggestions":"263"},{"ruleId":"243","severity":1,"message":"253","line":58,"column":22,"nodeType":"245","messageId":"246","endLine":58,"endColumn":24},{"ruleId":"248","severity":1,"message":"249","line":77,"column":52,"nodeType":"264","messageId":"265","endLine":77,"endColumn":54},{"ruleId":"243","severity":1,"message":"244","line":78,"column":46,"nodeType":"245","messageId":"246","endLine":78,"endColumn":48},{"ruleId":"260","severity":1,"message":"266","line":87,"column":7,"nodeType":"262","endLine":87,"endColumn":19,"suggestions":"267"},{"ruleId":"260","severity":1,"message":"268","line":98,"column":7,"nodeType":"262","endLine":98,"endColumn":9,"suggestions":"269"},{"ruleId":"243","severity":1,"message":"244","line":103,"column":29,"nodeType":"245","messageId":"246","endLine":103,"endColumn":31},{"ruleId":"243","severity":1,"message":"253","line":106,"column":29,"nodeType":"245","messageId":"246","endLine":106,"endColumn":31},{"ruleId":"243","severity":1,"message":"253","line":122,"column":31,"nodeType":"245","messageId":"246","endLine":122,"endColumn":33},{"ruleId":"243","severity":1,"message":"244","line":123,"column":35,"nodeType":"245","messageId":"246","endLine":123,"endColumn":37},{"ruleId":"243","severity":1,"message":"244","line":126,"column":35,"nodeType":"245","messageId":"246","endLine":126,"endColumn":37},{"ruleId":"243","severity":1,"message":"244","line":129,"column":35,"nodeType":"245","messageId":"246","endLine":129,"endColumn":37},{"ruleId":"243","severity":1,"message":"244","line":134,"column":32,"nodeType":"245","messageId":"246","endLine":134,"endColumn":34},{"ruleId":"243","severity":1,"message":"244","line":134,"column":68,"nodeType":"245","messageId":"246","endLine":134,"endColumn":70},{"ruleId":"243","severity":1,"message":"244","line":135,"column":31,"nodeType":"245","messageId":"246","endLine":135,"endColumn":33},{"ruleId":"243","severity":1,"message":"244","line":136,"column":31,"nodeType":"245","messageId":"246","endLine":136,"endColumn":33},{"ruleId":"243","severity":1,"message":"244","line":137,"column":31,"nodeType":"245","messageId":"246","endLine":137,"endColumn":33},{"ruleId":"243","severity":1,"message":"253","line":138,"column":31,"nodeType":"245","messageId":"246","endLine":138,"endColumn":33},{"ruleId":"243","severity":1,"message":"253","line":143,"column":31,"nodeType":"245","messageId":"246","endLine":143,"endColumn":33},{"ruleId":"243","severity":1,"message":"244","line":144,"column":31,"nodeType":"245","messageId":"246","endLine":144,"endColumn":33},{"ruleId":"243","severity":1,"message":"244","line":148,"column":31,"nodeType":"245","messageId":"246","endLine":148,"endColumn":33},{"ruleId":"243","severity":1,"message":"244","line":152,"column":31,"nodeType":"245","messageId":"246","endLine":152,"endColumn":33},{"ruleId":"238","severity":1,"message":"270","line":1,"column":17,"nodeType":"240","messageId":"241","endLine":1,"endColumn":28},{"ruleId":"238","severity":1,"message":"271","line":28,"column":36,"nodeType":"240","messageId":"241","endLine":28,"endColumn":61},{"ruleId":"243","severity":1,"message":"253","line":48,"column":24,"nodeType":"245","messageId":"246","endLine":48,"endColumn":26},{"ruleId":"238","severity":1,"message":"272","line":57,"column":15,"nodeType":"240","messageId":"241","endLine":57,"endColumn":23},{"ruleId":"243","severity":1,"message":"253","line":68,"column":30,"nodeType":"245","messageId":"246","endLine":68,"endColumn":32},{"ruleId":"238","severity":1,"message":"273","line":1,"column":17,"nodeType":"240","messageId":"241","endLine":1,"endColumn":28},{"ruleId":"238","severity":1,"message":"258","line":11,"column":18,"nodeType":"240","messageId":"241","endLine":11,"endColumn":24},{"ruleId":"260","severity":1,"message":"261","line":27,"column":7,"nodeType":"262","endLine":27,"endColumn":9,"suggestions":"274"},{"ruleId":"243","severity":1,"message":"244","line":45,"column":37,"nodeType":"245","messageId":"246","endLine":45,"endColumn":39},{"ruleId":"243","severity":1,"message":"244","line":47,"column":37,"nodeType":"245","messageId":"246","endLine":47,"endColumn":39},{"ruleId":"243","severity":1,"message":"253","line":53,"column":28,"nodeType":"245","messageId":"246","endLine":53,"endColumn":30},{"ruleId":"243","severity":1,"message":"253","line":68,"column":38,"nodeType":"245","messageId":"246","endLine":68,"endColumn":40},{"ruleId":"238","severity":1,"message":"258","line":29,"column":18,"nodeType":"240","messageId":"241","endLine":29,"endColumn":24},{"ruleId":"260","severity":1,"message":"261","line":44,"column":7,"nodeType":"262","endLine":44,"endColumn":9,"suggestions":"275"},{"ruleId":"243","severity":1,"message":"244","line":47,"column":35,"nodeType":"245","messageId":"246","endLine":47,"endColumn":37},{"ruleId":"276","severity":1,"message":"277","line":52,"column":13,"nodeType":"256","endLine":52,"endColumn":76},{"ruleId":"243","severity":1,"message":"244","line":54,"column":24,"nodeType":"245","messageId":"246","endLine":54,"endColumn":26},{"ruleId":"248","severity":1,"message":"278","line":59,"column":93,"nodeType":"264","messageId":"279","endLine":59,"endColumn":95},{"ruleId":"243","severity":1,"message":"253","line":60,"column":69,"nodeType":"245","messageId":"246","endLine":60,"endColumn":71},{"ruleId":"248","severity":1,"message":"278","line":89,"column":93,"nodeType":"264","messageId":"279","endLine":89,"endColumn":95},{"ruleId":"243","severity":1,"message":"253","line":90,"column":72,"nodeType":"245","messageId":"246","endLine":90,"endColumn":74},{"ruleId":"238","severity":1,"message":"280","line":1,"column":10,"nodeType":"240","messageId":"241","endLine":1,"endColumn":14},{"ruleId":"243","severity":1,"message":"253","line":29,"column":43,"nodeType":"245","messageId":"246","endLine":29,"endColumn":45},{"ruleId":"260","severity":1,"message":"281","line":32,"column":7,"nodeType":"262","endLine":32,"endColumn":40,"suggestions":"282"},{"ruleId":"243","severity":1,"message":"244","line":47,"column":96,"nodeType":"245","messageId":"246","endLine":47,"endColumn":98},{"ruleId":"243","severity":1,"message":"244","line":51,"column":96,"nodeType":"245","messageId":"246","endLine":51,"endColumn":98},{"ruleId":"243","severity":1,"message":"244","line":54,"column":96,"nodeType":"245","messageId":"246","endLine":54,"endColumn":98},{"ruleId":"248","severity":1,"message":"249","line":79,"column":70,"nodeType":"264","messageId":"265","endLine":79,"endColumn":72},{"ruleId":"243","severity":1,"message":"244","line":80,"column":31,"nodeType":"245","messageId":"246","endLine":80,"endColumn":33},{"ruleId":"248","severity":1,"message":"249","line":85,"column":91,"nodeType":"264","messageId":"265","endLine":85,"endColumn":93},{"ruleId":"243","severity":1,"message":"244","line":86,"column":29,"nodeType":"245","messageId":"246","endLine":86,"endColumn":31},{"ruleId":"243","severity":1,"message":"244","line":108,"column":49,"nodeType":"245","messageId":"246","endLine":108,"endColumn":51},{"ruleId":"243","severity":1,"message":"244","line":112,"column":71,"nodeType":"245","messageId":"246","endLine":112,"endColumn":73},{"ruleId":"243","severity":1,"message":"253","line":113,"column":97,"nodeType":"245","messageId":"246","endLine":113,"endColumn":99},{"ruleId":"243","severity":1,"message":"244","line":120,"column":36,"nodeType":"245","messageId":"246","endLine":120,"endColumn":38},{"ruleId":"248","severity":1,"message":"249","line":169,"column":70,"nodeType":"264","messageId":"265","endLine":169,"endColumn":72},{"ruleId":"243","severity":1,"message":"244","line":170,"column":31,"nodeType":"245","messageId":"246","endLine":170,"endColumn":33},{"ruleId":"248","severity":1,"message":"249","line":176,"column":77,"nodeType":"264","messageId":"265","endLine":176,"endColumn":79},{"ruleId":"243","severity":1,"message":"244","line":177,"column":29,"nodeType":"245","messageId":"246","endLine":177,"endColumn":31},{"ruleId":"243","severity":1,"message":"244","line":200,"column":49,"nodeType":"245","messageId":"246","endLine":200,"endColumn":51},{"ruleId":"243","severity":1,"message":"244","line":204,"column":71,"nodeType":"245","messageId":"246","endLine":204,"endColumn":73},{"ruleId":"243","severity":1,"message":"253","line":205,"column":97,"nodeType":"245","messageId":"246","endLine":205,"endColumn":99},{"ruleId":"243","severity":1,"message":"244","line":212,"column":36,"nodeType":"245","messageId":"246","endLine":212,"endColumn":38},{"ruleId":"248","severity":1,"message":"283","line":295,"column":113,"nodeType":"264","messageId":"279","endLine":295,"endColumn":115},{"ruleId":"243","severity":1,"message":"244","line":299,"column":58,"nodeType":"245","messageId":"246","endLine":299,"endColumn":60},{"ruleId":"243","severity":1,"message":"253","line":303,"column":60,"nodeType":"245","messageId":"246","endLine":303,"endColumn":62},{"ruleId":"284","severity":1,"message":"285","line":307,"column":52,"nodeType":"264","messageId":"286","endLine":317,"endColumn":26},{"ruleId":"248","severity":1,"message":"249","line":307,"column":83,"nodeType":"264","messageId":"265","endLine":307,"endColumn":85},{"ruleId":"243","severity":1,"message":"253","line":308,"column":61,"nodeType":"245","messageId":"246","endLine":308,"endColumn":63},{"ruleId":"243","severity":1,"message":"244","line":311,"column":37,"nodeType":"245","messageId":"246","endLine":311,"endColumn":39},{"ruleId":"243","severity":1,"message":"253","line":311,"column":86,"nodeType":"245","messageId":"246","endLine":311,"endColumn":88},{"ruleId":"243","severity":1,"message":"244","line":314,"column":45,"nodeType":"245","messageId":"246","endLine":314,"endColumn":47},{"ruleId":"243","severity":1,"message":"244","line":314,"column":95,"nodeType":"245","messageId":"246","endLine":314,"endColumn":97},{"ruleId":"248","severity":1,"message":"283","line":326,"column":112,"nodeType":"264","messageId":"279","endLine":326,"endColumn":114},{"ruleId":"243","severity":1,"message":"253","line":327,"column":80,"nodeType":"245","messageId":"246","endLine":327,"endColumn":82},{"ruleId":"243","severity":1,"message":"253","line":334,"column":85,"nodeType":"245","messageId":"246","endLine":334,"endColumn":87},{"ruleId":"243","severity":1,"message":"244","line":338,"column":25,"nodeType":"245","messageId":"246","endLine":338,"endColumn":27},{"ruleId":"248","severity":1,"message":"249","line":342,"column":61,"nodeType":"264","messageId":"265","endLine":342,"endColumn":63},{"ruleId":"248","severity":1,"message":"249","line":344,"column":59,"nodeType":"264","messageId":"265","endLine":344,"endColumn":61},{"ruleId":"243","severity":1,"message":"244","line":348,"column":37,"nodeType":"245","messageId":"246","endLine":348,"endColumn":39},{"ruleId":"243","severity":1,"message":"244","line":349,"column":48,"nodeType":"245","messageId":"246","endLine":349,"endColumn":50},{"ruleId":"243","severity":1,"message":"253","line":358,"column":45,"nodeType":"245","messageId":"246","endLine":358,"endColumn":47},{"ruleId":"238","severity":1,"message":"287","line":361,"column":25,"nodeType":"240","messageId":"241","endLine":361,"endColumn":42},{"ruleId":"238","severity":1,"message":"288","line":1,"column":40,"nodeType":"240","messageId":"241","endLine":1,"endColumn":46},{"ruleId":"238","severity":1,"message":"258","line":38,"column":18,"nodeType":"240","messageId":"241","endLine":38,"endColumn":24},{"ruleId":"260","severity":1,"message":"289","line":51,"column":7,"nodeType":"262","endLine":51,"endColumn":9,"suggestions":"290"},{"ruleId":"243","severity":1,"message":"244","line":60,"column":70,"nodeType":"245","messageId":"246","endLine":60,"endColumn":72},{"ruleId":"248","severity":1,"message":"278","line":61,"column":108,"nodeType":"264","messageId":"279","endLine":61,"endColumn":110},{"ruleId":"243","severity":1,"message":"244","line":62,"column":111,"nodeType":"245","messageId":"246","endLine":62,"endColumn":113},{"ruleId":"243","severity":1,"message":"244","line":62,"column":169,"nodeType":"245","messageId":"246","endLine":62,"endColumn":171},{"ruleId":"243","severity":1,"message":"244","line":87,"column":55,"nodeType":"245","messageId":"246","endLine":87,"endColumn":57},{"ruleId":"238","severity":1,"message":"258","line":7,"column":18,"nodeType":"240","messageId":"241","endLine":7,"endColumn":24},{"ruleId":"260","severity":1,"message":"261","line":24,"column":7,"nodeType":"262","endLine":24,"endColumn":9,"suggestions":"291"},{"ruleId":"238","severity":1,"message":"258","line":12,"column":18,"nodeType":"240","messageId":"241","endLine":12,"endColumn":24},{"ruleId":"243","severity":1,"message":"253","line":27,"column":37,"nodeType":"245","messageId":"246","endLine":27,"endColumn":39},{"ruleId":"260","severity":1,"message":"261","line":36,"column":7,"nodeType":"262","endLine":36,"endColumn":9,"suggestions":"292"},{"ruleId":"243","severity":1,"message":"253","line":40,"column":25,"nodeType":"245","messageId":"246","endLine":40,"endColumn":27},{"ruleId":"243","severity":1,"message":"253","line":43,"column":32,"nodeType":"245","messageId":"246","endLine":43,"endColumn":34},{"ruleId":"238","severity":1,"message":"258","line":15,"column":18,"nodeType":"240","messageId":"241","endLine":15,"endColumn":24},{"ruleId":"243","severity":1,"message":"244","line":13,"column":34,"nodeType":"245","messageId":"246","endLine":13,"endColumn":36},"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'UID' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'setAllSectionsData' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'LoadingScreen' is defined but never used.","Expected '!==' and instead saw '!='.","react/jsx-pascal-case","Imported JSX component UserIconDisplay_WithOverlay must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","'setUID' is assigned a value but never used.","'dailyStreak' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'UID'. Either include it or remove the dependency array.","ArrayExpression",["293"],"ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'allSectionsData' and 'loadCenterPathContent'. Either include them or remove the dependency array.",["294"],"React Hook useEffect has a missing dependency: 'loadCenterPathContent'. Either include it or remove the dependency array.",["295"],"'useCallback' is defined but never used.","'setArrayIndividualLessons' is assigned a value but never used.","'mainPath' is assigned a value but never used.","'ElementType' is defined but never used.",["296"],["297"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'type' is defined but never used.","React Hook useEffect has a missing dependency: 'checkAnswers'. Either include it or remove the dependency array.",["298"],"Array.prototype.filter() expects a value to be returned at the end of arrow function.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'pointsForDnD', 'pointsForDnD', 'pointsForDnD', 'DragAndDropAnswers', 'pointsForDnD', 'DragAndDropAnswers'.","unsafeRefs","'percentageCorrect' is assigned a value but never used.","'useRef' is defined but never used.","React Hook useEffect has missing dependencies: 'UID', 'props.lessonData.lessonOverview.badAnswersArr', 'props.lessonData.lessonOverview.goodAnswersArr', and 'props.sectionNumber'. Either include them or remove the dependency array.",["299"],["300"],["301"],{"desc":"302","fix":"303"},{"desc":"304","fix":"305"},{"desc":"306","fix":"307"},{"desc":"302","fix":"308"},{"desc":"302","fix":"309"},{"desc":"310","fix":"311"},{"desc":"312","fix":"313"},{"desc":"302","fix":"314"},{"desc":"302","fix":"315"},"Update the dependencies array to be: [UID]",{"range":"316","text":"317"},"Update the dependencies array to be: [allSectionsData, loadCenterPathContent, sectionNum]",{"range":"318","text":"319"},"Update the dependencies array to be: [loadCenterPathContent]",{"range":"320","text":"321"},{"range":"322","text":"317"},{"range":"323","text":"317"},"Update the dependencies array to be: [checkAnswers, props.handleError.errorHandling]",{"range":"324","text":"325"},"Update the dependencies array to be: [UID, props.lessonData.lessonOverview.badAnswersArr, props.lessonData.lessonOverview.goodAnswersArr, props.sectionNumber]",{"range":"326","text":"327"},{"range":"328","text":"317"},{"range":"329","text":"317"},[2203,2205],"[UID]",[3300,3312],"[allSectionsData, loadCenterPathContent, sectionNum]",[3625,3627],"[loadCenterPathContent]",[812,814],[1235,1237],[854,887],"[checkAnswers, props.handleError.errorHandling]",[1285,1287],"[UID, props.lessonData.lessonOverview.badAnswersArr, props.lessonData.lessonOverview.goodAnswersArr, props.sectionNumber]",[695,697],[1217,1219]]