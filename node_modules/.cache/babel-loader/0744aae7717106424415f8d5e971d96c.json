{"ast":null,"code":"var _jsxFileName = \"/Users/justinas/Documents/repos/microgogool/client/src/Components/ContentSecComponents/MistakesTab.tsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport UIDContext from 'src/UIDContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst key = require('key-creator');\nfunction MistakesTab() {\n  _s();\n  const [allUserMistakes, setAllUserMistakes] = useState(null);\n  const {\n    UID,\n    setUID\n  } = useContext(UIDContext);\n  useEffect(() => {\n    let xhr = new XMLHttpRequest();\n    xhr.open(\"POST\", 'http://localhost:8080/getUserMistakes', true);\n    xhr.setRequestHeader('Content-Type', 'application/json');\n    xhr.send(JSON.stringify({\n      UID: UID\n    }));\n    xhr.onload = () => {\n      const parsedResponse = JSON.parse(xhr.responseText);\n      setAllUserMistakes(parsedResponse);\n    };\n  }, []);\n  useEffect(() => {\n    console.log(allUserMistakes);\n  }, [allUserMistakes]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mistakes-tab\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: require('../../Photos/error.png'),\n      alt: \"error image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Mistakes you have recently made\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), allUserMistakes != null ? allUserMistakes.map(specificSectionsMistakes => {\n      (function myRandomIIFE() {\n        if (specificSectionsMistakes.badDnDAnswers.length != 0) {\n          return specificSectionsMistakes.badDnDAnswers.map(singleBadDnDAnswer => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"single-badAnswer\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"mistake-title\",\n                children: singleBadDnDAnswer.questionTitle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"answers\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"wys\",\n                  children: \"Words given:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"single-badAnswer-possibleAnswer\",\n                  children: singleBadDnDAnswer.possibleAnswer.map(singleAnswer => {\n                    return /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: singleAnswer\n                    }, key.generate(), false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 66,\n                      columnNumber: 53\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"tca\",\n                  children: \"Correct order:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"single-badAnswer-correctWords\",\n                  children: singleBadDnDAnswer.correctAnswer.map(singleAnswer => {\n                    return /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: singleAnswer\n                    }, key.generate(), false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 74,\n                      columnNumber: 53\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 37\n              }, this)]\n            }, key.generate(), true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 33\n            }, this);\n          });\n        }\n      });\n      if (specificSectionsMistakes.badSelectAnswers.length != 0) {\n        console.log(specificSectionsMistakes.sectionNumber);\n        return specificSectionsMistakes.badSelectAnswers.map(singleBadSelectAnswer => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"single-badAnswer\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"badAnswer-title\",\n              children: singleBadSelectAnswer.questionTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"answers\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"wys\",\n                children: \"What you selected:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"single-badAnswer-userAnsweredWords\",\n                children: singleBadSelectAnswer.userAnswer.map(singleAnswer => {\n                  return /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: singleAnswer\n                  }, key.generate(), false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 97,\n                    columnNumber: 53\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"tca\",\n                children: \"The correct answer/s:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"single-badAnswer-correctWords\",\n                children: singleBadSelectAnswer.correctAnswer.map(singleAnswer => {\n                  return /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: singleAnswer\n                  }, key.generate(), false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 105,\n                    columnNumber: 53\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 37\n            }, this)]\n          }, key.generate(), true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 33\n          }, this);\n        });\n      }\n    }) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n_s(MistakesTab, \"Tk+ewAjL+vlcGjIcXnW0v8WKN8I=\");\n_c = MistakesTab;\nexport default MistakesTab;\nvar _c;\n$RefreshReg$(_c, \"MistakesTab\");","map":{"version":3,"names":["React","useContext","useEffect","useState","UIDContext","key","require","MistakesTab","allUserMistakes","setAllUserMistakes","UID","setUID","xhr","XMLHttpRequest","open","setRequestHeader","send","JSON","stringify","onload","parsedResponse","parse","responseText","console","log","map","specificSectionsMistakes","myRandomIIFE","badDnDAnswers","length","singleBadDnDAnswer","questionTitle","possibleAnswer","singleAnswer","generate","correctAnswer","badSelectAnswers","sectionNumber","singleBadSelectAnswer","userAnswer"],"sources":["/Users/justinas/Documents/repos/microgogool/client/src/Components/ContentSecComponents/MistakesTab.tsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\n\nimport UIDContext from 'src/UIDContext';\nconst key = require('key-creator');\n\n\ninterface allUserMistakes{\n    sectionNumber: number,\n    badSelectAnswers: badSelectAnswersObject[],\n    badDnDAnswers: badDnDAnswersObject[]\n}\ninterface badSelectAnswersObject{\n    questionTitle: string,\n    correctAnswer: string[],\n    userAnswer: string[]\n}\ninterface badDnDAnswersObject{\n    correctAnswer: string[],\n    possibleAnswer: string[],\n    questionTitle: string\n}\n\nfunction MistakesTab() {\n    \n    const [allUserMistakes, setAllUserMistakes] = useState<allUserMistakes[] | null>(null);\n\n    const { UID, setUID } = useContext(UIDContext);\n\n    useEffect(()=>{\n        let xhr = new XMLHttpRequest();\n        xhr.open(\"POST\", 'http://localhost:8080/getUserMistakes', true);\n        xhr.setRequestHeader('Content-Type', 'application/json');\n        xhr.send(JSON.stringify({\n            UID: UID\n        }));\n\n        xhr.onload = ()=>{\n            const parsedResponse = JSON.parse(xhr.responseText);\n            setAllUserMistakes(parsedResponse);\n        }\n    },[])\n\n    useEffect(()=>{\n        console.log(allUserMistakes)\n    },[allUserMistakes])\n\n    return (\n        <div className='mistakes-tab'>\n            <img src={require('../../Photos/error.png')} alt='error image'></img>\n            <p>Mistakes you have recently made</p>\n            {allUserMistakes!=null ? \n\n                allUserMistakes.map((specificSectionsMistakes: allUserMistakes)=>{\n\n                    (function myRandomIIFE(){\n                    if(specificSectionsMistakes.badDnDAnswers.length!=0){\n                        return specificSectionsMistakes.badDnDAnswers.map((singleBadDnDAnswer: badDnDAnswersObject)=>{\n                            return(\n                                <div className='single-badAnswer' key={key.generate()}>\n                                    <p className='mistake-title'>{singleBadDnDAnswer.questionTitle}</p>\n                                    <div className='answers'>\n                                        <p className='wys'>Words given:</p>\n                                        <div className='single-badAnswer-possibleAnswer'>\n                                            {singleBadDnDAnswer.possibleAnswer.map((singleAnswer: string)=>{\n                                                return(\n                                                    <p key={key.generate()}>{singleAnswer}</p>\n                                                )\n                                            })}\n                                        </div>\n                                        <p className='tca'>Correct order:</p>\n                                        <div className='single-badAnswer-correctWords'>\n                                            {singleBadDnDAnswer.correctAnswer.map((singleAnswer: string)=>{\n                                                return(\n                                                    <p key={key.generate()}>{singleAnswer}</p>\n                                                )\n                                            })}\n                                        </div>\n                                    </div>\n                                </div>\n                            )\n                        })\n                    }\n                    })\n\n\n                    if(specificSectionsMistakes.badSelectAnswers.length!=0){\n                        console.log(specificSectionsMistakes.sectionNumber)\n                        return specificSectionsMistakes.badSelectAnswers.map((singleBadSelectAnswer: badSelectAnswersObject)=>{\n                            return(\n                                <div className='single-badAnswer' key={key.generate()}>\n                                    <p className='badAnswer-title'>{singleBadSelectAnswer.questionTitle}</p>\n                                    <div className='answers'>\n                                        <p className='wys'>What you selected:</p>\n                                        <div className='single-badAnswer-userAnsweredWords'>\n                                            {singleBadSelectAnswer.userAnswer.map((singleAnswer: string)=>{\n                                                return(\n                                                    <p key={key.generate()}>{singleAnswer}</p>\n                                                )\n                                            })}\n                                        </div>\n                                        <p className='tca'>The correct answer/s:</p>\n                                        <div className='single-badAnswer-correctWords'>\n                                            {singleBadSelectAnswer.correctAnswer.map((singleAnswer: string)=>{\n                                                return(\n                                                    <p key={key.generate()}>{singleAnswer}</p>\n                                                )\n                                            })}\n                                        </div>\n                                    </div>\n                                </div>\n                            )\n                        })\n                    }\n                    \n\n            }) : null}\n        </div>\n    );\n}\n\nexport default MistakesTab;"],"mappings":"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"},"metadata":{},"sourceType":"module"}