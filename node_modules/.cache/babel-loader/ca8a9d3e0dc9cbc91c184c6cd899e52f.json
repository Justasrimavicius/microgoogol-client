{"ast":null,"code":"const jose = require('jose');\nfunction retrieveSigningKeys(keys) {\n  const keystore = jose.JWKS.asKeyStore({\n    keys\n  }, {\n    ignoreErrors: true\n  });\n  return keystore.all({\n    use: 'sig'\n  }).map(key => {\n    return {\n      kid: key.kid,\n      alg: key.alg,\n      get publicKey() {\n        return key.toPEM(false);\n      },\n      get rsaPublicKey() {\n        return key.toPEM(false);\n      },\n      getPublicKey() {\n        return key.toPEM(false);\n      }\n    };\n  });\n}\nmodule.exports = {\n  retrieveSigningKeys\n};","map":{"version":3,"names":["jose","require","retrieveSigningKeys","keys","keystore","JWKS","asKeyStore","ignoreErrors","all","use","map","key","kid","alg","publicKey","toPEM","rsaPublicKey","getPublicKey","module","exports"],"sources":["/Users/justinas/Documents/repos/microgogool/client/node_modules/jwks-rsa/src/utils.js"],"sourcesContent":["const jose = require('jose');\n\nfunction retrieveSigningKeys(keys) {\n  const keystore = jose.JWKS.asKeyStore({ keys }, { ignoreErrors: true });\n\n  return keystore.all({ use: 'sig' }).map((key) => {\n    return {\n      kid: key.kid,\n      alg: key.alg,\n      get publicKey() { return key.toPEM(false); },\n      get rsaPublicKey() { return key.toPEM(false); },\n      getPublicKey() { return key.toPEM(false); }\n    };\n  });\n}\n\nmodule.exports = {\n  retrieveSigningKeys\n};\n"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAE5B,SAASC,mBAAmB,CAACC,IAAI,EAAE;EACjC,MAAMC,QAAQ,GAAGJ,IAAI,CAACK,IAAI,CAACC,UAAU,CAAC;IAAEH;EAAK,CAAC,EAAE;IAAEI,YAAY,EAAE;EAAK,CAAC,CAAC;EAEvE,OAAOH,QAAQ,CAACI,GAAG,CAAC;IAAEC,GAAG,EAAE;EAAM,CAAC,CAAC,CAACC,GAAG,CAAEC,GAAG,IAAK;IAC/C,OAAO;MACLC,GAAG,EAAED,GAAG,CAACC,GAAG;MACZC,GAAG,EAAEF,GAAG,CAACE,GAAG;MACZ,IAAIC,SAAS,GAAG;QAAE,OAAOH,GAAG,CAACI,KAAK,CAAC,KAAK,CAAC;MAAE,CAAC;MAC5C,IAAIC,YAAY,GAAG;QAAE,OAAOL,GAAG,CAACI,KAAK,CAAC,KAAK,CAAC;MAAE,CAAC;MAC/CE,YAAY,GAAG;QAAE,OAAON,GAAG,CAACI,KAAK,CAAC,KAAK,CAAC;MAAE;IAC5C,CAAC;EACH,CAAC,CAAC;AACJ;AAEAG,MAAM,CAACC,OAAO,GAAG;EACfjB;AACF,CAAC"},"metadata":{},"sourceType":"script"}