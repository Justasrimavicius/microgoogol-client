[{"/Users/justinas/Documents/repos/microgogool/client/src/Components/Authentication/Login.tsx":"1","/Users/justinas/Documents/repos/microgogool/client/src/Components/Authentication/Signup.tsx":"2","/Users/justinas/Documents/repos/microgogool/client/src/Components/Authentication/Authentication.tsx":"3","/Users/justinas/Documents/repos/microgogool/client/src/Components/ContentSecComponents/MainPath.tsx":"4","/Users/justinas/Documents/repos/microgogool/client/src/Components/LoadingScreen.tsx":"5","/Users/justinas/Documents/repos/microgogool/client/src/App.tsx":"6","/Users/justinas/Documents/repos/microgogool/client/src/Components/MainSections/Footer.tsx":"7","/Users/justinas/Documents/repos/microgogool/client/src/Components/MainSections/Header.tsx":"8","/Users/justinas/Documents/repos/microgogool/client/src/Components/MainSections/Content.tsx":"9","/Users/justinas/Documents/repos/microgogool/client/src/index.tsx":"10","/Users/justinas/Documents/repos/microgogool/client/src/Components/ContentSecComponents/SectionLessons.tsx":"11","/Users/justinas/Documents/repos/microgogool/client/src/Components/ContentSecComponents/ShopTab.tsx":"12","/Users/justinas/Documents/repos/microgogool/client/src/Components/ContentSecComponents/MistakesTab.tsx":"13","/Users/justinas/Documents/repos/microgogool/client/src/Components/ErrorComponent.tsx":"14","/Users/justinas/Documents/repos/microgogool/client/src/Components/ContentSecComponents/LoadQuestions.tsx":"15","/Users/justinas/Documents/repos/microgogool/client/src/Components/ContentSecComponents/LessonOverview.tsx":"16","/Users/justinas/Documents/repos/microgogool/client/src/UIDContext.ts":"17","/Users/justinas/Documents/repos/microgogool/client/src/Components/ContentSecComponents/MainRightDailyStreak.tsx":"18","/Users/justinas/Documents/repos/microgogool/client/src/Components/ContentSecComponents/MainRightScore.tsx":"19","/Users/justinas/Documents/repos/microgogool/client/src/Components/UserIconDisplay.tsx":"20","/Users/justinas/Documents/repos/microgogool/client/src/Components/HOC_Overlay.tsx":"21"},{"size":1863,"mtime":1667989944007,"results":"22","hashOfConfig":"23"},{"size":2355,"mtime":1667989926473,"results":"24","hashOfConfig":"23"},{"size":1242,"mtime":1666005625818,"results":"25","hashOfConfig":"23"},{"size":1962,"mtime":1666939305116,"results":"26","hashOfConfig":"23"},{"size":581,"mtime":1667459776892,"results":"27","hashOfConfig":"23"},{"size":1607,"mtime":1667485110858,"results":"28","hashOfConfig":"23"},{"size":470,"mtime":1666596947486,"results":"29","hashOfConfig":"23"},{"size":1235,"mtime":1667492568250,"results":"30","hashOfConfig":"23"},{"size":7405,"mtime":1667988659931,"results":"31","hashOfConfig":"23"},{"size":287,"mtime":1666006422078,"results":"32","hashOfConfig":"23"},{"size":2894,"mtime":1667056922177,"results":"33","hashOfConfig":"23"},{"size":3936,"mtime":1668265665702,"results":"34","hashOfConfig":"23"},{"size":5965,"mtime":1667988634954,"results":"35","hashOfConfig":"23"},{"size":285,"mtime":1666686067841,"results":"36","hashOfConfig":"23"},{"size":18146,"mtime":1667156714612,"results":"37","hashOfConfig":"23"},{"size":5739,"mtime":1668265413326,"results":"38","hashOfConfig":"23"},{"size":283,"mtime":1667283868930,"results":"39","hashOfConfig":"23"},{"size":1115,"mtime":1667988597650,"results":"40","hashOfConfig":"23"},{"size":2261,"mtime":1668071781575,"results":"41","hashOfConfig":"23"},{"size":876,"mtime":1667494323311,"results":"42","hashOfConfig":"23"},{"size":664,"mtime":1667492667708,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1n3nl90",{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":42,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},"/Users/justinas/Documents/repos/microgogool/client/src/Components/Authentication/Login.tsx",["116","117"],[],"/Users/justinas/Documents/repos/microgogool/client/src/Components/Authentication/Signup.tsx",["118"],[],"/Users/justinas/Documents/repos/microgogool/client/src/Components/Authentication/Authentication.tsx",["119","120","121"],[],"import React, { useEffect, useState } from 'react';\n\nimport Login from './Login';\nimport Signup from './Signup';\n\ninterface props{\n    props: {setAuthenticated: React.Dispatch<React.SetStateAction<boolean>>}\n}\n\nfunction Authentication(props: props) {\n\n    const [authButton, setAuthButton] = useState('default');\n\n    return (\n        <div className='authentication'>\n            <div>\n                <p className='welcome-text'>Welcome to Microgoogol - a language learning platform!</p>\n                <div className='auth-inputs-holder'>\n                    {\n                    authButton==\"default\" ? \n                    \n                    <> <button onClick={()=>{setAuthButton('signup')}}>Sign up</button>\n                    <button onClick={()=>{setAuthButton('login')}}>Log in</button> </> \n                    :\n                    <> {\n                        authButton=='login' ?\n                        <Login authState={{setAuthButton}} setAuthenticated={props.props.setAuthenticated}/>\n                        :\n                        <Signup authState={{setAuthButton}}/>\n                    } </>\n                    }\n\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Authentication;",[],"/Users/justinas/Documents/repos/microgogool/client/src/Components/ContentSecComponents/MainPath.tsx",["122","123"],[],"import React, { LegacyRef, useEffect, useState } from 'react';\n\ninterface allSectionsData{\n    secNum: number,\n    secDescr: string,\n    individualLessons: {\n        [key: string]: string\n    }\n}\ninterface props{\n    sectionLessons: {\n        sectionNum: number,\n        setSectionNum: React.Dispatch<React.SetStateAction<number>>\n    },\n    refs: {mainPathRef: LegacyRef<HTMLDivElement>}\n    allSectionsDataState:{\n    allSectionsData: any,\n    setAllSectionsData: React.Dispatch<React.SetStateAction<allSectionsData[]>>\n    }\n}\n\nfunction MainPath(props: props) {\n\n    const [allSectionsData, setAllSectionsData] = useState<allSectionsData[]>(props.allSectionsDataState.allSectionsData);\n\n    useEffect(()=>{\n        props.sectionLessons.setSectionNum(-1);\n    })\n\n\n    return (\n        <div className='main-path' ref={props.refs.mainPathRef}>\n            {allSectionsData.map((singleSection,index)=>{\n                return(\n                <div className={`section-${singleSection.secNum}`} key={`${index}`}>\n                    <div className='section-name-div'>\n                        <p>section {singleSection.secNum}: {singleSection.secDescr}</p>\n                        <button onClick={()=>{props.sectionLessons.setSectionNum(singleSection.secNum)}} data-testid={`startBtn${index}`}>Start</button>\n                    </div>\n                    <div className='sections-lesson'>\n                    {\n                        Object.entries(singleSection.individualLessons).map((singleLesson,lessonIndex)=>{\n                            if(typeof(singleLesson[1]) !== 'string')return;\n                            return(\n                                <button key={`${lessonIndex}-btn`}><p>Lesson {singleLesson[0].slice(6,7)}: {singleLesson[1]}</p></button>\n                            )\n                        })\n                    }\n                    </div>\n                </div>)\n            })}\n        </div>\n    );\n}\n\nexport default MainPath;","/Users/justinas/Documents/repos/microgogool/client/src/Components/LoadingScreen.tsx",[],[],"/Users/justinas/Documents/repos/microgogool/client/src/App.tsx",["124","125"],[],"import Header from \"./Components/MainSections/Header\";\nimport Footer from \"./Components/MainSections/Footer\";\nimport Content from \"src/Components/MainSections/Content\";\nimport Authentication from \"./Components/Authentication/Authentication\";\nimport LoadingScreen from \"./Components/LoadingScreen\";\n\n// CSS imports\nimport './Styles/FooterStyles.css';\nimport './Styles/HeaderStyles.css';\nimport './Styles/ContentStyles.css';\nimport './Styles/AuthenticationStyles.css';\nimport './Styles/LoadingScreenStyles.css';\nimport './Styles/MainStyles.css';\nimport './Styles/LessonOverviewStyles.css';\nimport './Styles/MistakesTabStyles.css';\n\nimport { useEffect, useState } from \"react\";\nimport React from \"react\";\nimport UIDContext from 'src/UIDContext';\n\nfunction App() {\n  \n  const [UID, setUID] = useState('');\n  const [authenticated, setAuthenticated] = useState(false);\n\n  // mainPath, specificSection, mistakesTab or shopTab\n  const [centerPathContent, loadCenterPathContent] = useState<string>('');\n\n  useEffect(()=>{\n    if(UID!=''){\n      console.log(UID);\n      setAuthenticated(true);\n    }\n  },[UID])\n\n  return (\n        <UIDContext.Provider value={{UID,setUID}} >\n        <div className=\"App\">\n            {\n            !authenticated ? <Authentication props={{setAuthenticated}}/>\n            :<>\n            <Header centerPathContentProp={{centerPathContent, loadCenterPathContent}}/>\n\n            <Content centerPathContentProp={{centerPathContent, loadCenterPathContent}}/>\n\n            <Footer />\n            </>\n            }\n        </div>\n        </UIDContext.Provider>\n\n  );\n}\nexport default App;\n","/Users/justinas/Documents/repos/microgogool/client/src/Components/MainSections/Footer.tsx",[],[],"/Users/justinas/Documents/repos/microgogool/client/src/Components/MainSections/Header.tsx",["126","127"],[],"import React, { useState } from 'react';\nimport UserIconDisplay from '../UserIconDisplay';\nimport HOC_Overlay from '../HOC_Overlay';\n\ninterface props{\n    centerPathContentProp:{\n        centerPathContent: string,\n        loadCenterPathContent: React.Dispatch<React.SetStateAction<string>>\n    }\n}\n\nfunction Header(props: props) {\n\n    const [showUserIconDisplay, setShowUserIconDisplay] = useState<boolean>(false);\n\n    const UserIconDisplay_WithOverlay = HOC_Overlay(UserIconDisplay);\n\n    const {centerPathContent, loadCenterPathContent} = props.centerPathContentProp;\n\n    return (\n        <header>\n            {showUserIconDisplay==true ? <UserIconDisplay_WithOverlay centerPathContentProp={{centerPathContent, loadCenterPathContent}} isVisible={setShowUserIconDisplay}/> : null}\n            \n            <div className='header-content'>\n            <p>Microgoogol</p>\n            <div className='header-content-right'>\n                <button className='userIcon-button' onClick={()=>{setShowUserIconDisplay(true)}}><img src={require('../../Photos/userIcon.png')} alt='user icon'></img></button>\n            </div>\n            </div>\n\n            <div className='divider'></div>\n        </header>\n    );\n}\n\nexport default Header;","/Users/justinas/Documents/repos/microgogool/client/src/Components/MainSections/Content.tsx",["128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151"],[],"/Users/justinas/Documents/repos/microgogool/client/src/index.tsx",[],[],"/Users/justinas/Documents/repos/microgogool/client/src/Components/ContentSecComponents/SectionLessons.tsx",["152","153","154","155","156"],[],"import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport ErrorComponent from '../ErrorComponent';\nimport LoadQuestions from './LoadQuestions';\n\ninterface props{\n    sectionNum: number,\n    specificSectionsData: {\n        secNum: number, secDescr: string, individualLessons: {\n            correctAnswer?: string[],\n            possibleAnswers?: string[],\n            questionFormat?: string,\n            title?: string\n        }\n    }\n    goBack: {\n        loadCenterPathContent: React.Dispatch<React.SetStateAction<string>>\n    }\n    errorMessage:{\n        setErrorMessage: any\n    }\n}\n\nfunction SectionLessons(props: props) {\n\n\n    const lessonsDivRef = useRef<HTMLDivElement>(null);\n\n    const [arrayIndividualLessons, setArrayIndividualLessons] = useState<any>(Object.entries(props.specificSectionsData.individualLessons));\n\n    const [errorMessage, setErrorMessage] = useState<string>('');\n    const [errorHandling, startErrorHandling] = useState<boolean>(false);\n\n    useEffect(()=>{\n        setTimeout(() => {\n            if(lessonsDivRef.current!=null){\n                lessonsDivRef.current.classList.add('lessons-div');\n                setTimeout(() => {\n                    if(lessonsDivRef.current!=null){\n                        lessonsDivRef.current.classList.remove('lessons-div-fadeInAnim');\n                    }\n                }, 2000);\n            }   \n        }, 100);\n\n    },[]);\n\n    useEffect(()=>{\n        if(errorMessage!=''){\n            setTimeout(() => {\n                setErrorMessage('');\n                startErrorHandling(false);\n            }, 2000);\n        }\n    },[errorMessage])\n\n    function returnToMain(){\n        const mainPath = document.querySelector('.main-path') as HTMLElement;\n        lessonsDivRef.current?.classList.add('lessons-div-fadeOutAnim');\n        lessonsDivRef.current?.classList.remove('lessons-div');\n        setTimeout(() => {\n            props.goBack.loadCenterPathContent('mainPath');\n        }, 1000);\n    }\n    \n    return (\n        <React.Fragment>\n            <div className='lessons-div-fadeInAnim' ref={lessonsDivRef}>\n                {errorMessage!='' ? <ErrorComponent message={errorMessage} /> : null}\n                <div className='single-lesson'>\n                <LoadQuestions props={{arrayIndividualLessons}} sectionNumber={props.specificSectionsData.secNum} handleError={{setErrorMessage, startErrorHandling, errorHandling}} returnToMain={returnToMain}/>\n                    <div className='single-lesson-buttons'>\n                        <button className='lesson-answer-submit' onClick={()=>{startErrorHandling(true)}}>Submit the answers</button>\n                        <button className='lesson-go-back' onClick={()=>{returnToMain()}}>Go back</button>\n                    </div>\n                </div>\n            </div>\n        </React.Fragment>\n\n    );\n}\n\nexport default SectionLessons;","/Users/justinas/Documents/repos/microgogool/client/src/Components/ContentSecComponents/ShopTab.tsx",["157","158","159","160","161","162"],[],"/Users/justinas/Documents/repos/microgogool/client/src/Components/ContentSecComponents/MistakesTab.tsx",["163","164","165","166","167","168","169","170","171"],[],"/Users/justinas/Documents/repos/microgogool/client/src/Components/ErrorComponent.tsx",[],[],"/Users/justinas/Documents/repos/microgogool/client/src/Components/ContentSecComponents/LoadQuestions.tsx",["172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213"],[],"import { type } from 'os';\nimport React, { useEffect, useRef, useState } from 'react';\nimport LessonOverview from '../ContentSecComponents/LessonOverview';\n\ninterface questionInfoObj{\n    correctAnswer: string[],\n    possibleAnswers: string[],\n    questionFormat: string,\n    title: string\n}\ninterface selectedAnswersArrInterface{\n    questionTitle: string,\n    answeredWord: string[],\n    questionObject: any\n}\nfunction LoadQuestions(props: any): React.ReactElement | null{\n\n    const [lessonOverview, setLessonOverview] = useState<object | null>(null);\n\n    const questionCounterRef: {current: number} = {\n        current: -1\n    };\n\n    let lessonNumber = 0;\n\n    const selectedAnswersArr = useRef<selectedAnswersArrInterface[]>([]);\n\n    useEffect(()=>{\n        if(props.handleError.errorHandling!=false){\n            checkAnswers();\n        }\n    },[props.handleError.errorHandling])\n\n    function MainCall(): React.ReactElement | undefined{\n    if(!props.props.arrayIndividualLessons[questionCounterRef.current]){\n        if(questionCounterRef.current>=props.props.arrayIndividualLessons.length)return;\n        else {\n            questionCounterRef.current++;\n            return MainCall();\n        }\n    } else {\n\n        // still elements left in the array\n        if(props.props.arrayIndividualLessons[questionCounterRef.current][1].title){\n            // the element (props.props.arrayIndividualLessons[questionsCounterRef.current][1]) is question element - its second array elements contains info about questions\n            lessonNumber = props.props.arrayIndividualLessons[questionCounterRef.current][0].slice(6,7);\n            if(props.props.arrayIndividualLessons[questionCounterRef.current][1].questionFormat=='SelectOne'){\n\n                return LoadQuestion_SelectOne(props.props.arrayIndividualLessons[questionCounterRef.current][1]);\n            }\n            if(props.props.arrayIndividualLessons[questionCounterRef.current][1].questionFormat=='SelectMultiple'){\n                return LoadQuestion_SelectMultiple(props.props.arrayIndividualLessons[questionCounterRef.current][1]);\n            }\n            if(props.props.arrayIndividualLessons[questionCounterRef.current][1].questionFormat=='DragAndDrop'){\n                return loadQuestion_DragAndDrop(props.props.arrayIndividualLessons[questionCounterRef.current][1]);\n            }\n        } else {\n            questionCounterRef.current++;\n            return MainCall();\n        }\n    }\n    }\n\n    function LoadQuestion_SelectOne(questionInfoObj: questionInfoObj){\n        questionCounterRef.current++;\n        const answersSelectedSO = useRef<HTMLElement[]>([]);\n\n        const possibleAnswersNum = questionInfoObj.correctAnswer.length;\n\n        function answer_SO_Selected(id: string, title: string){\n            // clicked element\n            const selectedElement = document.getElementById(id);\n\n            if(selectedElement==null){\n                return;\n            }\n            // if user clicks the same answer, remove if from selected answers array and remove its answered class\n            if(answersSelectedSO.current.includes(selectedElement)){\n                answersSelectedSO.current.map((element,index: number)=>{\n                    if(element==selectedElement){\n                        answersSelectedSO.current.splice(index,1);\n                        selectedElement.classList.remove('singlePossibleAnswer-selected');\n                    }\n                })\n                selectedAnswersArr.current.map((singleAnsweredQuestion: any,index: number)=>{\n                    if(title==singleAnsweredQuestion.questionTitle){\n                        const wordIndex = singleAnsweredQuestion.answeredWord.indexOf(selectedElement.innerText);\n                        singleAnsweredQuestion.answeredWord.splice(wordIndex,1)\n                    }\n                })\n                return;\n            }\n            // else, push the new clicked value to the array and add the class of selected answer\n            answersSelectedSO.current.push(selectedElement);\n            selectedElement.classList.add('singlePossibleAnswer-selected');\n\n            // if more than max answers are selected(elements pushed in array), removed the first added element from array and remove its class\n            if(answersSelectedSO.current.length>possibleAnswersNum){\n                const removedElement = answersSelectedSO.current.shift();\n                if(removedElement==null)return;\n                removedElement.classList.remove('singlePossibleAnswer-selected');\n            }\n            const clickedButtonInfo = {\n                questionTitle: title,\n                answeredWord: [answersSelectedSO.current[answersSelectedSO.current.length-1].id.split('-')[1]],\n                questionObject: questionInfoObj\n            }\n            if(selectedAnswersArr.current.length==0){\n                selectedAnswersArr.current=[...selectedAnswersArr.current, clickedButtonInfo];\n            } else{\n                for(let index = 0; index < selectedAnswersArr.current.length; index++){\n                    if(selectedAnswersArr.current[index].questionTitle==clickedButtonInfo.questionTitle){\n                        if(selectedAnswersArr.current[index].questionObject.correctAnswer.length!=selectedAnswersArr.current[index].answeredWord.length){\n                            selectedAnswersArr.current[index].answeredWord.push(clickedButtonInfo.answeredWord[0]);\n                        } else {\n                            selectedAnswersArr.current[index].answeredWord.push(clickedButtonInfo.answeredWord[0]);\n                            selectedAnswersArr.current[index].answeredWord.shift();\n                        }\n                        return;\n                    } else if(index==selectedAnswersArr.current.length-1){\n                        selectedAnswersArr.current=[...selectedAnswersArr.current, clickedButtonInfo]\n                    }\n                }\n\n            }\n\n        \n\n        }\n\n        questionCounterRef.current++;\n        return(\n            <React.Fragment>\n            <div className='question-SelectOne single-question'>\n                <p className='single-question-title'>Question {lessonNumber}: {questionInfoObj.title}<br></br><em>{questionInfoObj.correctAnswer.length} possible answer/s</em></p>\n                <div className='single-question-possibleAnswers'>{questionInfoObj.possibleAnswers.map((singleAnswer,index)=>{\n                    return(\n                        <button className='single-question-possibleAnswers-singleAnswer' \n                        key={`${index}SO-${singleAnswer}`}\n                        id={`${index}SO-${singleAnswer}`}\n                        onClick={()=>{answer_SO_Selected(`${index}SO-${singleAnswer}`, questionInfoObj.title)}}\n                        >\n                        {singleAnswer}</button>\n                    )\n                })}</div>\n            </div>\n            {MainCall()}\n            </React.Fragment>\n\n        )\n\n    }\n\n    function LoadQuestion_SelectMultiple(questionInfoObj: questionInfoObj){\n        const possibleAnswersNum = questionInfoObj.correctAnswer.length;\n        const answersSelectedSM = useRef<HTMLElement[]>([]);\n\n        questionCounterRef.current++;\n\n        function answer_SM_Selected(id: string, title: string){\n            // clicked element\n            const selectedElement = document.getElementById(id);\n\n            if(selectedElement==null){\n                return;\n            }\n            // if user clicks the same answer, remove it from selected answers array and remove its answered class\n            if(answersSelectedSM.current.includes(selectedElement)){\n                answersSelectedSM.current.map((element,index: number)=>{\n                    if(element==selectedElement){\n                        answersSelectedSM.current.splice(index,1);\n\n                        selectedElement.classList.remove('singlePossibleAnswer-selected');\n                    }\n                })\n                selectedAnswersArr.current.map((singleAnsweredQuestion: any)=>{\n                    if(title==singleAnsweredQuestion.questionTitle){\n                        const wordIndex = singleAnsweredQuestion.answeredWord.indexOf(selectedElement.innerText);\n                        singleAnsweredQuestion.answeredWord.splice(wordIndex,1);\n                    }\n                })\n                return;\n            }\n            // else, push the new clicked value to the array and add the class of selected answer\n            answersSelectedSM.current.push(selectedElement);\n            selectedElement.classList.add('singlePossibleAnswer-selected');\n\n            // if more than max answers are selected(elements pushed in array), removed the first added element from array and remove its class\n            if(answersSelectedSM.current.length>possibleAnswersNum){\n                const removedElement = answersSelectedSM.current.shift();\n                if(removedElement==null)return;\n                removedElement.classList.remove('singlePossibleAnswer-selected');\n            }\n            const clickedButtonInfo = {\n                questionTitle: title,\n                answeredWord: [answersSelectedSM.current[answersSelectedSM.current.length-1].id.split('-')[1]],\n                questionObject: questionInfoObj\n            }\n\n            if(selectedAnswersArr.current.length==0){\n                selectedAnswersArr.current.push(clickedButtonInfo);\n            } else{\n                for(let index = 0; index < selectedAnswersArr.current.length; index++){\n                    if(selectedAnswersArr.current[index].questionTitle==clickedButtonInfo.questionTitle){\n                        if(selectedAnswersArr.current[index].questionObject.correctAnswer.length!=selectedAnswersArr.current[index].answeredWord.length){\n                            selectedAnswersArr.current[index].answeredWord.push(clickedButtonInfo.answeredWord[0]);\n                        } else {\n                            selectedAnswersArr.current[index].answeredWord.push(clickedButtonInfo.answeredWord[0]);\n                            selectedAnswersArr.current[index].answeredWord.shift();\n                        }\n                        return;\n                    } else if(index==selectedAnswersArr.current.length-1){\n                        selectedAnswersArr.current.push(clickedButtonInfo);\n                        return;\n                    }\n                }\n            }\n        }\n\n        return(\n            <React.Fragment>\n                <div className='question-SelectMultiple single-question'>\n                    <p className='single-question-title'>Question {lessonNumber}: {questionInfoObj.title}<br></br><em>{questionInfoObj.correctAnswer.length} possible answer/s</em></p>\n                    <div className='single-question-possibleAnswers'>{questionInfoObj.possibleAnswers.map((singleAnswer,index)=>{\n                        return(\n                            <button className='single-question-possibleAnswers-singleAnswer' \n                            key={`${index}SM-${singleAnswer}`}\n                            id={`${index}SM-${singleAnswer}`}\n                            onClick={()=>{answer_SM_Selected(`${index}SM-${singleAnswer}`, questionInfoObj.title)}}\n                            >\n                            {singleAnswer}</button>\n                        )\n                    })}</div>\n                </div>\n                {MainCall()}\n            </React.Fragment>\n\n        )\n    }\n\n    function loadQuestion_DragAndDrop(questionInfoObj: questionInfoObj){\n        questionCounterRef.current++;\n\n        function onDropFunc(e: any){\n            e.preventDefault();\n            const data = e.dataTransfer.getData(\"application/my-app\");\n            e.currentTarget.appendChild(document.getElementById(data));\n        }\n        function onDragOverFunc(e: any){\n            e.preventDefault();\n            e.dataTransfer.dropEffect = \"move\";\n        }\n        function ondragstartFunc(e: any){\n            \n            e.dataTransfer.setData(\"application/my-app\", e.target.id);\n            e.dataTransfer.effectAllowed = \"move\";\n        }\n\n        return(\n            <React.Fragment>\n                <div className='question-DragAndDrop single-question'>\n                    <p className='single-question-title'>Question {lessonNumber}: {questionInfoObj.title}</p>\n                    <div className='single-question-DragAndDrop-words' onDrop={(e)=>{onDropFunc(e)}} onDragOver={(e)=>{onDragOverFunc(e)}}>{questionInfoObj.possibleAnswers.map((singleWord,index)=>{\n                        return(\n                            <button className='single-question-DragAndDrop-singleWord'\n                            key={`${index}DaD-${singleWord}`}\n                            id={`${index}DaD-${singleWord}`}\n                            onDragStart={(e)=>{ondragstartFunc(e)}}\n                            draggable='true'\n                            >\n                            {singleWord}\n                            </button>\n                        )\n                    })}</div>\n                    <div className='single-question-DragAndDrop-location' onDrop={(e)=>{onDropFunc(e)}} onDragOver={(e)=>{onDragOverFunc(e)}}></div>\n                </div>\n                {MainCall()}\n            </React.Fragment>\n\n        )\n    }\n\n    function checkAnswers(){\n        const badAnswersArr: object[] = [];\n        const goodAnswersArr: object[] = [];\n\n        // firstly check DragAndDrop question if it exists\n        if(document.querySelector('.single-question-DragAndDrop-location')){\n            let DragAndDropAnswers: any;\n            let userDragAndDropAnswers: any = [];\n            let pointsForDnD: boolean = true;\n            document.querySelectorAll('.single-question-DragAndDrop-location .single-question-DragAndDrop-singleWord').forEach((element: any)=>{\n                userDragAndDropAnswers.push(element.innerText)\n            });\n            const questionObject: any = Object.entries(props.props.arrayIndividualLessons).filter((element: any)=>{\n                if(typeof element[1][1] != 'string')return element;\n            })\n            for(let i = 0; i < questionObject.length; i++){\n                if(questionObject[i][1][1].questionFormat=='DragAndDrop'){\n                    DragAndDropAnswers = questionObject[i][1];\n                    if(!userDragAndDropAnswers){\n\n                    } else if(userDragAndDropAnswers.length!=questionObject[i][1][1].correctAnswer.length){\n                        props.handleError.setErrorMessage('You must answer all of the questions.')\n                        return;\n                    } else {\n                        userDragAndDropAnswers.map((element: string,index: number)=>{\n                            if(userDragAndDropAnswers[index]!=questionObject[i][1][1].correctAnswer[index]){\n                                pointsForDnD=false;\n                            }\n                            if(index==userDragAndDropAnswers.length-1 && pointsForDnD!=false){\n                                pointsForDnD=true;\n                                goodAnswersArr.push(DragAndDropAnswers[1])\n                            } else if(index == userDragAndDropAnswers.length-1 && pointsForDnD==false){\n                                badAnswersArr.push(DragAndDropAnswers[1])\n                            }\n                        })\n                    }\n\n                }\n            }\n            // if(goodAnswersArr.includes()){\n            \n        }\n        // DnD - DragAndDrop\n        const non_DnD_Questions: any = Object.entries(props.props.arrayIndividualLessons).filter((element: any)=>{\n            if(typeof element[1][1] != 'string' && element[1][1].questionFormat!='DragAndDrop')return element;\n        })\n        if(selectedAnswersArr.current.length<non_DnD_Questions.length){\n            props.handleError.setErrorMessage('You must answer all of the questions.')\n            return;\n        }\n        for(let index = 0; index < selectedAnswersArr.current.length; index++){\n            if(selectedAnswersArr.current[index].questionObject.correctAnswer.length!=selectedAnswersArr.current[index].answeredWord.length){\n                props.handleError.setErrorMessage('You have skipped an answer inside a question.');\n                return;\n            } else {\n                if(index==selectedAnswersArr.current.length-1){\n\n                    // CALCULATE THE CORRECT ANSWERS HERE\n                    console.log('answers were selected. Calculating your score for this lesson...')\n                    selectedAnswersArr.current.map((element)=>{\n                        let isAnswerGood = true;\n                        element.answeredWord.map((x,index)=>{\n                            if(!element.questionObject.correctAnswer.includes(x)){\n                                isAnswerGood = false;\n                            }\n                            if(index==element.answeredWord.length-1){\n                                if(isAnswerGood==true){\n                                    goodAnswersArr.push(element)\n                                } else {\n                                    badAnswersArr.push(element);\n                                }\n                            }\n                        })\n                    })\n                    let percentageCorrect;\n                    if(goodAnswersArr.length!=0){\n                        percentageCorrect=(goodAnswersArr.length/(goodAnswersArr.length+badAnswersArr.length))*100;\n                    } else {\n                        percentageCorrect=0;\n                    }\n                    setLessonOverview({badAnswersArr, goodAnswersArr})\n\n                    return;\n                }\n            }\n        }\n\n    }\n    questionCounterRef.current++;\n    return(\n        <React.Fragment>\n        {MainCall()}\n        {lessonOverview ? <LessonOverview lessonData={{lessonOverview, setLessonOverview}} sectionNumber={props.sectionNumber} returnToMain={props.returnToMain}/> : null}\n        </React.Fragment>\n    )\n}\n\nexport default LoadQuestions;","/Users/justinas/Documents/repos/microgogool/client/src/Components/ContentSecComponents/LessonOverview.tsx",["214","215","216","217","218","219","220","221"],[],"/Users/justinas/Documents/repos/microgogool/client/src/UIDContext.ts",[],[],"/Users/justinas/Documents/repos/microgogool/client/src/Components/ContentSecComponents/MainRightDailyStreak.tsx",["222","223"],[],"/Users/justinas/Documents/repos/microgogool/client/src/Components/ContentSecComponents/MainRightScore.tsx",["224","225","226","227","228"],[],"/Users/justinas/Documents/repos/microgogool/client/src/Components/UserIconDisplay.tsx",["229"],[],"import React, { useContext } from 'react';\nimport UIDContext from 'src/UIDContext';\n\ninterface props{\n    centerPathContentProp:{\n        centerPathContent: string,\n        loadCenterPathContent: React.Dispatch<React.SetStateAction<string>>\n    }\n    showUserIconDisplayProp:{\n        setShowUserIconDisplay: React.Dispatch<React.SetStateAction<boolean>>\n    }\n}\n\nfunction UserIconDisplay(props: props) {\n    const { UID, setUID } = useContext(UIDContext);\n\n    return (\n        <div className='UserIconDisplay'>\n            <p>User id: <em>{UID}</em> </p>\n            <button onClick={()=>{window.location.reload()}}>Log out</button>\n            <button onClick={()=>{props.centerPathContentProp.loadCenterPathContent('mistakesTab'); props.showUserIconDisplayProp.setShowUserIconDisplay(false)}}>Your mistakes</button>\n        </div>\n    );\n}\n\nexport default UserIconDisplay;","/Users/justinas/Documents/repos/microgogool/client/src/Components/HOC_Overlay.tsx",["230"],[],"import React, { useRef } from 'react';\n\n\n// if using this HOC, component should have a setState prop named isVisible for removing the prop(setting the state) from DOM\nfunction HOC_Overlay(Component: React.ElementType<any>){\n\n    const overlayRef = useRef<any>();\n\n    return (props: any)=>{\n\n        return(\n        <div className='HOC_overlay' onClick={(e)=>{\n            if(overlayRef.current==e.target){\n                if(props.isVisible){\n                    props.isVisible(false);\n                }\n            }\n            }} \n            ref={overlayRef}>\n            <Component {...props}/>\n        </div>\n        )\n    }\n\n}\n\nexport default HOC_Overlay;",{"ruleId":"231","severity":1,"message":"232","line":1,"column":29,"nodeType":"233","messageId":"234","endLine":1,"endColumn":38},{"ruleId":"231","severity":1,"message":"235","line":10,"column":13,"nodeType":"233","messageId":"234","endLine":10,"endColumn":16},{"ruleId":"231","severity":1,"message":"235","line":9,"column":13,"nodeType":"233","messageId":"234","endLine":9,"endColumn":16},{"ruleId":"231","severity":1,"message":"232","line":1,"column":17,"nodeType":"233","messageId":"234","endLine":1,"endColumn":26},{"ruleId":"236","severity":1,"message":"237","line":20,"column":31,"nodeType":"238","messageId":"239","endLine":20,"endColumn":33},{"ruleId":"236","severity":1,"message":"237","line":26,"column":35,"nodeType":"238","messageId":"239","endLine":26,"endColumn":37},{"ruleId":"231","severity":1,"message":"240","line":24,"column":29,"nodeType":"233","messageId":"234","endLine":24,"endColumn":47},{"ruleId":"241","severity":1,"message":"242","line":43,"column":69,"nodeType":"243","messageId":"244","endLine":43,"endColumn":76},{"ruleId":"231","severity":1,"message":"245","line":5,"column":8,"nodeType":"233","messageId":"234","endLine":5,"endColumn":21},{"ruleId":"236","severity":1,"message":"246","line":30,"column":11,"nodeType":"238","messageId":"239","endLine":30,"endColumn":13},{"ruleId":"236","severity":1,"message":"237","line":22,"column":33,"nodeType":"238","messageId":"239","endLine":22,"endColumn":35},{"ruleId":"247","severity":1,"message":"248","line":22,"column":42,"nodeType":"249","messageId":"250","endLine":22,"endColumn":174},{"ruleId":"231","severity":1,"message":"251","line":27,"column":18,"nodeType":"233","messageId":"234","endLine":27,"endColumn":24},{"ruleId":"231","severity":1,"message":"252","line":39,"column":11,"nodeType":"233","messageId":"234","endLine":39,"endColumn":22},{"ruleId":"253","severity":1,"message":"254","line":52,"column":7,"nodeType":"255","endLine":52,"endColumn":9,"suggestions":"256"},{"ruleId":"236","severity":1,"message":"246","line":55,"column":22,"nodeType":"238","messageId":"239","endLine":55,"endColumn":24},{"ruleId":"241","severity":1,"message":"242","line":74,"column":52,"nodeType":"257","messageId":"258","endLine":74,"endColumn":54},{"ruleId":"236","severity":1,"message":"237","line":75,"column":46,"nodeType":"238","messageId":"239","endLine":75,"endColumn":48},{"ruleId":"253","severity":1,"message":"259","line":84,"column":7,"nodeType":"255","endLine":84,"endColumn":19,"suggestions":"260"},{"ruleId":"253","severity":1,"message":"261","line":95,"column":7,"nodeType":"255","endLine":95,"endColumn":9,"suggestions":"262"},{"ruleId":"236","severity":1,"message":"237","line":100,"column":29,"nodeType":"238","messageId":"239","endLine":100,"endColumn":31},{"ruleId":"236","severity":1,"message":"246","line":103,"column":29,"nodeType":"238","messageId":"239","endLine":103,"endColumn":31},{"ruleId":"236","severity":1,"message":"246","line":119,"column":31,"nodeType":"238","messageId":"239","endLine":119,"endColumn":33},{"ruleId":"236","severity":1,"message":"237","line":120,"column":35,"nodeType":"238","messageId":"239","endLine":120,"endColumn":37},{"ruleId":"236","severity":1,"message":"237","line":123,"column":35,"nodeType":"238","messageId":"239","endLine":123,"endColumn":37},{"ruleId":"236","severity":1,"message":"237","line":126,"column":35,"nodeType":"238","messageId":"239","endLine":126,"endColumn":37},{"ruleId":"236","severity":1,"message":"237","line":131,"column":32,"nodeType":"238","messageId":"239","endLine":131,"endColumn":34},{"ruleId":"236","severity":1,"message":"237","line":131,"column":68,"nodeType":"238","messageId":"239","endLine":131,"endColumn":70},{"ruleId":"236","severity":1,"message":"237","line":132,"column":31,"nodeType":"238","messageId":"239","endLine":132,"endColumn":33},{"ruleId":"236","severity":1,"message":"237","line":133,"column":31,"nodeType":"238","messageId":"239","endLine":133,"endColumn":33},{"ruleId":"236","severity":1,"message":"237","line":134,"column":31,"nodeType":"238","messageId":"239","endLine":134,"endColumn":33},{"ruleId":"236","severity":1,"message":"246","line":135,"column":31,"nodeType":"238","messageId":"239","endLine":135,"endColumn":33},{"ruleId":"236","severity":1,"message":"246","line":140,"column":31,"nodeType":"238","messageId":"239","endLine":140,"endColumn":33},{"ruleId":"236","severity":1,"message":"237","line":141,"column":31,"nodeType":"238","messageId":"239","endLine":141,"endColumn":33},{"ruleId":"236","severity":1,"message":"237","line":145,"column":31,"nodeType":"238","messageId":"239","endLine":145,"endColumn":33},{"ruleId":"236","severity":1,"message":"237","line":149,"column":31,"nodeType":"238","messageId":"239","endLine":149,"endColumn":33},{"ruleId":"231","severity":1,"message":"263","line":1,"column":17,"nodeType":"233","messageId":"234","endLine":1,"endColumn":28},{"ruleId":"231","severity":1,"message":"264","line":28,"column":36,"nodeType":"233","messageId":"234","endLine":28,"endColumn":61},{"ruleId":"236","severity":1,"message":"246","line":48,"column":24,"nodeType":"238","messageId":"239","endLine":48,"endColumn":26},{"ruleId":"231","severity":1,"message":"265","line":57,"column":15,"nodeType":"233","messageId":"234","endLine":57,"endColumn":23},{"ruleId":"236","severity":1,"message":"246","line":68,"column":30,"nodeType":"238","messageId":"239","endLine":68,"endColumn":32},{"ruleId":"231","severity":1,"message":"266","line":1,"column":17,"nodeType":"233","messageId":"234","endLine":1,"endColumn":28},{"ruleId":"231","severity":1,"message":"251","line":10,"column":18,"nodeType":"233","messageId":"234","endLine":10,"endColumn":24},{"ruleId":"236","severity":1,"message":"237","line":45,"column":37,"nodeType":"238","messageId":"239","endLine":45,"endColumn":39},{"ruleId":"236","severity":1,"message":"237","line":47,"column":37,"nodeType":"238","messageId":"239","endLine":47,"endColumn":39},{"ruleId":"236","severity":1,"message":"246","line":53,"column":28,"nodeType":"238","messageId":"239","endLine":53,"endColumn":30},{"ruleId":"236","severity":1,"message":"246","line":68,"column":38,"nodeType":"238","messageId":"239","endLine":68,"endColumn":40},{"ruleId":"231","severity":1,"message":"251","line":28,"column":18,"nodeType":"233","messageId":"234","endLine":28,"endColumn":24},{"ruleId":"253","severity":1,"message":"254","line":44,"column":7,"nodeType":"255","endLine":44,"endColumn":9,"suggestions":"267"},{"ruleId":"236","severity":1,"message":"237","line":47,"column":35,"nodeType":"238","messageId":"239","endLine":47,"endColumn":37},{"ruleId":"268","severity":1,"message":"269","line":52,"column":13,"nodeType":"249","endLine":52,"endColumn":76},{"ruleId":"236","severity":1,"message":"237","line":54,"column":24,"nodeType":"238","messageId":"239","endLine":54,"endColumn":26},{"ruleId":"241","severity":1,"message":"270","line":59,"column":93,"nodeType":"257","messageId":"271","endLine":59,"endColumn":95},{"ruleId":"236","severity":1,"message":"246","line":60,"column":69,"nodeType":"238","messageId":"239","endLine":60,"endColumn":71},{"ruleId":"241","severity":1,"message":"270","line":89,"column":93,"nodeType":"257","messageId":"271","endLine":89,"endColumn":95},{"ruleId":"236","severity":1,"message":"246","line":90,"column":72,"nodeType":"238","messageId":"239","endLine":90,"endColumn":74},{"ruleId":"231","severity":1,"message":"272","line":1,"column":10,"nodeType":"233","messageId":"234","endLine":1,"endColumn":14},{"ruleId":"236","severity":1,"message":"246","line":29,"column":43,"nodeType":"238","messageId":"239","endLine":29,"endColumn":45},{"ruleId":"253","severity":1,"message":"273","line":32,"column":7,"nodeType":"255","endLine":32,"endColumn":40,"suggestions":"274"},{"ruleId":"236","severity":1,"message":"237","line":47,"column":96,"nodeType":"238","messageId":"239","endLine":47,"endColumn":98},{"ruleId":"236","severity":1,"message":"237","line":51,"column":96,"nodeType":"238","messageId":"239","endLine":51,"endColumn":98},{"ruleId":"236","severity":1,"message":"237","line":54,"column":96,"nodeType":"238","messageId":"239","endLine":54,"endColumn":98},{"ruleId":"241","severity":1,"message":"242","line":79,"column":70,"nodeType":"257","messageId":"258","endLine":79,"endColumn":72},{"ruleId":"236","severity":1,"message":"237","line":80,"column":31,"nodeType":"238","messageId":"239","endLine":80,"endColumn":33},{"ruleId":"241","severity":1,"message":"242","line":85,"column":91,"nodeType":"257","messageId":"258","endLine":85,"endColumn":93},{"ruleId":"236","severity":1,"message":"237","line":86,"column":29,"nodeType":"238","messageId":"239","endLine":86,"endColumn":31},{"ruleId":"236","severity":1,"message":"237","line":108,"column":49,"nodeType":"238","messageId":"239","endLine":108,"endColumn":51},{"ruleId":"236","severity":1,"message":"237","line":112,"column":71,"nodeType":"238","messageId":"239","endLine":112,"endColumn":73},{"ruleId":"236","severity":1,"message":"246","line":113,"column":97,"nodeType":"238","messageId":"239","endLine":113,"endColumn":99},{"ruleId":"236","severity":1,"message":"237","line":120,"column":36,"nodeType":"238","messageId":"239","endLine":120,"endColumn":38},{"ruleId":"241","severity":1,"message":"242","line":169,"column":70,"nodeType":"257","messageId":"258","endLine":169,"endColumn":72},{"ruleId":"236","severity":1,"message":"237","line":170,"column":31,"nodeType":"238","messageId":"239","endLine":170,"endColumn":33},{"ruleId":"241","severity":1,"message":"242","line":176,"column":77,"nodeType":"257","messageId":"258","endLine":176,"endColumn":79},{"ruleId":"236","severity":1,"message":"237","line":177,"column":29,"nodeType":"238","messageId":"239","endLine":177,"endColumn":31},{"ruleId":"236","severity":1,"message":"237","line":200,"column":49,"nodeType":"238","messageId":"239","endLine":200,"endColumn":51},{"ruleId":"236","severity":1,"message":"237","line":204,"column":71,"nodeType":"238","messageId":"239","endLine":204,"endColumn":73},{"ruleId":"236","severity":1,"message":"246","line":205,"column":97,"nodeType":"238","messageId":"239","endLine":205,"endColumn":99},{"ruleId":"236","severity":1,"message":"237","line":212,"column":36,"nodeType":"238","messageId":"239","endLine":212,"endColumn":38},{"ruleId":"241","severity":1,"message":"275","line":295,"column":113,"nodeType":"257","messageId":"271","endLine":295,"endColumn":115},{"ruleId":"236","severity":1,"message":"237","line":299,"column":58,"nodeType":"238","messageId":"239","endLine":299,"endColumn":60},{"ruleId":"236","severity":1,"message":"246","line":303,"column":60,"nodeType":"238","messageId":"239","endLine":303,"endColumn":62},{"ruleId":"276","severity":1,"message":"277","line":307,"column":52,"nodeType":"257","messageId":"278","endLine":317,"endColumn":26},{"ruleId":"241","severity":1,"message":"242","line":307,"column":83,"nodeType":"257","messageId":"258","endLine":307,"endColumn":85},{"ruleId":"236","severity":1,"message":"246","line":308,"column":61,"nodeType":"238","messageId":"239","endLine":308,"endColumn":63},{"ruleId":"236","severity":1,"message":"237","line":311,"column":37,"nodeType":"238","messageId":"239","endLine":311,"endColumn":39},{"ruleId":"236","severity":1,"message":"246","line":311,"column":86,"nodeType":"238","messageId":"239","endLine":311,"endColumn":88},{"ruleId":"236","severity":1,"message":"237","line":314,"column":45,"nodeType":"238","messageId":"239","endLine":314,"endColumn":47},{"ruleId":"236","severity":1,"message":"237","line":314,"column":95,"nodeType":"238","messageId":"239","endLine":314,"endColumn":97},{"ruleId":"241","severity":1,"message":"275","line":326,"column":112,"nodeType":"257","messageId":"271","endLine":326,"endColumn":114},{"ruleId":"236","severity":1,"message":"246","line":327,"column":80,"nodeType":"238","messageId":"239","endLine":327,"endColumn":82},{"ruleId":"236","severity":1,"message":"246","line":334,"column":85,"nodeType":"238","messageId":"239","endLine":334,"endColumn":87},{"ruleId":"236","severity":1,"message":"237","line":338,"column":25,"nodeType":"238","messageId":"239","endLine":338,"endColumn":27},{"ruleId":"241","severity":1,"message":"242","line":342,"column":61,"nodeType":"257","messageId":"258","endLine":342,"endColumn":63},{"ruleId":"241","severity":1,"message":"242","line":344,"column":59,"nodeType":"257","messageId":"258","endLine":344,"endColumn":61},{"ruleId":"236","severity":1,"message":"237","line":348,"column":37,"nodeType":"238","messageId":"239","endLine":348,"endColumn":39},{"ruleId":"236","severity":1,"message":"237","line":349,"column":48,"nodeType":"238","messageId":"239","endLine":349,"endColumn":50},{"ruleId":"236","severity":1,"message":"246","line":358,"column":45,"nodeType":"238","messageId":"239","endLine":358,"endColumn":47},{"ruleId":"231","severity":1,"message":"279","line":361,"column":25,"nodeType":"233","messageId":"234","endLine":361,"endColumn":42},{"ruleId":"231","severity":1,"message":"280","line":1,"column":40,"nodeType":"233","messageId":"234","endLine":1,"endColumn":46},{"ruleId":"231","severity":1,"message":"251","line":33,"column":18,"nodeType":"233","messageId":"234","endLine":33,"endColumn":24},{"ruleId":"253","severity":1,"message":"281","line":47,"column":7,"nodeType":"255","endLine":47,"endColumn":9,"suggestions":"282"},{"ruleId":"236","severity":1,"message":"237","line":56,"column":70,"nodeType":"238","messageId":"239","endLine":56,"endColumn":72},{"ruleId":"241","severity":1,"message":"270","line":57,"column":108,"nodeType":"257","messageId":"271","endLine":57,"endColumn":110},{"ruleId":"236","severity":1,"message":"237","line":58,"column":111,"nodeType":"238","messageId":"239","endLine":58,"endColumn":113},{"ruleId":"236","severity":1,"message":"237","line":58,"column":169,"nodeType":"238","messageId":"239","endLine":58,"endColumn":171},{"ruleId":"236","severity":1,"message":"237","line":83,"column":55,"nodeType":"238","messageId":"239","endLine":83,"endColumn":57},{"ruleId":"231","severity":1,"message":"251","line":4,"column":18,"nodeType":"233","messageId":"234","endLine":4,"endColumn":24},{"ruleId":"253","severity":1,"message":"254","line":22,"column":7,"nodeType":"255","endLine":22,"endColumn":9,"suggestions":"283"},{"ruleId":"231","severity":1,"message":"251","line":11,"column":18,"nodeType":"233","messageId":"234","endLine":11,"endColumn":24},{"ruleId":"236","severity":1,"message":"246","line":27,"column":37,"nodeType":"238","messageId":"239","endLine":27,"endColumn":39},{"ruleId":"253","severity":1,"message":"254","line":36,"column":7,"nodeType":"255","endLine":36,"endColumn":9,"suggestions":"284"},{"ruleId":"236","severity":1,"message":"246","line":40,"column":25,"nodeType":"238","messageId":"239","endLine":40,"endColumn":27},{"ruleId":"236","severity":1,"message":"246","line":43,"column":32,"nodeType":"238","messageId":"239","endLine":43,"endColumn":34},{"ruleId":"231","severity":1,"message":"251","line":15,"column":18,"nodeType":"233","messageId":"234","endLine":15,"endColumn":24},{"ruleId":"236","severity":1,"message":"237","line":13,"column":34,"nodeType":"238","messageId":"239","endLine":13,"endColumn":36},"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'UID' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'setAllSectionsData' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'LoadingScreen' is defined but never used.","Expected '!==' and instead saw '!='.","react/jsx-pascal-case","Imported JSX component UserIconDisplay_WithOverlay must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","'setUID' is assigned a value but never used.","'dailyStreak' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'UID'. Either include it or remove the dependency array.","ArrayExpression",["285"],"ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'allSectionsData' and 'loadCenterPathContent'. Either include them or remove the dependency array.",["286"],"React Hook useEffect has a missing dependency: 'loadCenterPathContent'. Either include it or remove the dependency array.",["287"],"'useCallback' is defined but never used.","'setArrayIndividualLessons' is assigned a value but never used.","'mainPath' is assigned a value but never used.","'ElementType' is defined but never used.",["288"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'type' is defined but never used.","React Hook useEffect has a missing dependency: 'checkAnswers'. Either include it or remove the dependency array.",["289"],"Array.prototype.filter() expects a value to be returned at the end of arrow function.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'pointsForDnD', 'pointsForDnD', 'pointsForDnD', 'DragAndDropAnswers', 'pointsForDnD', 'DragAndDropAnswers'.","unsafeRefs","'percentageCorrect' is assigned a value but never used.","'useRef' is defined but never used.","React Hook useEffect has missing dependencies: 'UID', 'props.lessonData.lessonOverview.badAnswersArr', 'props.lessonData.lessonOverview.goodAnswersArr', and 'props.sectionNumber'. Either include them or remove the dependency array.",["290"],["291"],["292"],{"desc":"293","fix":"294"},{"desc":"295","fix":"296"},{"desc":"297","fix":"298"},{"desc":"293","fix":"299"},{"desc":"300","fix":"301"},{"desc":"302","fix":"303"},{"desc":"293","fix":"304"},{"desc":"293","fix":"305"},"Update the dependencies array to be: [UID]",{"range":"306","text":"307"},"Update the dependencies array to be: [allSectionsData, loadCenterPathContent, sectionNum]",{"range":"308","text":"309"},"Update the dependencies array to be: [loadCenterPathContent]",{"range":"310","text":"311"},{"range":"312","text":"307"},"Update the dependencies array to be: [checkAnswers, props.handleError.errorHandling]",{"range":"313","text":"314"},"Update the dependencies array to be: [UID, props.lessonData.lessonOverview.badAnswersArr, props.lessonData.lessonOverview.goodAnswersArr, props.sectionNumber]",{"range":"315","text":"316"},{"range":"317","text":"307"},{"range":"318","text":"307"},[2185,2187],"[UID]",[3282,3294],"[allSectionsData, loadCenterPathContent, sectionNum]",[3607,3609],"[loadCenterPathContent]",[1305,1307],[854,887],"[checkAnswers, props.handleError.errorHandling]",[1356,1358],"[UID, props.lessonData.lessonOverview.badAnswersArr, props.lessonData.lessonOverview.goodAnswersArr, props.sectionNumber]",[762,764],[1283,1285]]