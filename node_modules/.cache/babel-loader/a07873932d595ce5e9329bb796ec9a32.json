{"ast":null,"code":"var _jsxFileName = \"/Users/justinas/Documents/repos/microgogool/client/src/Components/Authentication/Login.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport { signInWithEmailAndPassword, getAuth, getIdToken } from 'firebase/auth';\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\nimport { app, firebaseConfig } from '../../firebase';\nimport { initializeApp } from \"firebase/app\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login(props) {\n  _s();\n  const [authErrorMsg, setAuthErrorMsg] = useState('');\n  async function checkSubmit(e) {\n    e.preventDefault();\n    const email = document.querySelector('#email').value;\n    const password = document.querySelector('#password').value;\n    if (email == '') {\n      setAuthErrorMsg(`Email can't be empty`);\n      return;\n    }\n    if (password == '') {\n      setAuthErrorMsg(`Password can't be empty`);\n      return;\n    }\n    const localAuth = getAuth(app);\n    (function loginUser() {\n      signInWithEmailAndPassword(localAuth, email, password).then(userCredential => {\n        console.log(userCredential);\n      }).catch(error => {\n        console.log(error.code);\n        if (error.code == 'auth/user-not-found') {\n          setAuthErrorMsg('User not found');\n          return;\n        } else if (error.code == 'auth/wrong-password') {\n          setAuthErrorMsg('Wrong password');\n          return;\n        } else if (error.code == 'auth/network-request-failed') {\n          setAuthErrorMsg('Network request failed. Please try again later.');\n        } else {\n          setAuthErrorMsg('Unrecognized error message. Check the email format');\n          return;\n        }\n      });\n      app.initializeApp(firebaseConfig);\n      firebase.auth().currentUser.getIdToken(true).then(function (idToken) {\n        // Send token to your backend via HTTPS\n        // ...\n      }).catch(function (error) {\n        // Handle error\n      });\n    })();\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-component\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        checkSubmit(e);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Log in with your credentials\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-comoponent-inputHolder\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"email\",\n          name: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"password\",\n          name: \"password\",\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        children: \"Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"auth-goBack-btn\",\n        type: \"button\",\n        onClick: () => {\n          props.authState.setAuthButton('default');\n        },\n        children: \"Go back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"qt+o8k4ShAjUjT4rCROvRnEqols=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","signInWithEmailAndPassword","getAuth","getIdToken","firebase","app","firebaseConfig","initializeApp","Login","props","authErrorMsg","setAuthErrorMsg","checkSubmit","e","preventDefault","email","document","querySelector","value","password","localAuth","loginUser","then","userCredential","console","log","catch","error","code","auth","currentUser","idToken","authState","setAuthButton"],"sources":["/Users/justinas/Documents/repos/microgogool/client/src/Components/Authentication/Login.jsx"],"sourcesContent":["import React from 'react';\nimport { useState } from 'react';\n\nimport { signInWithEmailAndPassword, getAuth, getIdToken } from 'firebase/auth';\n\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\nimport { app, firebaseConfig } from '../../firebase';\nimport { initializeApp } from \"firebase/app\";\n\n\n\n\nfunction Login(props){\n    \n    const [authErrorMsg, setAuthErrorMsg] = useState('');\n\n    async function checkSubmit(e){\n        e.preventDefault();\n\n        const email = document.querySelector('#email').value;\n        const password = document.querySelector('#password').value;\n\n        if(email==''){\n            setAuthErrorMsg(`Email can't be empty`);\n            return;\n        }\n        if(password==''){\n            setAuthErrorMsg(`Password can't be empty`);\n            return;\n        }\n        const localAuth = getAuth(app);\n        (function loginUser(){\n            signInWithEmailAndPassword(localAuth, email, password)\n           .then((userCredential) => {\n            console.log(userCredential)\n           })\n           .catch((error) => {\n            console.log(error.code)\n            if(error.code=='auth/user-not-found'){\n                setAuthErrorMsg('User not found');\n                return;\n            } else if(error.code=='auth/wrong-password'){\n                setAuthErrorMsg('Wrong password');\n                return;\n            } else if(error.code=='auth/network-request-failed'){\n                setAuthErrorMsg('Network request failed. Please try again later.')\n            } else{\n                setAuthErrorMsg('Unrecognized error message. Check the email format');\n                return;\n            }\n           });\n           app.initializeApp(firebaseConfig);\n           firebase.auth().currentUser.getIdToken(true).then(function(idToken) {\n            // Send token to your backend via HTTPS\n            // ...\n          }).catch(function(error) {\n            // Handle error\n          });\n       })()\n    }\n\n    return (\n        <div className='login-component'>\n        <form onSubmit={(e)=>{checkSubmit(e)}}>\n            <p>Log in with your credentials</p>\n            <div className='login-comoponent-inputHolder'>\n                <label htmlFor='email'>Email:</label>\n                <input id='email' name='email'></input>\n                <label htmlFor='password'>Password:</label>\n                <input id='password' name='password' type='password'></input>\n            </div>\n            <button className='button'>Log in</button>\n            <button className='auth-goBack-btn' type='button' onClick={()=>{props.authState.setAuthButton('default')}}>Go back</button>\n        </form>\n    </div>\n    );\n}\n\nexport default Login;"],"mappings":"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"},"metadata":{},"sourceType":"module"}