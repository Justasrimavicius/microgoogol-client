{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: !0\n}), exports.generate = void 0;\nvar DEFAULT_KEY_SIZE = 16,\n  ASCII_SYMBOL_INDICES = [[33, 47], [58, 64], [91, 96]],\n  ASCII_SYMBOL_SET = function () {\n    var symbolArray = [];\n    return ASCII_SYMBOL_INDICES.forEach(function (setIndex) {\n      for (var i = setIndex[0]; i <= setIndex[1]; ++i) {\n        symbolArray.push(String.fromCharCode(i));\n      }\n    }), symbolArray;\n  }();\nexports.generate = function (keySize) {\n  void 0 === keySize && (keySize = DEFAULT_KEY_SIZE);\n  for (var key = \"\", i = 0; i < keySize; ++i) {\n    switch (Math.floor(4 * Math.random())) {\n      case 0:\n        key += Math.floor(10 * Math.random());\n        break;\n      case 1:\n        key += String.fromCharCode(\"a\".charCodeAt(0) + Math.floor(28 * Math.random()));\n        break;\n      case 2:\n        key += String.fromCharCode(\"A\".charCodeAt(0) + Math.floor(28 * Math.random()));\n        break;\n      case 3:\n        key += ASCII_SYMBOL_SET[Math.floor(Math.random() * ASCII_SYMBOL_SET.length)];\n    }\n  }\n  return key;\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","generate","DEFAULT_KEY_SIZE","ASCII_SYMBOL_INDICES","ASCII_SYMBOL_SET","symbolArray","forEach","setIndex","i","push","String","fromCharCode","keySize","key","Math","floor","random","charCodeAt","length"],"sources":["/Users/justinas/Documents/repos/microgogool/client/node_modules/key-creator/dist/app.js"],"sourcesContent":["\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.generate=void 0;var DEFAULT_KEY_SIZE=16,ASCII_SYMBOL_INDICES=[[33,47],[58,64],[91,96]],ASCII_SYMBOL_SET=function(){var symbolArray=[];return ASCII_SYMBOL_INDICES.forEach(function(setIndex){for(var i=setIndex[0];i<=setIndex[1];++i)symbolArray.push(String.fromCharCode(i))}),symbolArray}();exports.generate=function(keySize){void 0===keySize&&(keySize=DEFAULT_KEY_SIZE);for(var key=\"\",i=0;i<keySize;++i){switch(Math.floor(4*Math.random())){case 0:key+=Math.floor(10*Math.random());break;case 1:key+=String.fromCharCode(\"a\".charCodeAt(0)+Math.floor(28*Math.random()));break;case 2:key+=String.fromCharCode(\"A\".charCodeAt(0)+Math.floor(28*Math.random()));break;case 3:key+=ASCII_SYMBOL_SET[Math.floor(Math.random()*ASCII_SYMBOL_SET.length)]}}return key};"],"mappings":"AAAA,YAAY;;AAACA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAC,YAAY,EAAC;EAACC,KAAK,EAAC,CAAC;AAAC,CAAC,CAAC,EAACD,OAAO,CAACE,QAAQ,GAAC,KAAK,CAAC;AAAC,IAAIC,gBAAgB,GAAC,EAAE;EAACC,oBAAoB,GAAC,CAAC,CAAC,EAAE,EAAC,EAAE,CAAC,EAAC,CAAC,EAAE,EAAC,EAAE,CAAC,EAAC,CAAC,EAAE,EAAC,EAAE,CAAC,CAAC;EAACC,gBAAgB,GAAC,YAAU;IAAC,IAAIC,WAAW,GAAC,EAAE;IAAC,OAAOF,oBAAoB,CAACG,OAAO,CAAC,UAASC,QAAQ,EAAC;MAAC,KAAI,IAAIC,CAAC,GAACD,QAAQ,CAAC,CAAC,CAAC,EAACC,CAAC,IAAED,QAAQ,CAAC,CAAC,CAAC,EAAC,EAAEC,CAAC;QAACH,WAAW,CAACI,IAAI,CAACC,MAAM,CAACC,YAAY,CAACH,CAAC,CAAC,CAAC;MAAA;IAAA,CAAC,CAAC,EAACH,WAAW;EAAA,CAAC,EAAE;AAACN,OAAO,CAACE,QAAQ,GAAC,UAASW,OAAO,EAAC;EAAC,KAAK,CAAC,KAAGA,OAAO,KAAGA,OAAO,GAACV,gBAAgB,CAAC;EAAC,KAAI,IAAIW,GAAG,GAAC,EAAE,EAACL,CAAC,GAAC,CAAC,EAACA,CAAC,GAACI,OAAO,EAAC,EAAEJ,CAAC,EAAC;IAAC,QAAOM,IAAI,CAACC,KAAK,CAAC,CAAC,GAACD,IAAI,CAACE,MAAM,EAAE,CAAC;MAAE,KAAK,CAAC;QAACH,GAAG,IAAEC,IAAI,CAACC,KAAK,CAAC,EAAE,GAACD,IAAI,CAACE,MAAM,EAAE,CAAC;QAAC;MAAM,KAAK,CAAC;QAACH,GAAG,IAAEH,MAAM,CAACC,YAAY,CAAC,GAAG,CAACM,UAAU,CAAC,CAAC,CAAC,GAACH,IAAI,CAACC,KAAK,CAAC,EAAE,GAACD,IAAI,CAACE,MAAM,EAAE,CAAC,CAAC;QAAC;MAAM,KAAK,CAAC;QAACH,GAAG,IAAEH,MAAM,CAACC,YAAY,CAAC,GAAG,CAACM,UAAU,CAAC,CAAC,CAAC,GAACH,IAAI,CAACC,KAAK,CAAC,EAAE,GAACD,IAAI,CAACE,MAAM,EAAE,CAAC,CAAC;QAAC;MAAM,KAAK,CAAC;QAACH,GAAG,IAAET,gBAAgB,CAACU,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAACZ,gBAAgB,CAACc,MAAM,CAAC,CAAC;IAAA;EAAC;EAAC,OAAOL,GAAG;AAAA,CAAC"},"metadata":{},"sourceType":"script"}