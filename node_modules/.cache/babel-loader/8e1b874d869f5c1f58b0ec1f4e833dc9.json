{"ast":null,"code":"var _jsxFileName = \"/Users/justinas/Documents/repos/microgogool/client/src/Components/ContentSecComponents/SectionLessons.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport ErrorComponent from '../ErrorComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SectionLessons(props) {\n  _s();\n  const lessonsDivRef = useRef(null);\n  const [arrayIndividualLessons, setArrayIndividualLessons] = useState(Object.entries(props.specificSectionsData.individualLessons));\n  const [errorMessage, setErrorMessage] = useState('');\n  useEffect(() => {\n    setTimeout(() => {\n      if (lessonsDivRef.current != null) {\n        lessonsDivRef.current.classList.add('lessons-div');\n        setTimeout(() => {\n          if (lessonsDivRef.current != null) {\n            lessonsDivRef.current.classList.remove('lessons-div-fadeInAnim');\n          }\n        }, 2000);\n      }\n    }, 100);\n  }, []);\n  useEffect(() => {\n    if (errorMessage != '') {\n      setTimeout(() => {\n        setErrorMessage('');\n      }, 2000);\n    }\n  }, [errorMessage]);\n  function returnToMain() {\n    var _lessonsDivRef$curren, _lessonsDivRef$curren2;\n    const mainPath = document.querySelector('.main-path');\n    (_lessonsDivRef$curren = lessonsDivRef.current) === null || _lessonsDivRef$curren === void 0 ? void 0 : _lessonsDivRef$curren.classList.add('lessons-div-fadeOutAnim');\n    (_lessonsDivRef$curren2 = lessonsDivRef.current) === null || _lessonsDivRef$curren2 === void 0 ? void 0 : _lessonsDivRef$curren2.classList.remove('lessons-div');\n    setTimeout(() => {\n      props.goBack.loadCenterPathContent('mainPath');\n    }, 1000);\n  }\n  function checkAnswers() {\n    // firstly check DragAndDrop question if it exists\n    props.errorMessage.setErrorMessage('please work?');\n    return;\n    if (document.querySelector('.single-question-DragAndDrop-location')) {\n      let DragAndDropAnswers;\n      let userDragAndDropAnswers = [];\n      let DnDpoints = '';\n      document.querySelectorAll('.single-question-DragAndDrop-location .single-question-DragAndDrop-singleWord').forEach(element => {\n        userDragAndDropAnswers.push(element.innerText);\n      });\n      const questionObject = Object.entries(props.specificSectionsData.individualLessons).filter(element => {\n        if (typeof element[1] != 'string') return element;\n      });\n      for (let i = 0; i < questionObject.length; i++) {\n        if (questionObject[i][1].questionFormat == 'DragAndDrop') {\n          DragAndDropAnswers = questionObject[i][1];\n          if (!userDragAndDropAnswers) {} else if (userDragAndDropAnswers.length != questionObject[i][1].correctAnswer.length) {\n            setErrorMessage('You must answer all of the questions.');\n          } else {\n            userDragAndDropAnswers.map((element, index) => {\n              if (userDragAndDropAnswers[index] != questionObject[i][1].correctAnswer[index]) {\n                DnDpoints = 'NO POINTS FOR DND';\n              }\n              if (index == userDragAndDropAnswers.length - 1 && DnDpoints != 'NO POINTS FOR DND') {\n                DnDpoints = '++POINTS FOR DND';\n              }\n            });\n          }\n        }\n      }\n    }\n    if (selectedAnswersArr.current.length < arrayIndividualLessons.length / 2) {\n      setErrorMessage('You must answer all of the questions.');\n    }\n    selectedAnswersArr.current.map((singleAnsweredQuestion, index) => {\n      if (singleAnsweredQuestion.questionObject.correctAnswer.length != singleAnsweredQuestion.answeredWord.length) {\n        setErrorMessage('You have skipped an answer inside a question.');\n      } else {\n        console.log('ALL ANSWERS WERE SELECTED');\n      }\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lessons-div-fadeInAnim\",\n      ref: lessonsDivRef,\n      children: [errorMessage != '' ? /*#__PURE__*/_jsxDEV(ErrorComponent, {\n        message: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 37\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"single-lesson\",\n        children: [loadQuestions(arrayIndividualLessons), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"single-lesson-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"lesson-answer-submit\",\n            onClick: () => {\n              checkAnswers();\n            },\n            children: \"Submit the answers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"lesson-go-back\",\n            onClick: () => {\n              returnToMain();\n            },\n            children: \"Go back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 9\n  }, this);\n}\n_s(SectionLessons, \"Oz7jYzW0U07dmgz0FpFaK2+4tD4=\");\n_c = SectionLessons;\nexport default SectionLessons;\nvar _c;\n$RefreshReg$(_c, \"SectionLessons\");","map":{"version":3,"names":["React","useEffect","useRef","useState","ErrorComponent","SectionLessons","props","lessonsDivRef","arrayIndividualLessons","setArrayIndividualLessons","Object","entries","specificSectionsData","individualLessons","errorMessage","setErrorMessage","setTimeout","current","classList","add","remove","returnToMain","mainPath","document","querySelector","goBack","loadCenterPathContent","checkAnswers","DragAndDropAnswers","userDragAndDropAnswers","DnDpoints","querySelectorAll","forEach","element","push","innerText","questionObject","filter","i","length","questionFormat","correctAnswer","map","index","selectedAnswersArr","singleAnsweredQuestion","answeredWord","console","log","loadQuestions"],"sources":["/Users/justinas/Documents/repos/microgogool/client/src/Components/ContentSecComponents/SectionLessons.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport ErrorComponent from '../ErrorComponent';\nimport LoadQuestions from './LoadQuestions';\n\ninterface props{\n    sectionNum: number,\n    specificSectionsData: {\n        secNum: number, secDescr: string, individualLessons: {\n            correctAnswer?: string[],\n            possibleAnswers?: string[],\n            questionFormat?: string,\n            title?: string\n        }\n    }\n    goBack: {\n        loadCenterPathContent: React.Dispatch<React.SetStateAction<string>>\n    }\n    errorMessage:{\n        setErrorMessage: any\n    }\n}\n\nfunction SectionLessons(props: props) {\n\n    const lessonsDivRef = useRef<HTMLDivElement>(null);\n\n    const [arrayIndividualLessons, setArrayIndividualLessons] = useState<any>(Object.entries(props.specificSectionsData.individualLessons));\n\n\n\n    const [errorMessage, setErrorMessage] = useState<any>('');\n\n    useEffect(()=>{\n        setTimeout(() => {\n            if(lessonsDivRef.current!=null){\n                lessonsDivRef.current.classList.add('lessons-div');\n                setTimeout(() => {\n                    if(lessonsDivRef.current!=null){\n                        lessonsDivRef.current.classList.remove('lessons-div-fadeInAnim');\n                    }\n                }, 2000);\n            }   \n        }, 100);\n\n\n    },[]);\n\n    useEffect(()=>{\n        if(errorMessage!=''){\n            setTimeout(() => {\n                setErrorMessage('');\n                \n            }, 2000);\n        }\n    },[errorMessage])\n\n\n\n\n\n\n\n\n\n    function returnToMain(){\n        const mainPath = document.querySelector('.main-path') as HTMLElement;\n        lessonsDivRef.current?.classList.add('lessons-div-fadeOutAnim');\n        lessonsDivRef.current?.classList.remove('lessons-div');\n        setTimeout(() => {\n            props.goBack.loadCenterPathContent('mainPath');\n        }, 1000);\n    }\n\n    function checkAnswers(){\n        // firstly check DragAndDrop question if it exists\n        props.errorMessage.setErrorMessage('please work?');\n        return;\n        if(document.querySelector('.single-question-DragAndDrop-location')){\n            let DragAndDropAnswers;\n            let userDragAndDropAnswers: any = [];\n            let DnDpoints: string = '';\n            document.querySelectorAll('.single-question-DragAndDrop-location .single-question-DragAndDrop-singleWord').forEach((element: any)=>{\n                userDragAndDropAnswers.push(element.innerText)\n            });\n            \n\n            const questionObject: any = Object.entries(props.specificSectionsData.individualLessons).filter(element=>{\n                if(typeof element[1] != 'string')return element;\n            })\n            \n            for(let i = 0; i < questionObject.length; i++){\n                if(questionObject[i][1].questionFormat=='DragAndDrop'){\n                    DragAndDropAnswers = questionObject[i][1];\n                    if(!userDragAndDropAnswers){\n\n                    } else if(userDragAndDropAnswers.length!=questionObject[i][1].correctAnswer.length){\n                        setErrorMessage('You must answer all of the questions.')\n                    } else {\n                        userDragAndDropAnswers.map((element: string,index: number)=>{\n                            if(userDragAndDropAnswers[index]!=questionObject[i][1].correctAnswer[index]){\n                                DnDpoints='NO POINTS FOR DND'\n                            }\n                            if(index==userDragAndDropAnswers.length-1 && DnDpoints!='NO POINTS FOR DND'){\n                                DnDpoints='++POINTS FOR DND';\n                            }\n                        })\n                    }\n\n                }\n            }\n            \n        }\n        if(selectedAnswersArr.current.length<arrayIndividualLessons.length/2){\n            setErrorMessage('You must answer all of the questions.')\n        }\n        selectedAnswersArr.current.map((singleAnsweredQuestion,index: number)=>{\n            if(singleAnsweredQuestion.questionObject.correctAnswer.length!=singleAnsweredQuestion.answeredWord.length){\n                setErrorMessage('You have skipped an answer inside a question.')\n            } else {\n                console.log('ALL ANSWERS WERE SELECTED')\n            }\n        })\n    }\n\n\n    return (\n        <React.Fragment>\n            <div className='lessons-div-fadeInAnim' ref={lessonsDivRef}>\n                {errorMessage!='' ? <ErrorComponent message={errorMessage} /> : null}\n                <div className='single-lesson'>\n                {loadQuestions(arrayIndividualLessons)}\n                    <div className='single-lesson-buttons'>\n                        <button className='lesson-answer-submit' onClick={()=>{checkAnswers()}}>Submit the answers</button>\n                        <button className='lesson-go-back' onClick={()=>{returnToMain()}}>Go back</button>\n                    </div>\n                </div>\n            </div>\n        </React.Fragment>\n\n    );\n}\n\nexport default SectionLessons;"],"mappings":"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"},"metadata":{},"sourceType":"module"}