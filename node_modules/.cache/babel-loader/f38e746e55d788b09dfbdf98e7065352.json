{"ast":null,"code":"import _toConsumableArray from\"/Users/justinas/Documents/repos/microgogool/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/justinas/Documents/repos/microgogool/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useRef,useState}from'react';import LessonOverview from'../ContentSecComponents/LessonOverview';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function LoadQuestions(props){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),lessonOverview=_useState2[0],setLessonOverview=_useState2[1];var questionCounterRef={current:-1};var lessonNumber=0;var selectedAnswersArr=useRef([]);useEffect(function(){if(props.handleError.errorHandling!=false){checkAnswers();}},[props.handleError.errorHandling]);function MainCall(){if(!props.props.arrayIndividualLessons[questionCounterRef.current]){if(questionCounterRef.current>=props.props.arrayIndividualLessons.length)return;else{questionCounterRef.current++;return MainCall();}}else{// still elements left in the array\nif(props.props.arrayIndividualLessons[questionCounterRef.current][1].title){// the element (props.props.arrayIndividualLessons[questionsCounterRef.current][1]) is question element - its second array elements contains info about questions\nlessonNumber=props.props.arrayIndividualLessons[questionCounterRef.current][0].slice(6,7);if(props.props.arrayIndividualLessons[questionCounterRef.current][1].questionFormat=='SelectOne'){return LoadQuestion_SelectOne(props.props.arrayIndividualLessons[questionCounterRef.current][1]);}if(props.props.arrayIndividualLessons[questionCounterRef.current][1].questionFormat=='SelectMultiple'){return LoadQuestion_SelectMultiple(props.props.arrayIndividualLessons[questionCounterRef.current][1]);}if(props.props.arrayIndividualLessons[questionCounterRef.current][1].questionFormat=='DragAndDrop'){return loadQuestion_DragAndDrop(props.props.arrayIndividualLessons[questionCounterRef.current][1]);}}else{questionCounterRef.current++;return MainCall();}}}function LoadQuestion_SelectOne(questionInfoObj){questionCounterRef.current++;var answersSelectedSO=useRef([]);var possibleAnswersNum=questionInfoObj.correctAnswer.length;function answer_SO_Selected(id,title){// clicked element\nvar selectedElement=document.getElementById(id);if(selectedElement==null){return;}// if user clicks the same answer, remove if from selected answers array and remove its answered class\nif(answersSelectedSO.current.includes(selectedElement)){answersSelectedSO.current.map(function(element,index){if(element==selectedElement){answersSelectedSO.current.splice(index,1);selectedElement.classList.remove('singlePossibleAnswer-selected');}});selectedAnswersArr.current.map(function(singleAnsweredQuestion,index){if(title==singleAnsweredQuestion.questionTitle){var wordIndex=singleAnsweredQuestion.answeredWord.indexOf(selectedElement.innerText);singleAnsweredQuestion.answeredWord.splice(wordIndex,1);}});return;}// else, push the new clicked value to the array and add the class of selected answer\nanswersSelectedSO.current.push(selectedElement);selectedElement.classList.add('singlePossibleAnswer-selected');// if more than max answers are selected(elements pushed in array), removed the first added element from array and remove its class\nif(answersSelectedSO.current.length>possibleAnswersNum){var removedElement=answersSelectedSO.current.shift();if(removedElement==null)return;removedElement.classList.remove('singlePossibleAnswer-selected');}var clickedButtonInfo={questionTitle:title,answeredWord:[answersSelectedSO.current[answersSelectedSO.current.length-1].id.split('-')[1]],questionObject:questionInfoObj};if(selectedAnswersArr.current.length==0){selectedAnswersArr.current=[].concat(_toConsumableArray(selectedAnswersArr.current),[clickedButtonInfo]);}else{for(var index=0;index<selectedAnswersArr.current.length;index++){if(selectedAnswersArr.current[index].questionTitle==clickedButtonInfo.questionTitle){if(selectedAnswersArr.current[index].questionObject.correctAnswer.length!=selectedAnswersArr.current[index].answeredWord.length){selectedAnswersArr.current[index].answeredWord.push(clickedButtonInfo.answeredWord[0]);}else{selectedAnswersArr.current[index].answeredWord.push(clickedButtonInfo.answeredWord[0]);selectedAnswersArr.current[index].answeredWord.shift();}return;}else if(index==selectedAnswersArr.current.length-1){selectedAnswersArr.current=[].concat(_toConsumableArray(selectedAnswersArr.current),[clickedButtonInfo]);}}}}questionCounterRef.current++;return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"question-SelectOne single-question\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"single-question-title\",children:[\"Question \",lessonNumber,\": \",questionInfoObj.title,/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"em\",{children:[questionInfoObj.correctAnswer.length,\" possible answer/s\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"single-question-possibleAnswers\",children:questionInfoObj.possibleAnswers.map(function(singleAnswer,index){return/*#__PURE__*/_jsx(\"button\",{className:\"single-question-possibleAnswers-singleAnswer\",id:\"\".concat(index,\"SO-\").concat(singleAnswer),onClick:function onClick(){answer_SO_Selected(\"\".concat(index,\"SO-\").concat(singleAnswer),questionInfoObj.title);},children:singleAnswer},\"\".concat(index,\"SO-\").concat(singleAnswer));})})]}),MainCall()]});}function LoadQuestion_SelectMultiple(questionInfoObj){var possibleAnswersNum=questionInfoObj.correctAnswer.length;var answersSelectedSM=useRef([]);questionCounterRef.current++;function answer_SM_Selected(id,title){// clicked element\nvar selectedElement=document.getElementById(id);if(selectedElement==null){return;}// if user clicks the same answer, remove it from selected answers array and remove its answered class\nif(answersSelectedSM.current.includes(selectedElement)){answersSelectedSM.current.map(function(element,index){if(element==selectedElement){answersSelectedSM.current.splice(index,1);selectedElement.classList.remove('singlePossibleAnswer-selected');}});selectedAnswersArr.current.map(function(singleAnsweredQuestion){if(title==singleAnsweredQuestion.questionTitle){var wordIndex=singleAnsweredQuestion.answeredWord.indexOf(selectedElement.innerText);singleAnsweredQuestion.answeredWord.splice(wordIndex,1);}});return;}// else, push the new clicked value to the array and add the class of selected answer\nanswersSelectedSM.current.push(selectedElement);selectedElement.classList.add('singlePossibleAnswer-selected');// if more than max answers are selected(elements pushed in array), removed the first added element from array and remove its class\nif(answersSelectedSM.current.length>possibleAnswersNum){var removedElement=answersSelectedSM.current.shift();if(removedElement==null)return;removedElement.classList.remove('singlePossibleAnswer-selected');}var clickedButtonInfo={questionTitle:title,answeredWord:[answersSelectedSM.current[answersSelectedSM.current.length-1].id.split('-')[1]],questionObject:questionInfoObj};if(selectedAnswersArr.current.length==0){selectedAnswersArr.current.push(clickedButtonInfo);}else{for(var index=0;index<selectedAnswersArr.current.length;index++){if(selectedAnswersArr.current[index].questionTitle==clickedButtonInfo.questionTitle){if(selectedAnswersArr.current[index].questionObject.correctAnswer.length!=selectedAnswersArr.current[index].answeredWord.length){selectedAnswersArr.current[index].answeredWord.push(clickedButtonInfo.answeredWord[0]);}else{selectedAnswersArr.current[index].answeredWord.push(clickedButtonInfo.answeredWord[0]);selectedAnswersArr.current[index].answeredWord.shift();}return;}else if(index==selectedAnswersArr.current.length-1){selectedAnswersArr.current.push(clickedButtonInfo);return;}}}}return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"question-SelectMultiple single-question\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"single-question-title\",children:[\"Question \",lessonNumber,\": \",questionInfoObj.title,/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"em\",{children:[questionInfoObj.correctAnswer.length,\" possible answer/s\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"single-question-possibleAnswers\",children:questionInfoObj.possibleAnswers.map(function(singleAnswer,index){return/*#__PURE__*/_jsx(\"button\",{className:\"single-question-possibleAnswers-singleAnswer\",id:\"\".concat(index,\"SM-\").concat(singleAnswer),onClick:function onClick(){answer_SM_Selected(\"\".concat(index,\"SM-\").concat(singleAnswer),questionInfoObj.title);},children:singleAnswer},\"\".concat(index,\"SM-\").concat(singleAnswer));})})]}),MainCall()]});}function loadQuestion_DragAndDrop(questionInfoObj){questionCounterRef.current++;function onDropFunc(e){e.preventDefault();var data=e.dataTransfer.getData(\"application/my-app\");e.currentTarget.appendChild(document.getElementById(data));}function onDragOverFunc(e){e.preventDefault();e.dataTransfer.dropEffect=\"move\";}function ondragstartFunc(e){e.dataTransfer.setData(\"application/my-app\",e.target.id);e.dataTransfer.effectAllowed=\"move\";}return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"question-DragAndDrop single-question\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"single-question-title\",children:[\"Question \",lessonNumber,\": \",questionInfoObj.title]}),/*#__PURE__*/_jsx(\"div\",{className:\"single-question-DragAndDrop-words\",onDrop:function onDrop(e){onDropFunc(e);},onDragOver:function onDragOver(e){onDragOverFunc(e);},children:questionInfoObj.possibleAnswers.map(function(singleWord,index){return/*#__PURE__*/_jsx(\"button\",{className:\"single-question-DragAndDrop-singleWord\",id:\"\".concat(index,\"DaD-\").concat(singleWord),onDragStart:function onDragStart(e){ondragstartFunc(e);},draggable:\"true\",children:singleWord},\"\".concat(index,\"DaD-\").concat(singleWord));})}),/*#__PURE__*/_jsx(\"div\",{className:\"single-question-DragAndDrop-location\",onDrop:function onDrop(e){onDropFunc(e);},onDragOver:function onDragOver(e){onDragOverFunc(e);}})]}),MainCall()]});}function checkAnswers(){var badAnswersArr=[];var goodAnswersArr=[];// firstly check DragAndDrop question if it exists\nif(document.querySelector('.single-question-DragAndDrop-location')){var _ret=function(){var DragAndDropAnswers;var userDragAndDropAnswers=[];var pointsForDnD=true;document.querySelectorAll('.single-question-DragAndDrop-location .single-question-DragAndDrop-singleWord').forEach(function(element){userDragAndDropAnswers.push(element.innerText);});var questionObject=Object.entries(props.props.arrayIndividualLessons).filter(function(element){if(typeof element[1][1]!='string')return element;});var _loop=function _loop(i){if(questionObject[i][1][1].questionFormat=='DragAndDrop'){DragAndDropAnswers=questionObject[i][1];if(!userDragAndDropAnswers){}else if(userDragAndDropAnswers.length!=questionObject[i][1][1].correctAnswer.length){props.handleError.setErrorMessage('You must answer all of the questions.');return{v:{v:void 0}};}else{userDragAndDropAnswers.map(function(element,index){if(userDragAndDropAnswers[index]!=questionObject[i][1][1].correctAnswer[index]){pointsForDnD=false;}if(index==userDragAndDropAnswers.length-1&&pointsForDnD!=false){pointsForDnD=true;goodAnswersArr.push(DragAndDropAnswers[1]);}else if(index==userDragAndDropAnswers.length-1&&pointsForDnD==false){badAnswersArr.push(DragAndDropAnswers[1]);}});}}};for(var i=0;i<questionObject.length;i++){var _ret2=_loop(i);if(typeof _ret2===\"object\")return _ret2.v;}// if(goodAnswersArr.includes()){\n}();if(typeof _ret===\"object\")return _ret.v;}// DnD - DragAndDrop\nvar non_DnD_Questions=Object.entries(props.props.arrayIndividualLessons).filter(function(element){if(typeof element[1][1]!='string'&&element[1][1].questionFormat!='DragAndDrop')return element;});if(selectedAnswersArr.current.length<non_DnD_Questions.length){props.handleError.setErrorMessage('You must answer all of the questions.');return;}for(var index=0;index<selectedAnswersArr.current.length;index++){if(selectedAnswersArr.current[index].questionObject.correctAnswer.length!=selectedAnswersArr.current[index].answeredWord.length){props.handleError.setErrorMessage('You have skipped an answer inside a question.');return;}else{if(index==selectedAnswersArr.current.length-1){// CALCULATE THE CORRECT ANSWERS HERE\nconsole.log('answers were selected. Calculating your score for this lesson...');selectedAnswersArr.current.map(function(element){var isAnswerGood=true;element.answeredWord.map(function(x,index){if(!element.questionObject.correctAnswer.includes(x)){isAnswerGood=false;}if(index==element.answeredWord.length-1){if(isAnswerGood==true){goodAnswersArr.push(element);}else{badAnswersArr.push(element);}}});});var percentageCorrect=void 0;if(goodAnswersArr.length!=0){percentageCorrect=goodAnswersArr.length/(goodAnswersArr.length+badAnswersArr.length)*100;}else{percentageCorrect=0;}setLessonOverview({badAnswersArr:badAnswersArr,goodAnswersArr:goodAnswersArr});return;}}}}questionCounterRef.current++;return/*#__PURE__*/_jsxs(React.Fragment,{children:[MainCall(),lessonOverview?/*#__PURE__*/_jsx(LessonOverview,{lessonData:{lessonOverview:lessonOverview,setLessonOverview:setLessonOverview},sectionNumber:props.sectionNumber,returnToMain:props.returnToMain}):null]});}export default LoadQuestions;","map":{"version":3,"names":["React","useEffect","useRef","useState","LessonOverview","LoadQuestions","props","lessonOverview","setLessonOverview","questionCounterRef","current","lessonNumber","selectedAnswersArr","handleError","errorHandling","checkAnswers","MainCall","arrayIndividualLessons","length","title","slice","questionFormat","LoadQuestion_SelectOne","LoadQuestion_SelectMultiple","loadQuestion_DragAndDrop","questionInfoObj","answersSelectedSO","possibleAnswersNum","correctAnswer","answer_SO_Selected","id","selectedElement","document","getElementById","includes","map","element","index","splice","classList","remove","singleAnsweredQuestion","questionTitle","wordIndex","answeredWord","indexOf","innerText","push","add","removedElement","shift","clickedButtonInfo","split","questionObject","possibleAnswers","singleAnswer","answersSelectedSM","answer_SM_Selected","onDropFunc","e","preventDefault","data","dataTransfer","getData","currentTarget","appendChild","onDragOverFunc","dropEffect","ondragstartFunc","setData","target","effectAllowed","singleWord","badAnswersArr","goodAnswersArr","querySelector","DragAndDropAnswers","userDragAndDropAnswers","pointsForDnD","querySelectorAll","forEach","Object","entries","filter","i","setErrorMessage","non_DnD_Questions","console","log","isAnswerGood","x","percentageCorrect","sectionNumber","returnToMain"],"sources":["/Users/justinas/Documents/repos/microgogool/client/src/Components/ContentSecComponents/LoadQuestions.tsx"],"sourcesContent":["import { type } from 'os';\nimport React, { useEffect, useRef, useState } from 'react';\nimport LessonOverview from '../ContentSecComponents/LessonOverview';\n\ninterface questionInfoObj{\n    correctAnswer: string[],\n    possibleAnswers: string[],\n    questionFormat: string,\n    title: string\n}\ninterface selectedAnswersArrInterface{\n    questionTitle: string,\n    answeredWord: string[],\n    questionObject: any\n}\nfunction LoadQuestions(props: any): React.ReactElement | null{\n\n    const [lessonOverview, setLessonOverview] = useState<object | null>(null);\n\n    const questionCounterRef: {current: number} = {\n        current: -1\n    };\n\n    let lessonNumber = 0;\n\n    const selectedAnswersArr = useRef<selectedAnswersArrInterface[]>([]);\n\n    useEffect(()=>{\n        if(props.handleError.errorHandling!=false){\n            checkAnswers();\n        }\n    },[props.handleError.errorHandling])\n\n    function MainCall(): React.ReactElement | undefined{\n    if(!props.props.arrayIndividualLessons[questionCounterRef.current]){\n        if(questionCounterRef.current>=props.props.arrayIndividualLessons.length)return;\n        else {\n            questionCounterRef.current++;\n            return MainCall();\n        }\n    } else {\n\n        // still elements left in the array\n        if(props.props.arrayIndividualLessons[questionCounterRef.current][1].title){\n            // the element (props.props.arrayIndividualLessons[questionsCounterRef.current][1]) is question element - its second array elements contains info about questions\n            lessonNumber = props.props.arrayIndividualLessons[questionCounterRef.current][0].slice(6,7);\n            if(props.props.arrayIndividualLessons[questionCounterRef.current][1].questionFormat=='SelectOne'){\n\n                return LoadQuestion_SelectOne(props.props.arrayIndividualLessons[questionCounterRef.current][1]);\n            }\n            if(props.props.arrayIndividualLessons[questionCounterRef.current][1].questionFormat=='SelectMultiple'){\n                return LoadQuestion_SelectMultiple(props.props.arrayIndividualLessons[questionCounterRef.current][1]);\n            }\n            if(props.props.arrayIndividualLessons[questionCounterRef.current][1].questionFormat=='DragAndDrop'){\n                return loadQuestion_DragAndDrop(props.props.arrayIndividualLessons[questionCounterRef.current][1]);\n            }\n        } else {\n            questionCounterRef.current++;\n            return MainCall();\n        }\n    }\n    }\n\n    function LoadQuestion_SelectOne(questionInfoObj: questionInfoObj){\n        questionCounterRef.current++;\n        const answersSelectedSO = useRef<HTMLElement[]>([]);\n\n        const possibleAnswersNum = questionInfoObj.correctAnswer.length;\n\n        function answer_SO_Selected(id: string, title: string){\n            // clicked element\n            const selectedElement = document.getElementById(id);\n\n            if(selectedElement==null){\n                return;\n            }\n            // if user clicks the same answer, remove if from selected answers array and remove its answered class\n            if(answersSelectedSO.current.includes(selectedElement)){\n                answersSelectedSO.current.map((element,index: number)=>{\n                    if(element==selectedElement){\n                        answersSelectedSO.current.splice(index,1);\n                        selectedElement.classList.remove('singlePossibleAnswer-selected');\n                    }\n                })\n                selectedAnswersArr.current.map((singleAnsweredQuestion: any,index: number)=>{\n                    if(title==singleAnsweredQuestion.questionTitle){\n                        const wordIndex = singleAnsweredQuestion.answeredWord.indexOf(selectedElement.innerText);\n                        singleAnsweredQuestion.answeredWord.splice(wordIndex,1)\n                    }\n                })\n                return;\n            }\n            // else, push the new clicked value to the array and add the class of selected answer\n            answersSelectedSO.current.push(selectedElement);\n            selectedElement.classList.add('singlePossibleAnswer-selected');\n\n            // if more than max answers are selected(elements pushed in array), removed the first added element from array and remove its class\n            if(answersSelectedSO.current.length>possibleAnswersNum){\n                const removedElement = answersSelectedSO.current.shift();\n                if(removedElement==null)return;\n                removedElement.classList.remove('singlePossibleAnswer-selected');\n            }\n            const clickedButtonInfo = {\n                questionTitle: title,\n                answeredWord: [answersSelectedSO.current[answersSelectedSO.current.length-1].id.split('-')[1]],\n                questionObject: questionInfoObj\n            }\n            if(selectedAnswersArr.current.length==0){\n                selectedAnswersArr.current=[...selectedAnswersArr.current, clickedButtonInfo];\n            } else{\n                for(let index = 0; index < selectedAnswersArr.current.length; index++){\n                    if(selectedAnswersArr.current[index].questionTitle==clickedButtonInfo.questionTitle){\n                        if(selectedAnswersArr.current[index].questionObject.correctAnswer.length!=selectedAnswersArr.current[index].answeredWord.length){\n                            selectedAnswersArr.current[index].answeredWord.push(clickedButtonInfo.answeredWord[0]);\n                        } else {\n                            selectedAnswersArr.current[index].answeredWord.push(clickedButtonInfo.answeredWord[0]);\n                            selectedAnswersArr.current[index].answeredWord.shift();\n                        }\n                        return;\n                    } else if(index==selectedAnswersArr.current.length-1){\n                        selectedAnswersArr.current=[...selectedAnswersArr.current, clickedButtonInfo]\n                    }\n                }\n\n            }\n\n        \n\n        }\n\n        questionCounterRef.current++;\n        return(\n            <React.Fragment>\n            <div className='question-SelectOne single-question'>\n                <p className='single-question-title'>Question {lessonNumber}: {questionInfoObj.title}<br></br><em>{questionInfoObj.correctAnswer.length} possible answer/s</em></p>\n                <div className='single-question-possibleAnswers'>{questionInfoObj.possibleAnswers.map((singleAnswer,index)=>{\n                    return(\n                        <button className='single-question-possibleAnswers-singleAnswer' \n                        key={`${index}SO-${singleAnswer}`}\n                        id={`${index}SO-${singleAnswer}`}\n                        onClick={()=>{answer_SO_Selected(`${index}SO-${singleAnswer}`, questionInfoObj.title)}}\n                        >\n                        {singleAnswer}</button>\n                    )\n                })}</div>\n            </div>\n            {MainCall()}\n            </React.Fragment>\n\n        )\n\n    }\n\n    function LoadQuestion_SelectMultiple(questionInfoObj: questionInfoObj){\n        const possibleAnswersNum = questionInfoObj.correctAnswer.length;\n        const answersSelectedSM = useRef<HTMLElement[]>([]);\n\n        questionCounterRef.current++;\n\n        function answer_SM_Selected(id: string, title: string){\n            // clicked element\n            const selectedElement = document.getElementById(id);\n\n            if(selectedElement==null){\n                return;\n            }\n            // if user clicks the same answer, remove it from selected answers array and remove its answered class\n            if(answersSelectedSM.current.includes(selectedElement)){\n                answersSelectedSM.current.map((element,index: number)=>{\n                    if(element==selectedElement){\n                        answersSelectedSM.current.splice(index,1);\n\n                        selectedElement.classList.remove('singlePossibleAnswer-selected');\n                    }\n                })\n                selectedAnswersArr.current.map((singleAnsweredQuestion: any)=>{\n                    if(title==singleAnsweredQuestion.questionTitle){\n                        const wordIndex = singleAnsweredQuestion.answeredWord.indexOf(selectedElement.innerText);\n                        singleAnsweredQuestion.answeredWord.splice(wordIndex,1);\n                    }\n                })\n                return;\n            }\n            // else, push the new clicked value to the array and add the class of selected answer\n            answersSelectedSM.current.push(selectedElement);\n            selectedElement.classList.add('singlePossibleAnswer-selected');\n\n            // if more than max answers are selected(elements pushed in array), removed the first added element from array and remove its class\n            if(answersSelectedSM.current.length>possibleAnswersNum){\n                const removedElement = answersSelectedSM.current.shift();\n                if(removedElement==null)return;\n                removedElement.classList.remove('singlePossibleAnswer-selected');\n            }\n            const clickedButtonInfo = {\n                questionTitle: title,\n                answeredWord: [answersSelectedSM.current[answersSelectedSM.current.length-1].id.split('-')[1]],\n                questionObject: questionInfoObj\n            }\n\n            if(selectedAnswersArr.current.length==0){\n                selectedAnswersArr.current.push(clickedButtonInfo);\n            } else{\n                for(let index = 0; index < selectedAnswersArr.current.length; index++){\n                    if(selectedAnswersArr.current[index].questionTitle==clickedButtonInfo.questionTitle){\n                        if(selectedAnswersArr.current[index].questionObject.correctAnswer.length!=selectedAnswersArr.current[index].answeredWord.length){\n                            selectedAnswersArr.current[index].answeredWord.push(clickedButtonInfo.answeredWord[0]);\n                        } else {\n                            selectedAnswersArr.current[index].answeredWord.push(clickedButtonInfo.answeredWord[0]);\n                            selectedAnswersArr.current[index].answeredWord.shift();\n                        }\n                        return;\n                    } else if(index==selectedAnswersArr.current.length-1){\n                        selectedAnswersArr.current.push(clickedButtonInfo);\n                        return;\n                    }\n                }\n            }\n        }\n\n        return(\n            <React.Fragment>\n                <div className='question-SelectMultiple single-question'>\n                    <p className='single-question-title'>Question {lessonNumber}: {questionInfoObj.title}<br></br><em>{questionInfoObj.correctAnswer.length} possible answer/s</em></p>\n                    <div className='single-question-possibleAnswers'>{questionInfoObj.possibleAnswers.map((singleAnswer,index)=>{\n                        return(\n                            <button className='single-question-possibleAnswers-singleAnswer' \n                            key={`${index}SM-${singleAnswer}`}\n                            id={`${index}SM-${singleAnswer}`}\n                            onClick={()=>{answer_SM_Selected(`${index}SM-${singleAnswer}`, questionInfoObj.title)}}\n                            >\n                            {singleAnswer}</button>\n                        )\n                    })}</div>\n                </div>\n                {MainCall()}\n            </React.Fragment>\n\n        )\n    }\n\n    function loadQuestion_DragAndDrop(questionInfoObj: questionInfoObj){\n        questionCounterRef.current++;\n\n        function onDropFunc(e: any){\n            e.preventDefault();\n            const data = e.dataTransfer.getData(\"application/my-app\");\n            e.currentTarget.appendChild(document.getElementById(data));\n        }\n        function onDragOverFunc(e: any){\n            e.preventDefault();\n            e.dataTransfer.dropEffect = \"move\";\n        }\n        function ondragstartFunc(e: any){\n            \n            e.dataTransfer.setData(\"application/my-app\", e.target.id);\n            e.dataTransfer.effectAllowed = \"move\";\n        }\n\n        return(\n            <React.Fragment>\n                <div className='question-DragAndDrop single-question'>\n                    <p className='single-question-title'>Question {lessonNumber}: {questionInfoObj.title}</p>\n                    <div className='single-question-DragAndDrop-words' onDrop={(e)=>{onDropFunc(e)}} onDragOver={(e)=>{onDragOverFunc(e)}}>{questionInfoObj.possibleAnswers.map((singleWord,index)=>{\n                        return(\n                            <button className='single-question-DragAndDrop-singleWord'\n                            key={`${index}DaD-${singleWord}`}\n                            id={`${index}DaD-${singleWord}`}\n                            onDragStart={(e)=>{ondragstartFunc(e)}}\n                            draggable='true'\n                            >\n                            {singleWord}\n                            </button>\n                        )\n                    })}</div>\n                    <div className='single-question-DragAndDrop-location' onDrop={(e)=>{onDropFunc(e)}} onDragOver={(e)=>{onDragOverFunc(e)}}></div>\n                </div>\n                {MainCall()}\n            </React.Fragment>\n\n        )\n    }\n\n    function checkAnswers(){\n        const badAnswersArr: object[] = [];\n        const goodAnswersArr: object[] = [];\n\n        // firstly check DragAndDrop question if it exists\n        if(document.querySelector('.single-question-DragAndDrop-location')){\n            let DragAndDropAnswers: any;\n            let userDragAndDropAnswers: any = [];\n            let pointsForDnD: boolean = true;\n            document.querySelectorAll('.single-question-DragAndDrop-location .single-question-DragAndDrop-singleWord').forEach((element: any)=>{\n                userDragAndDropAnswers.push(element.innerText)\n            });\n            const questionObject: any = Object.entries(props.props.arrayIndividualLessons).filter((element: any)=>{\n                if(typeof element[1][1] != 'string')return element;\n            })\n            for(let i = 0; i < questionObject.length; i++){\n                if(questionObject[i][1][1].questionFormat=='DragAndDrop'){\n                    DragAndDropAnswers = questionObject[i][1];\n                    if(!userDragAndDropAnswers){\n\n                    } else if(userDragAndDropAnswers.length!=questionObject[i][1][1].correctAnswer.length){\n                        props.handleError.setErrorMessage('You must answer all of the questions.')\n                        return;\n                    } else {\n                        userDragAndDropAnswers.map((element: string,index: number)=>{\n                            if(userDragAndDropAnswers[index]!=questionObject[i][1][1].correctAnswer[index]){\n                                pointsForDnD=false;\n                            }\n                            if(index==userDragAndDropAnswers.length-1 && pointsForDnD!=false){\n                                pointsForDnD=true;\n                                goodAnswersArr.push(DragAndDropAnswers[1])\n                            } else if(index == userDragAndDropAnswers.length-1 && pointsForDnD==false){\n                                badAnswersArr.push(DragAndDropAnswers[1])\n                            }\n                        })\n                    }\n\n                }\n            }\n            // if(goodAnswersArr.includes()){\n            \n        }\n        // DnD - DragAndDrop\n        const non_DnD_Questions: any = Object.entries(props.props.arrayIndividualLessons).filter((element: any)=>{\n            if(typeof element[1][1] != 'string' && element[1][1].questionFormat!='DragAndDrop')return element;\n        })\n        if(selectedAnswersArr.current.length<non_DnD_Questions.length){\n            props.handleError.setErrorMessage('You must answer all of the questions.')\n            return;\n        }\n        for(let index = 0; index < selectedAnswersArr.current.length; index++){\n            if(selectedAnswersArr.current[index].questionObject.correctAnswer.length!=selectedAnswersArr.current[index].answeredWord.length){\n                props.handleError.setErrorMessage('You have skipped an answer inside a question.');\n                return;\n            } else {\n                if(index==selectedAnswersArr.current.length-1){\n\n                    // CALCULATE THE CORRECT ANSWERS HERE\n                    console.log('answers were selected. Calculating your score for this lesson...')\n                    selectedAnswersArr.current.map((element)=>{\n                        let isAnswerGood = true;\n                        element.answeredWord.map((x,index)=>{\n                            if(!element.questionObject.correctAnswer.includes(x)){\n                                isAnswerGood = false;\n                            }\n                            if(index==element.answeredWord.length-1){\n                                if(isAnswerGood==true){\n                                    goodAnswersArr.push(element)\n                                } else {\n                                    badAnswersArr.push(element);\n                                }\n                            }\n                        })\n                    })\n                    let percentageCorrect;\n                    if(goodAnswersArr.length!=0){\n                        percentageCorrect=(goodAnswersArr.length/(goodAnswersArr.length+badAnswersArr.length))*100;\n                    } else {\n                        percentageCorrect=0;\n                    }\n                    setLessonOverview({badAnswersArr, goodAnswersArr})\n\n                    return;\n                }\n            }\n        }\n\n    }\n    questionCounterRef.current++;\n    return(\n        <React.Fragment>\n        {MainCall()}\n        {lessonOverview ? <LessonOverview lessonData={{lessonOverview, setLessonOverview}} sectionNumber={props.sectionNumber} returnToMain={props.returnToMain}/> : null}\n        </React.Fragment>\n    )\n}\n\nexport default LoadQuestions;"],"mappings":"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"},"metadata":{},"sourceType":"module"}