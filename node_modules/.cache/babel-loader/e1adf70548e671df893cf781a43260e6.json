{"ast":null,"code":"var _jsxFileName = \"/Users/justinas/Documents/repos/microgogool/client/src/Components/ContentSecComponents/MistakesTab.tsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport UIDContext from 'src/UIDContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst key = require('key-creator');\nfunction MistakesTab() {\n  _s();\n  const [allUserMistakes, setAllUserMistakes] = useState(null);\n  const {\n    UID,\n    setUID\n  } = useContext(UIDContext);\n  useEffect(() => {\n    let xhr = new XMLHttpRequest();\n    xhr.open(\"POST\", 'http://localhost:8080/getUserMistakes', true);\n    xhr.setRequestHeader('Content-Type', 'application/json');\n    xhr.send(JSON.stringify({\n      UID: UID\n    }));\n    xhr.onload = () => {\n      const parsedResponse = JSON.parse(xhr.responseText);\n      console.log(parsedResponse);\n      setAllUserMistakes(parsedResponse);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mistakes-tab\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: require('../../Photos/error.png'),\n      alt: \"error image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Mistakes you have recently made\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mistakes-holder\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mistake\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mistake-title\",\n          children: \"Which one of these 3 words - \\\"clap\\\", \\\"say\\\" or \\\"bake\\\" - means \\\"kepti\\\"?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mistake-userAnswer\",\n          children: \"Your answer: clap\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mistake-correctAnswer\",\n          children: \"Correct answer: bake\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mistake\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mistake-title\",\n          children: \"Which one of these 3 words - \\\"clap\\\", \\\"say\\\" or \\\"bake\\\" - means \\\"kepti\\\"?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mistake-userAnswer\",\n          children: \"Your answer: clap\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mistake-correctAnswer\",\n          children: \"Correct answer: bake\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mistake\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mistake-title\",\n          children: \"Which one of these 3 words - \\\"clap\\\", \\\"say\\\" or \\\"bake\\\" - means \\\"kepti\\\"?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mistake-userAnswer\",\n          children: \"Your answer: clap\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mistake-correctAnswer\",\n          children: \"Correct answer: bake\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n_s(MistakesTab, \"I8NIRrwdUD4nhMqiU+6Tj7f3nJ0=\");\n_c = MistakesTab;\nexport default MistakesTab;\nvar _c;\n$RefreshReg$(_c, \"MistakesTab\");","map":{"version":3,"names":["React","useContext","useEffect","useState","UIDContext","key","require","MistakesTab","allUserMistakes","setAllUserMistakes","UID","setUID","xhr","XMLHttpRequest","open","setRequestHeader","send","JSON","stringify","onload","parsedResponse","parse","responseText","console","log"],"sources":["/Users/justinas/Documents/repos/microgogool/client/src/Components/ContentSecComponents/MistakesTab.tsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\n\nimport UIDContext from 'src/UIDContext';\nconst key = require('key-creator');\n\n\ninterface allUserMistakes{\n    sectionNumber: number,\n    badSelectAnswers: badSelectAnswersObject[],\n    badDnDAnswers: badDnDAnswersObject[]\n}\ninterface badSelectAnswersObject{\n    questionTitle: string,\n    correctAnswer: string[],\n    userAnswer: string[]\n}\ninterface badDnDAnswersObject{\n    correctAnswer: string[],\n    possibleAnswer: string[],\n    questionTitle: string\n}\n\nfunction MistakesTab() {\n    \n    const [allUserMistakes, setAllUserMistakes] = useState<allUserMistakes[] | null>(null);\n\n    const { UID, setUID } = useContext(UIDContext);\n\n    useEffect(()=>{\n        let xhr = new XMLHttpRequest();\n        xhr.open(\"POST\", 'http://localhost:8080/getUserMistakes', true);\n        xhr.setRequestHeader('Content-Type', 'application/json');\n        xhr.send(JSON.stringify({\n            UID: UID\n        }));\n\n        xhr.onload = ()=>{\n            const parsedResponse = JSON.parse(xhr.responseText);\n            console.log(parsedResponse)\n            setAllUserMistakes(parsedResponse);\n        }\n    },[])\n\n    return (\n        <div className='mistakes-tab'>\n            <img src={require('../../Photos/error.png')} alt='error image'></img>\n            <p>Mistakes you have recently made</p>\n            <div className='mistakes-holder'>\n                <div className='mistake'>\n                    <p className='mistake-title'>Which one of these 3 words - \"clap\", \"say\" or \"bake\" - means \"kepti\"?</p>\n                    <p className='mistake-userAnswer'>Your answer: clap</p>\n                    <p className='mistake-correctAnswer'>Correct answer: bake</p>\n                </div>\n                <div className='mistake'>\n                    <p className='mistake-title'>Which one of these 3 words - \"clap\", \"say\" or \"bake\" - means \"kepti\"?</p>\n                    <p className='mistake-userAnswer'>Your answer: clap</p>\n                    <p className='mistake-correctAnswer'>Correct answer: bake</p>\n                </div>\n                <div className='mistake'>\n                    <p className='mistake-title'>Which one of these 3 words - \"clap\", \"say\" or \"bake\" - means \"kepti\"?</p>\n                    <p className='mistake-userAnswer'>Your answer: clap</p>\n                    <p className='mistake-correctAnswer'>Correct answer: bake</p>\n                </div>\n            </div>\n\n        </div>\n    );\n}\n\nexport default MistakesTab;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE9D,OAAOC,UAAU,MAAM,gBAAgB;AAAC;AACxC,MAAMC,GAAG,GAAGC,OAAO,CAAC,aAAa,CAAC;AAmBlC,SAASC,WAAW,GAAG;EAAA;EAEnB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGN,QAAQ,CAA2B,IAAI,CAAC;EAEtF,MAAM;IAAEO,GAAG;IAAEC;EAAO,CAAC,GAAGV,UAAU,CAACG,UAAU,CAAC;EAE9CF,SAAS,CAAC,MAAI;IACV,IAAIU,GAAG,GAAG,IAAIC,cAAc,EAAE;IAC9BD,GAAG,CAACE,IAAI,CAAC,MAAM,EAAE,uCAAuC,EAAE,IAAI,CAAC;IAC/DF,GAAG,CAACG,gBAAgB,CAAC,cAAc,EAAE,kBAAkB,CAAC;IACxDH,GAAG,CAACI,IAAI,CAACC,IAAI,CAACC,SAAS,CAAC;MACpBR,GAAG,EAAEA;IACT,CAAC,CAAC,CAAC;IAEHE,GAAG,CAACO,MAAM,GAAG,MAAI;MACb,MAAMC,cAAc,GAAGH,IAAI,CAACI,KAAK,CAACT,GAAG,CAACU,YAAY,CAAC;MACnDC,OAAO,CAACC,GAAG,CAACJ,cAAc,CAAC;MAC3BX,kBAAkB,CAACW,cAAc,CAAC;IACtC,CAAC;EACL,CAAC,EAAC,EAAE,CAAC;EAEL,oBACI;IAAK,SAAS,EAAC,cAAc;IAAA,wBACzB;MAAK,GAAG,EAAEd,OAAO,CAAC,wBAAwB,CAAE;MAAC,GAAG,EAAC;IAAa;MAAA;MAAA;MAAA;IAAA,QAAO,eACrE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAsC,eACtC;MAAK,SAAS,EAAC,iBAAiB;MAAA,wBAC5B;QAAK,SAAS,EAAC,SAAS;QAAA,wBACpB;UAAG,SAAS,EAAC,eAAe;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAA0E,eACtG;UAAG,SAAS,EAAC,oBAAoB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAsB,eACvD;UAAG,SAAS,EAAC,uBAAuB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAyB;MAAA;QAAA;QAAA;QAAA;MAAA,QAC3D,eACN;QAAK,SAAS,EAAC,SAAS;QAAA,wBACpB;UAAG,SAAS,EAAC,eAAe;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAA0E,eACtG;UAAG,SAAS,EAAC,oBAAoB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAsB,eACvD;UAAG,SAAS,EAAC,uBAAuB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAyB;MAAA;QAAA;QAAA;QAAA;MAAA,QAC3D,eACN;QAAK,SAAS,EAAC,SAAS;QAAA,wBACpB;UAAG,SAAS,EAAC,eAAe;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAA0E,eACtG;UAAG,SAAS,EAAC,oBAAoB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAsB,eACvD;UAAG,SAAS,EAAC,uBAAuB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAyB;MAAA;QAAA;QAAA;QAAA;MAAA,QAC3D;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ;EAAA;IAAA;IAAA;IAAA;EAAA,QAEJ;AAEd;AAAC,GA7CQC,WAAW;AAAA,KAAXA,WAAW;AA+CpB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module"}