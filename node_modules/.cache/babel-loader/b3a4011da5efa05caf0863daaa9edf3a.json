{"ast":null,"code":"var _jsxFileName = \"/Users/justinas/Documents/repos/microgogool/client/src/Components/ContentSecComponents/MistakesTab.tsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport UIDContext from 'src/UIDContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst key = require('key-creator');\nfunction MistakesTab() {\n  _s();\n  const [allUserMistakes, setAllUserMistakes] = useState(null);\n  const [noMistakes, ShowNoMistakes] = useState(false);\n  const {\n    UID,\n    setUID\n  } = useContext(UIDContext);\n  console.log(UID);\n  useEffect(() => {\n    let xhr = new XMLHttpRequest();\n    xhr.open(\"POST\", 'http://localhost:8080/getUserMistakes', true);\n    xhr.setRequestHeader('Content-Type', 'application/json');\n    xhr.send(JSON.stringify({\n      UID: UID\n    }));\n    xhr.onload = () => {\n      const parsedResponse = JSON.parse(xhr.responseText);\n      setAllUserMistakes(parsedResponse);\n    };\n  }, []);\n  useEffect(() => {\n    console.log(allUserMistakes);\n    if ((allUserMistakes === null || allUserMistakes === void 0 ? void 0 : allUserMistakes.length) == 0) ShowNoMistakes(true);\n  }, [allUserMistakes]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mistakes-tab\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: require('../../Photos/error.png'),\n      alt: \"error image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), noMistakes == true ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"no-mistakes\",\n      children: \"You haven't made any mistakes. Very good! Or is it..?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 33\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Mistakes you have recently made\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 120\n    }, this), allUserMistakes != null ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [allUserMistakes.map(specificSectionsMistakes => {\n        if (specificSectionsMistakes.badDnDAnswers.length != 0) {\n          return specificSectionsMistakes.badDnDAnswers.map(singleBadDnDAnswer => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mistakesTab-single-badAnswer\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"badAnswer-title\",\n                children: singleBadDnDAnswer.questionTitle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mistakes-tab-answers\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"mistakes-tab-wys\",\n                  children: \"Words given:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mistakes-tab-single-badAnswer-userAnsweredWords\",\n                  children: singleBadDnDAnswer.possibleAnswer.map(singleAnswer => {\n                    return /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: singleAnswer\n                    }, key.generate(), false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 70,\n                      columnNumber: 53\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"mistakes-tab-tca\",\n                  children: \"Correct order:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mistakes-tab-single-badAnswer-correctWords\",\n                  children: singleBadDnDAnswer.correctAnswer.map(singleAnswer => {\n                    return /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: singleAnswer\n                    }, key.generate(), false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 78,\n                      columnNumber: 53\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 37\n              }, this)]\n            }, key.generate(), true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 33\n            }, this);\n          });\n        }\n      }), allUserMistakes.map(specificSectionsMistakes => {\n        if (specificSectionsMistakes.badSelectAnswers.length != 0) {\n          console.log(specificSectionsMistakes.sectionNumber);\n          return specificSectionsMistakes.badSelectAnswers.map(singleBadSelectAnswer => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mistakesTab-single-badAnswer\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"badAnswer-title\",\n                children: singleBadSelectAnswer.questionTitle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mistakes-tab-answers\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"mistakes-tab-wys\",\n                  children: \"What you selected:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mistakes-tab-single-badAnswer-userAnsweredWords\",\n                  children: singleBadSelectAnswer.userAnswer.map(singleAnswer => {\n                    return /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: singleAnswer\n                    }, key.generate(), false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 101,\n                      columnNumber: 53\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"mistakes-tab-tca\",\n                  children: \"The correct answer/s:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mistakes-tab-single-badAnswer-correctWords\",\n                  children: singleBadSelectAnswer.correctAnswer.map(singleAnswer => {\n                    return /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: singleAnswer\n                    }, key.generate(), false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 109,\n                      columnNumber: 53\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 37\n              }, this)]\n            }, key.generate(), true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 33\n            }, this);\n          });\n        }\n      })]\n    }, void 0, true) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n_s(MistakesTab, \"5ZnppRzuKv02j1qBqPbuhSpaOyc=\");\n_c = MistakesTab;\nexport default MistakesTab;\nvar _c;\n$RefreshReg$(_c, \"MistakesTab\");","map":{"version":3,"names":["React","useContext","useEffect","useState","UIDContext","key","require","MistakesTab","allUserMistakes","setAllUserMistakes","noMistakes","ShowNoMistakes","UID","setUID","console","log","xhr","XMLHttpRequest","open","setRequestHeader","send","JSON","stringify","onload","parsedResponse","parse","responseText","length","map","specificSectionsMistakes","badDnDAnswers","singleBadDnDAnswer","questionTitle","possibleAnswer","singleAnswer","generate","correctAnswer","badSelectAnswers","sectionNumber","singleBadSelectAnswer","userAnswer"],"sources":["/Users/justinas/Documents/repos/microgogool/client/src/Components/ContentSecComponents/MistakesTab.tsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\n\nimport UIDContext from 'src/UIDContext';\nconst key = require('key-creator');\n\n\ninterface specificSectionsAllMistakes{\n    sectionNumber: number,\n    badSelectAnswers: badSelectAnswersObject[],\n    badDnDAnswers: badDnDAnswersObject[]\n}\ninterface badSelectAnswersObject{\n    questionTitle: string,\n    correctAnswer: string[],\n    userAnswer: string[]\n}\ninterface badDnDAnswersObject{\n    correctAnswer: string[],\n    possibleAnswer: string[],\n    questionTitle: string\n}\n\nfunction MistakesTab() {\n    \n    const [allUserMistakes, setAllUserMistakes] = useState<specificSectionsAllMistakes[] | null>(null);\n    const [noMistakes, ShowNoMistakes] = useState<boolean>(false);\n\n    const { UID, setUID } = useContext(UIDContext);\n    console.log(UID)\n\n    useEffect(()=>{\n        let xhr = new XMLHttpRequest();\n        xhr.open(\"POST\", 'http://localhost:8080/getUserMistakes', true);\n        xhr.setRequestHeader('Content-Type', 'application/json');\n        xhr.send(JSON.stringify({\n            UID: UID\n        }));\n\n        xhr.onload = ()=>{\n            const parsedResponse = JSON.parse(xhr.responseText);\n            setAllUserMistakes(parsedResponse);\n        }\n    },[])\n\n    useEffect(()=>{\n        console.log(allUserMistakes);\n        if(allUserMistakes?.length==0)ShowNoMistakes(true);\n    },[allUserMistakes])\n\n    return (\n        <div className='mistakes-tab'>\n            <img src={require('../../Photos/error.png')} alt='error image'></img>\n            \n            {noMistakes==true ? <p className='no-mistakes'>You haven't made any mistakes. Very good! Or is it..?</p> : <p>Mistakes you have recently made</p>}\n\n            {allUserMistakes!=null ? \n                <>\n                {/* .map for badDnDAnswers */}\n                {allUserMistakes.map((specificSectionsMistakes: specificSectionsAllMistakes)=>{\n                    if(specificSectionsMistakes.badDnDAnswers.length!=0){\n                        return specificSectionsMistakes.badDnDAnswers.map((singleBadDnDAnswer: badDnDAnswersObject)=>{\n                            return(\n                                <div className='mistakesTab-single-badAnswer' key={key.generate()}>\n                                    <p className='badAnswer-title'>{singleBadDnDAnswer.questionTitle}</p>\n                                    <div className='mistakes-tab-answers'>\n                                        <p className='mistakes-tab-wys'>Words given:</p>\n                                        <div className='mistakes-tab-single-badAnswer-userAnsweredWords'>\n                                            {singleBadDnDAnswer.possibleAnswer.map((singleAnswer: string)=>{\n                                                return(\n                                                    <p key={key.generate()}>{singleAnswer}</p>\n                                                )\n                                            })}\n                                        </div>\n                                        <p className='mistakes-tab-tca'>Correct order:</p>\n                                        <div className='mistakes-tab-single-badAnswer-correctWords'>\n                                            {singleBadDnDAnswer.correctAnswer.map((singleAnswer: string)=>{\n                                                return(\n                                                    <p key={key.generate()}>{singleAnswer}</p>\n                                                )\n                                            })}\n                                        </div>\n                                    </div>\n                                </div>\n                            )\n                        })\n                    }\n                })}\n                {/* .map for badSelectAnswers */}\n                {allUserMistakes.map((specificSectionsMistakes: specificSectionsAllMistakes)=>{\n                    if(specificSectionsMistakes.badSelectAnswers.length!=0){\n                        console.log(specificSectionsMistakes.sectionNumber)\n                        return specificSectionsMistakes.badSelectAnswers.map((singleBadSelectAnswer: badSelectAnswersObject)=>{\n                            return(\n                                <div className='mistakesTab-single-badAnswer' key={key.generate()}>\n                                    <p className='badAnswer-title'>{singleBadSelectAnswer.questionTitle}</p>\n                                    <div className='mistakes-tab-answers'>\n                                        <p className='mistakes-tab-wys'>What you selected:</p>\n                                        <div className='mistakes-tab-single-badAnswer-userAnsweredWords'>\n                                            {singleBadSelectAnswer.userAnswer.map((singleAnswer: string)=>{\n                                                return(\n                                                    <p key={key.generate()}>{singleAnswer}</p>\n                                                )\n                                            })}\n                                        </div>\n                                        <p className='mistakes-tab-tca'>The correct answer/s:</p>\n                                        <div className='mistakes-tab-single-badAnswer-correctWords'>\n                                            {singleBadSelectAnswer.correctAnswer.map((singleAnswer: string)=>{\n                                                return(\n                                                    <p key={key.generate()}>{singleAnswer}</p>\n                                                )\n                                            })}\n                                        </div>\n                                    </div>\n                                </div>\n                            )\n                        })\n                    }\n                })}\n                </>\n            : null}\n        </div>\n    );\n}\n\nexport default MistakesTab;"],"mappings":"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"},"metadata":{},"sourceType":"module"}