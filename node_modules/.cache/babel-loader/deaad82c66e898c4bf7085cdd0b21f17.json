{"ast":null,"code":"var _jsxFileName = \"/Users/justinas/Documents/repos/microgogool/client/src/Components/ContentSecComponents/LessonOverview.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst key = require('key-creator');\nfunction LessonOverview(props) {\n  _s();\n  useEffect(() => {\n    console.log(props.lessonData.lessonOverview);\n    let xhr = new XMLHttpRequest();\n    xhr.open(\"POST\", 'http://localhost:8080/finishedLessonData', true);\n    xhr.setRequestHeader('Content-Type', 'application/json');\n    xhr.send(JSON.stringify({\n      badAnswersArr: props.lessonData.lessonOverview.badAnswersArr,\n      goodAnswersArr: props.lessonData.lessonOverview.goodAnswersArr\n    }));\n    xhr.onload = () => {\n      const parsedResponse = JSON.parse(xhr.responseText);\n      console.log(parsedResponse);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"lesson-overview\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lesson-overview-results\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"lesson-overview-title\",\n        children: \"These are your results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"percentage\",\n        children: [\"Percentage of answers gotten right: \", props.lessonData.lessonOverview.goodAnswersArr.length / (props.lessonData.lessonOverview.goodAnswersArr.length + props.lessonData.lessonOverview.badAnswersArr.length) * 100, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"wrongQ\",\n        children: \"The question/s you have got wrong:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), props.lessonData.lessonOverview.badAnswersArr.length == 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"maxScore\",\n        children: \"congratulations on the max score!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 76\n      }, this) : null, props.lessonData.lessonOverview.badAnswersArr.map((badAnswer, index) => {\n        if (badAnswer.hasOwnProperty('questionObject') && (badAnswer.questionObject.questionFormat == 'SelectOne' || badAnswer.questionObject.questionFormat == 'SelectMultiple')) {\n          // singleSelectBadAnswer type\n          console.log('SELECT');\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"single-badAnswer\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"badAnswer-title\",\n              children: badAnswer.questionTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"answers\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"wys\",\n                children: \"What you selected:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"single-badAnswer-userAnsweredWords\",\n                children: badAnswer.answeredWord.map((singleAnswer, i) => {\n                  return /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: singleAnswer\n                  }, key.generate(), false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 67,\n                    columnNumber: 49\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"tca\",\n                children: \"The correct answer/s:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"single-badAnswer-correctWords\",\n                children: badAnswer.questionObject.correctAnswer.map((singleAnswer, i) => {\n                  return /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: singleAnswer\n                  }, key.generate(), false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 49\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 33\n            }, this)]\n          }, key.generate(), true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this);\n        } else if (badAnswer.questionFormat == 'DragAndDrop') {\n          // singleDnDBadAnswer type\n          console.log('DND');\n          console.log(badAnswer);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"single-badAnswer\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"badAnswer-title\",\n              children: badAnswer.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"answers\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"wys\",\n                children: \"Words given:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"single-badAnswer-userAnsweredWords\",\n                children: badAnswer.possibleAnswers.map((singleAnswer, i) => {\n                  return /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: singleAnswer\n                  }, key.generate(), false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 94,\n                    columnNumber: 49\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"tca\",\n                children: \"Correct order:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"single-badAnswer-correctWords\",\n                children: badAnswer.correctAnswer.map((singleAnswer, i) => {\n                  return /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: singleAnswer\n                  }, key.generate(), false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 49\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 33\n            }, this)]\n          }, parseFloat(badAnswer.title), true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this);\n        }\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"lesson-overview-backBtn\",\n        onClick: () => {\n          props.lessonData.setLessonOverview(false);\n          props.returnToMain();\n        },\n        children: \"Back to the main path\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n_s(LessonOverview, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = LessonOverview;\nexport default LessonOverview;\nvar _c;\n$RefreshReg$(_c, \"LessonOverview\");","map":{"version":3,"names":["React","useEffect","key","require","LessonOverview","props","console","log","lessonData","lessonOverview","xhr","XMLHttpRequest","open","setRequestHeader","send","JSON","stringify","badAnswersArr","goodAnswersArr","onload","parsedResponse","parse","responseText","length","map","badAnswer","index","hasOwnProperty","questionObject","questionFormat","questionTitle","answeredWord","singleAnswer","i","generate","correctAnswer","title","possibleAnswers","parseFloat","setLessonOverview","returnToMain"],"sources":["/Users/justinas/Documents/repos/microgogool/client/src/Components/ContentSecComponents/LessonOverview.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nconst key = require('key-creator');\n\ninterface props{\n    lessonData: any\n    returnToMain: any\n}\ninterface singleSelectBadAnswer{\n    questionTitle: string,\n    questionObject: {\n        correctAnswer: string[],\n        possibleAnswers: string[],\n        questionFormat: string,\n        title: string\n    },\n    answeredWord: string[]\n}\ninterface singleDnDBadAnswer{\n    correctAnswer: string[],\n    possibleAnswers: string[],\n    questionFormat: string,\n    title: string\n}\n\ninterface anyBadAnswer extends singleSelectBadAnswer, singleDnDBadAnswer {}\n\n\n\nfunction LessonOverview(props: props) {\n\n    useEffect(()=>{\n        console.log(props.lessonData.lessonOverview);\n        let xhr = new XMLHttpRequest();\n        xhr.open(\"POST\", 'http://localhost:8080/finishedLessonData', true);\n        xhr.setRequestHeader('Content-Type', 'application/json');\n        xhr.send(JSON.stringify({\n            badAnswersArr: props.lessonData.lessonOverview.badAnswersArr,\n            goodAnswersArr: props.lessonData.lessonOverview.goodAnswersArr\n        }));\n\n        xhr.onload = ()=>{\n            const parsedResponse = JSON.parse(xhr.responseText);\n            console.log(parsedResponse)\n        }\n    },[])\n\n    return (\n        <div className='lesson-overview'>\n            <div className='lesson-overview-results'>\n            <p className='lesson-overview-title'>These are your results</p>\n\n                <p className='percentage'>Percentage of answers gotten right: {props.lessonData.lessonOverview.goodAnswersArr.length / (props.lessonData.lessonOverview.goodAnswersArr.length + props.lessonData.lessonOverview.badAnswersArr.length) * 100}%</p>\n                <p className='wrongQ'>The question/s you have got wrong:</p>\n                {props.lessonData.lessonOverview.badAnswersArr.length==0 ? <p className='maxScore'>congratulations on the max score!</p> : null}\n                {props.lessonData.lessonOverview.badAnswersArr.map((badAnswer: anyBadAnswer, index: number)=>{\n                    if(badAnswer.hasOwnProperty('questionObject') && (badAnswer.questionObject.questionFormat == 'SelectOne' || badAnswer.questionObject.questionFormat == 'SelectMultiple')){\n                        // singleSelectBadAnswer type\n                        console.log('SELECT')\n                        return(\n                            <div className='single-badAnswer' key={key.generate()}>\n                                <p className='badAnswer-title'>{badAnswer.questionTitle}</p>\n                                <div className='answers'>\n                                    <p className='wys'>What you selected:</p>\n                                    <div className='single-badAnswer-userAnsweredWords'>\n                                        {badAnswer.answeredWord.map((singleAnswer: string, i: number)=>{\n                                            return(\n                                                <p key={key.generate()}>{singleAnswer}</p>\n                                            )\n                                        })}\n                                    </div>\n                                    <p className='tca'>The correct answer/s:</p>\n                                    <div className='single-badAnswer-correctWords'>\n                                        {badAnswer.questionObject.correctAnswer.map((singleAnswer: string, i: number)=>{\n                                            return(\n                                                <p key={key.generate()}>{singleAnswer}</p>\n                                            )\n                                        })}\n                                    </div>\n                                </div>\n                            </div>\n                        )\n                    } else if(badAnswer.questionFormat=='DragAndDrop'){\n                        // singleDnDBadAnswer type\n                        console.log('DND');\n                        console.log(badAnswer)\n                        return(\n                            <div className='single-badAnswer' key={parseFloat(badAnswer.title)}>\n                                <p className='badAnswer-title'>{badAnswer.title}</p>\n                                <div className='answers'>\n                                    <p className='wys'>Words given:</p>\n                                    <div className='single-badAnswer-userAnsweredWords'>\n                                        {badAnswer.possibleAnswers.map((singleAnswer: string, i: number)=>{\n                                            return(\n                                                <p key={key.generate()}>{singleAnswer}</p>\n                                            )\n                                        })}\n                                    </div>\n                                    <p className='tca'>Correct order:</p>\n                                    <div className='single-badAnswer-correctWords'>\n                                        {badAnswer.correctAnswer.map((singleAnswer: string, i: number)=>{\n                                            return(\n                                                <p key={key.generate()}>{singleAnswer}</p>\n                                            )\n                                        })}\n                                    </div>\n                                </div>\n                            </div>\n                        )\n                    }\n            \n                })}\n                <button className='lesson-overview-backBtn' onClick={()=>{props.lessonData.setLessonOverview(false);props.returnToMain()}}>Back to the main path</button>\n            </div>\n        </div>\n    );\n}\n\nexport default LessonOverview;"],"mappings":"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"},"metadata":{},"sourceType":"module"}